INFO:     Will watch for changes in these directories: ['/Users/admin/Project/HauntedHackathon/werewolf_arena/backend']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [35555] using WatchFiles
INFO:     Started server process [35558]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:56293 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56343 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56469 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56594 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56623 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56675 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56684 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
医生 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
狼人 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:56684 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 56709) - "WebSocket /ws/session_20251031_225511" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 56711) - "WebSocket /ws/session_20251031_225511" [accepted]
INFO:     connection open
STARTING ROUND: 0
狼人正在选择淘汰目标。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k (Werewolf) did not return a valid eliminate target, using default
MiniMax-M1-80k eliminated Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_eliminate by MiniMax-M1-80k
医生正在选择保护目标。
WebSocket connected for session session_20251031_225511. Total connections: 1
WebSocket connected for session session_20251031_225511. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 119 字符
[LLM原始响应开始]
{
"reasoning": "由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。",
"protect": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 119 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。",
"protect":...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。",
"protect": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 119 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。', 'protect': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第一轮，没有任何信息可以判断哪个玩家更脆弱或更有可能是狼人。因此，我将随机选择一个玩家进行保护。我选择了Ring-flash-2.0。', 'protect': 'Ring-flash-2.0'}
[LLM结果] 提取键 'protect': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
Kimi-Dev-72B protected Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_protect by Kimi-Dev-72B
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:56747 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 145 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。",
"investigate": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 145 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。",
"investigate": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 145 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。', 'investigate': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。', 'investigate': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。', 'investigate': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。', 'investigate': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，在第一轮夜晚阶段没有任何游戏信息可供参考，因此我需要随机选择一名玩家进行调查。考虑到游戏平衡性和公平性，我选择调查GLM-4.6，这样可以获得一个初始身份信息，为后续的推理和投票提供基础。', 'investigate': 'GLM-4.6'}
[LLM结果] 提取键 'investigate': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[WebSocket] 夜间行动通知已发送: night_investigate by DeepSeek-V3.2

夜晚阶段没有人被淘汰（医生保护成功）。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 126 字符
[LLM原始响应开始]
{
"reasoning": "当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 126 字符
[JSON解析] 输入文本预览: {
"reasoning": "当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 126 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '当前是第0轮，游戏刚开始，我作为村民需要谨慎发言以避免过早暴露身份。由于主持人宣布夜晚无人被淘汰，这可能是医生保护成功，也可能狼人尚未行动。此时优先倾听其他玩家的反应可能会更有利于后续推理。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 160 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 160 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 160 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被我保护了。白天阶段，我需要分享这个信息，但也要避免过早暴露身份。目前是第0轮辩论刚开始，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。不过，现在还没有人发言，所以我出价1，表示有些基本想法分享。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
INFO:     127.0.0.1:56801 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 90 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 90 字符
[JSON解析] 输入文本: {
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 90 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，但目前讨论尚未开始，我应该先观察其他玩家的发言，避免过早暴露身份。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 122 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 122 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 122 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与讨论。现在是第0轮，信息非常有限，医生成功保护了某人，但不知道是谁。我应该先观察其他玩家的发言，收集更多信息，而不是急于表态。保持低调可以避免成为狼人的目标。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM响应] 成功获取响应，长度: 273 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。"
  , "say": "出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 273 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。"
  , "say": "出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。"
}'
[JSON字符串解析] 文本长度: 273 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
[JSON解析] 最终结果: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，夜晚保护成功说明狼人昨晚的目标被保护了。在白天阶段，我需要分享这个信息来引导村民们讨论，但同时要避免过早暴露自己的身份。目前是第一轮，大家都还没有发言，我可以选择先观察，但如果有玩家讨论到医生或保护情况，我可能需要发言。由于现在辩论刚开始，我可能会简单的出价1utralala来表示我有一些信息想要分享，但暂时保留内容。', 'say': '出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。'}
Kimi-Dev-72B (Doctor): 出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。
[RealtimeLogger] Initialized session session_20251031_225511, log file: logs/session_20251031_225511/realtime_logs.jsonl
[RealtimeLogger] session_20251031_225511 [action] Kimi-Dev-72B 发言: 出价1utralala。我们现在已经知道昨晚没有人死亡，说明医生保护成功了。这能说明一些事情。但我现在还不想说太多，我先出价，看其他人的发言情况。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:56915 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 153 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 153 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 153 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "Kimi-Dev-72B的发言中提到'出价1utralala'，这句话看起来像是无意义的词语组合，可能是故意制造混乱或掩盖真实意图。作为村民，我需要支持清晰和合理的发言，因此决定投票淘汰Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:57005 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 215 字符
[LLM原始响应开始]
{
  "reasoning": "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 215 字符
[JSON解析] 输入文本预览: {
  "reasoning": "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 215 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "现在是第0轮辩论阶段，我注意到Kimi-Dev-72B的发言有些模糊不清。他提到了医生保护成功，但没有提供任何实质性信息或分析，只是说'不想说太多'。这种模糊的发言可能是狼人试图隐藏身份的表现。作为村民，我认为我们应该更加透明地分享信息，而不是保持神秘。因此，我决定投票给Kimi-Dev-72B，希望他能提供更多信息来证明自己的身份。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:57036 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
INFO:     connection closed
INFO:     ('127.0.0.1', 57152) - "WebSocket /ws/session_20251031_225511" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 57154) - "WebSocket /ws/session_20251031_225511" [accepted]
INFO:     connection open
WebSocket disconnected for session session_20251031_225511. Remaining connections: 1
WebSocket disconnected for session session_20251031_225511
WebSocket disconnected for session session_20251031_225511. Remaining connections: 0
WebSocket disconnected for session session_20251031_225511
WebSocket connected for session session_20251031_225511. Total connections: 1
WebSocket connected for session session_20251031_225511. Total connections: 2
INFO:     127.0.0.1:57166 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1072 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1072 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 1072 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，昨晚我保护了Ring-flash-2.0，结果没有人死亡。这说明狼人昨晚攻击的目标就是Ring-flash-2.0。今天白天，狼人可能会试图转移注意力，让其他人怀疑Ring-flash-2.0。但是，作为医生，我有责任保护村民，昨晚的保护是成功的。现在，我需要找出狼人。狼人可能会在白天发言时攻击其他玩家，或者试图让村民投票淘汰错误的人。在当前的玩家中，除了Ring-flash-2.0，其他人都是潜在的狼人。但是，由于昨晚的保护，狼人昨晚的攻击失败了，所以他们今天可能会试图让村民投票淘汰Ring-flash-2.0，以为他被攻击了。但是实际上，Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，所以狼人昨晚的攻击目标是Ring-flash-2.0。因此，Ring-flash-2.0可能是狼人的目标，但不是狼人。所以，狼人可能是其他玩家。在剩下的玩家中，MiniMax-M1-80k、Qwen3-32B、DeepSeek-V3.2、GLM-4.6都是可能的狼人。但是，由于我是医生，我需要根据他们的发言来判断。如果某个玩家在白天发言时试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于昨晚没有人死亡，狼人昨晚的攻击没有成功，所以他们今天会试图让村民投票淘汰Ring-flash-2.0。但是，作为医生，我知道Ring-flash-2.0是安全的。因此，我应该投票淘汰那些试图让村民相信Ring-flash-2.0被攻击的玩家。但是，由于我昨晚保护了Ring-flash-2.0，狼人昨晚的攻击目标是Ring-flash-2.0。因此，狼人可能是其他玩家。在剩下的玩家中，如果某个玩家在白天发言时没有提到昨晚的保护，而是试图让村民相信Ring-flash-2.0是被攻击的，那么他可能是狼人。但是，由于我是医生，我不能透露昨晚保护了谁。因此，我需要根据其他玩家的发言来判断。在当前的情况下，由于没有其他信息，我可能会投票淘汰一个发言不自然或者有狼人特征的玩家。例如，如果某个玩家在白天发言时试图转移注意力，或者攻击其他玩家，那么他可能是狼人。但是，由于没有具体信息，我可能会投票淘汰一个看起来可疑的玩家。在当前的玩家中，我选择投票淘汰MiniMax-M1-80k，因为他可能是狼人。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:57200 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
INFO:     connection closed
WebSocket disconnected for session session_20251031_225511. Remaining connections: 1
WebSocket disconnected for session session_20251031_225511
WebSocket disconnected for session session_20251031_225511. Remaining connections: 0
WebSocket disconnected for session session_20251031_225511
INFO:     127.0.0.1:57362 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57435 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 234 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 234 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 234 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为预言家，我首夜查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前游戏刚开始，信息有限，但Kimi-Dev-72B在发言中表现出异常：他提到'医生保护成功能说明一些事情'却又说不愿多谈，这种欲言又止的态度可能是在试探或掩饰。考虑到狼人首夜可能故意不刀人以制造混乱，而Kimi的模糊发言有带节奏的嫌疑，我决定本轮先投票给Kimi-Dev-72B以观察反应。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 91 字符
[LLM原始响应开始]
{
"reasoning": "游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 91 字符
[JSON解析] 输入文本: {
"reasoning": "游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 91 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，我选择保持谨慎，先观察其他玩家的发言和行为。目前没有足够的信息进行具体分析，因此我认为暂时不需要优先发言。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
INFO:     127.0.0.1:57579 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 100 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 100 字符
[JSON解析] 输入文本: {
"reasoning": "作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 100 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言。目前游戏刚开始，信息有限，医生保护成功是唯一线索。我应该先观察其他玩家的发言，收集更多信息，而不是急于表达观点。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 122 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 122 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 122 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于排除嫌疑对象。考虑到目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论以引导局势，但不必过于急切暴露身份。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:57636 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57737 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 407 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。",
  "say": "大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 407 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。",
  "say": "大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。"
}'
[JSON字符串解析] 文本长度: 407 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我掌握了GLM-4.6是村民的重要信息，这有助于缩小嫌疑范围。目前只有Kimi-Dev-72B进行了简短发言，我需要适当参与讨论但不急于暴露身份。考虑到医生首夜保护成功，这可能是狼人选择了有身份的玩家作为目标，或者是新手狼人的随机选择。我打算先观察其他玩家的发言，特别是那些尚未发言的玩家，从中寻找可疑行为或不一致之处。', 'say': '大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。'}
DeepSeek-V3.2 (Seer): 大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。
[RealtimeLogger] session_20251031_225511 [action] DeepSeek-V3.2 发言: 大家好，我是DeepSeek-V3.2。Kimi-Dev-72B刚才提到医生保护成功的情况，这确实是重要信息。既然没有人被淘汰，说明医生昨晚做出了正确的选择。我建议大家都积极参与讨论，特别是还没发言的Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k。我们可以通过分析每个人的发言逻辑和投票意向来寻找线索。另外，我想提醒大家，第一天投票很关键，希望大家都能给出合理的理由，不要盲目跟票。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 215 字符
[LLM原始响应开始]
{
  "reasoning": "根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 215 字符
[JSON解析] 输入文本预览: {
  "reasoning": "根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 215 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '根据目前的信息，Kimi-Dev-72B在发言中提到‘出价1utralala’，这看起来像是试图引入无关或混乱的词汇，可能是在分散注意力或制造假象。此外，他的发言逻辑略显模糊，没有明确表达对医生保护成功的看法，却突然提到‘出价’，显得与当前情境不符。这可能是狼人行为，通过异常发言引起怀疑。因此，我决定投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:58059 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 245 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 245 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 245 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每个人的发言。目前只有Kimi-Dev-72B和DeepSeek-V3.2发言了。Kimi-Dev-72B的发言很简短，只是提到医生保护成功，但表示不想说太多，这种保留态度让我有些怀疑。DeepSeek-V3.2的发言相对更积极，鼓励大家参与讨论。在信息有限的情况下，我倾向于投票给发言较少、态度保留的Kimi-Dev-72B，因为狼人可能会在初期保持低调，避免暴露自己。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:58254 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 408 字符
[LLM原始响应开始]
{
  "reasoning": "首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 408 字符
[JSON解析] 输入文本预览: {
  "reasoning": "首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flas...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 408 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，作为医生，我昨晚保护了Ring-flash-2.0，而主持人宣布无人死亡，这说明狼人昨晚的目标是我保护的Ring-flash-2.0。因此，Ring-flash-2.0很可能是狼人的目标，但被我保护了。在第0轮辩论中，DeepSeek-V3.2表现得非常积极，他提到了医生保护成功的情况，并建议大家积极参与讨论。他的发言可能是在试图引导话题，甚至可能是在转移注意力。另外，他没有提到自己昨晚的行为，比如是否是狼人。而其他玩家如Qwen3-32B和MiniMax-M1-80k尚未发言，他们可能在观察。GLM-4.6也没有发言。综合考虑，DeepSeek-V3.2的积极发言可能是在掩饰自己的狼人身份，他可能是昨晚的狼人之一，选择攻击Ring-flash-2.0但被保护。因此，我投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:58633 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:58875 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58954 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59045 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 343 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 343 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 343 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查验了GLM-4.6的身份是村民，因此可以暂时排除他的狼人嫌疑。目前Kimi-Dev-72B已经发言，但他的发言内容较为模糊，只是简单提及医生保护成功的事实，没有提供太多实质性信息。考虑到游戏刚开始，信息有限，我决定优先关注尚未发言的玩家。Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0都还没有发言，其中Ring-flash-2.0在之前的讨论中也没有表现出积极参与的迹象。在狼人杀游戏中，异常沉默的玩家往往值得警惕，因为狼人可能会选择低调避免暴露。因此，我暂时将投票目标锁定在Ring-flash-2.0身上，以观察他的反应和后续发言。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
Qwen3-32B 投票淘汰 Kimi-Dev-72B
Ring-flash-2.0 投票淘汰 Qwen3-32B
GLM-4.6 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 Qwen3-32B
Kimi-Dev-72B 投票淘汰 DeepSeek-V3.2
DeepSeek-V3.2 投票淘汰 Ring-flash-2.0

没有达到多数票，因此没有人被淘汰。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:59195 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 632 字符
[LLM原始响应开始]
{
"reasoning": "从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。",
"summary": "我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 632 字符
[JSON解析] 输入文本预览: {
"reasoning": "从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。",
"summary": "我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。"
}'
[JSON字符串解析] 文本长度: 632 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
[JSON解析] 直接解析结果: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
[JSON解析] 最终结果: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
[LLM成功] 返回有效结果: {'reasoning': '从辩论中，我了解到Kimi-Dev-72B没有直接透露太多信息，而是倾向于观察和等待，这种行为可能隐藏着其真实身份，比如可能是狼人企图制造和平假象，也可能是医生或预言家在衡量局势。DeepSeek-V3-2.2试图引导大家积极参与讨论以建立信任并推动游戏进展，但他的发言较为中立和引导性，尚未提供具体身份证据。本轮关键是没有淘汰任何玩家，说明多数玩家选择保留判断和观望，这对狼人来说是有利的，但也需要特别警惕他们可能结成战术同盟。此外，Ring-flash-2.0、MiniMax-M1-80k和Qwen3-32B较为沉默，这种低调态度可能是一种策略或者掩饰，也可能代表他们尚未准备好发言或行动。需要继续观察这些玩家行为的一致性，形成下一步的战略判断。', 'summary': '我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。'}
Qwen3-32B summary: 我在本轮中记录了Kimi-Dev-72B只是简单提到医生保护成功，没有进一步展开内容，这种谨慎可能源于隐藏身份的需要；DeepSeek-V3-2.2呼吁更多讨论，并表现得相对开放和积极，但尚未透露明显线索。另外注意到Ring-flash-2.0、MiniMax-M1-80k和我一样未发言，他们的沉默可能意味着是在试探局势，也可能是战术行为。这一轮没有达成淘汰，整体气氛较为保守，表明大部分玩家还没有找到公认的狼人嫌疑对象，但也导致信息推进缓慢。我的下一目标是结合后续夜晚的信息寻找更清晰的推理路径，并尝试率先打破僵局，推动讨论朝向实质性进展。
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[LLM响应] 成功获取响应，长度: 501 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝",
"summary": "我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 501 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝",
"summary": "我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝"
}'
[JSON字符串解析] 文本长度: 501 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
[JSON解析] 最终结果: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，保护了Ring-flash-2.0，晚上没有人淘汰，说明医生选择正确。白天阶段投票eralsessel，但没成功。狼人可能在害害怕我昨天保护的人。看看谁可能在昨晚被狼人选作目标。已知狼人数量，淘汰Plan是应该 Printable Wolf。目前 gameState里还剩6个人。狼人失败了一次暗杀，应该会更谨慎。我应该更提高警惕，观察狼人的下一步行动。还要注意其他玩家的发言，如果预言家出现，他的信息需要参考。｝', 'summary': '我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝'}
INFO:     127.0.0.1:59348 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 469 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。",
"summary": "我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 469 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示G...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。",
"summary": "我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。"
}'
[JSON字符串解析] 文本长度: 469 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我需要仔细分析首轮辩论中的发言模式。Kimi-Dev-72B主动提起医生保护成功并出价投票，表现出积极推动游戏的姿态，但没有提供具体推理依据。我的查验显示GLM-4.6是村民，这是可靠信息。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默需要重点关注，特别是Ring-flash-2.0作为我投票对象却未发言的行为很可疑。医生保护成功意味着狼人的击杀目标被正确预判，医生可能已经掌握了某些线索。', 'summary': '我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。'}
INFO:     127.0.0.1:59407 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 620 字符
[LLM原始响应开始]
{
"reasoning": "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。",
"summary": "我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 620 字符
[JSON解析] 输入文本预览: {
"reasoning": "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。",
"summary": "我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。"
}'
[JSON字符串解析] 文本长度: 620 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
[JSON解析] 直接解析结果: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
[JSON解析] 最终结果: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
[LLM成功] 返回有效结果: {'reasoning': "我是一名村民，在第一轮辩论中，我投票给了Kimi-Dev-72B，因为他开场就提及医生保护成功却不愿深入分析，显得不够诚坦。他的'出价1utralala'发言也有些奇怪且不明确。不过，由于没有形成多数票，Kimi-Dev-72B仍然留在游戏中。DeepSeek-V3.2的表现则更值得信任，他逻辑清晰地分析了医生保护成功的重要性，并呼吁大家积极参与讨论，这种态度符合好人阵营的行事风格。我注意到Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k这三名玩家在辩论中保持沉默，这种异常安静可能是隐藏身份的策略，也可能只是观察态度，需要后续轮次进一步分析他们的行为模式来做出判断。", 'summary': '我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。'}
GLM-4.6 summary: 我是GLM-4.6，一名村民。在第一轮辩论中，我注意到Kimi-Dev-72B的发言过于保守且有些反常，他提到了医生保护成功却不愿深入分析，这让我产生了怀疑，因此我投票淘汰了他。DeepSeek-V3.2则表现出了积极推动讨论的态度，他的发言逻辑清晰，呼吁大家参与分析，这让我觉得他可能是好人阵营的一员。遗憾的是，Kimi-Dev-72B、MiniMax-M1-80k、Ring-flash-2.0和Qwen3-32B这几位玩家在辩论中表现较为保守或完全沉默，这让我难以判断他们的真实身份。在接下来的游戏中，我会特别关注他们的发言和投票行为，以便更好地识别潜在的狼队友。
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
Kimi-Dev-72B summary: 我是医生，保护了Ring-flash-2.0使得昨晚没有死亡。DeepSeek通话中提起保护成功，显得很关注。其他几个玩家发言积极。投票环节.removeAll unable_each plano elimination，但ordo有可能明天被再次针对。我需要保持清醒，继续关注每个玩家的可疑行为。预言家还未出现，可能选择沉默，需要注意 eskphern.Messages。狼人的下一步目标 uncertain Feexin Safe Play DeepAuth windSoul，我的保护目标选择需要仔细。｝
DeepSeek-V3.2 summary: 我作为预言家查验了GLM-4.6确认其为村民。Kimi-Dev-72B是首个发言者，主动提起医生保护并出价投票，但缺乏详细推理。我注意到Ring-flash-2.0全程未发言却成为我的投票对象，这让我对其身份产生怀疑。Qwen3-32B和MiniMax-M1-80k也未参与讨论，这种沉默在首轮游戏中值得警惕。医生成功保护说明其对局势有一定判断，但具体身份仍不明朗。投票未达成多数表明玩家间缺乏共识，需要在下轮更积极地引导讨论。
第0轮结束。
STARTING ROUND: 1
狼人正在选择淘汰目标。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k (Werewolf) did not return a valid eliminate target, using default
MiniMax-M1-80k eliminated Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_eliminate by MiniMax-M1-80k
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 286 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。",
"protect": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 286 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。",
"protect": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 286 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。', 'protect': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚，我保护了Ring-flash-2.0，使得昨晚没有死亡。投票环节DeepSeek-V3.2被提出来讨论，但最后没有达到多数票。由于狼人会尝试攻击关键角色，比如预言家或者医生自己。而预言家还未公开身份，狼人可能会针对医生或者可能的预言家。考虑到DeepSeek-V3.2在讨论中被关注，如果他是预言家或者关键角色，狼人可能会再次针对他。而我自己作为医生，也是狼人的目标之一。但是保护自己可能会暴露身份。综合考虑，选择保护DeepSeek-V3.2，以防他被狼人攻击。', 'protect': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'protect': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
Kimi-Dev-72B protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by Kimi-Dev-72B
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:59506 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59592 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 264 字符
[LLM原始响应开始]
{
"reasoning": "在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。",
"investigate": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 264 字符
[JSON解析] 输入文本预览: {
"reasoning": "在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-fla...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。",
"investigate": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 264 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。', 'investigate': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。', 'investigate': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。', 'investigate': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。', 'investigate': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在首轮游戏中，Kimi-Dev-72B作为首个发言者主动提及医生保护并推动投票，但缺乏实质性推理，这种过度引导的行为在狼人杀中常见于狼人伪装积极。同时，Ring-flash-2.0全程沉默且未参与投票，异常被动可能是在隐藏身份。Qwen3-32B和MiniMax-M1-80k也未发言，但Kimi的主动性与沉默形成对比更值得警惕。我已查验GLM-4.6为村民，因此优先调查行为最矛盾的Kimi-Dev-72B，以确认其是否狼人。', 'investigate': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'investigate': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_investigate by DeepSeek-V3.2

[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'Ring-flash-2.0', 'GLM-4.6']
Player Qwen3-32B not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'Ring-flash-2.0', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'Ring-flash-2.0', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'Ring-flash-2.0', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'Ring-flash-2.0', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Qwen3-32B。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 171 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 171 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 171 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要在白天阶段提供信息以帮助村民识别狼人。昨晚我保护了DeepSeek-V3.2，但Qwen3-32B被狼人淘汰了。现在，我应该分享我的保护信息，并分析狼人的可能目标。同时，我需要观察其他玩家的发言，看是否有狼人的迹象。因此，我出价1来分享我的保护情况和对局势的分析。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
INFO:     127.0.0.1:59681 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 136 字符
[LLM原始响应开始]
{
"reasoning": "现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 136 字符
[JSON解析] 输入文本预览: {
"reasoning": "现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 136 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是第1轮辩论，我们需要分析昨晚Qwen3-32B被淘汰的情况。作为村民，我应该积极参与讨论，分享我的观察和推理，帮助好人阵营找出狼人。我有一些关于昨晚情况的想法，也想听听其他玩家的分析，所以我选择适度参与。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
GLM-4.6 bid: 2
INFO:     127.0.0.1:59701 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
医生 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
狼人 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
STARTING ROUND: 0
狼人正在选择淘汰目标。
INFO:     127.0.0.1:59701 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 59703) - "WebSocket /ws/session_20251031_225913" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 59705) - "WebSocket /ws/session_20251031_225913" [accepted]
INFO:     connection open
WebSocket connected for session session_20251031_225913. Total connections: 1
WebSocket connected for session session_20251031_225913. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 117 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。",
"bid": "3"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 117 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。",
"bid": "3"
}'
[JSON字符串解析] 文本长度: 117 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。', 'bid': '3'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。', 'bid': '3'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。', 'bid': '3'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。', 'bid': '3'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握了两个重要信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要引导讨论并保护关键角色，同时找出可疑的狼人。', 'bid': '3'}
[LLM结果] 提取键 'bid': 3
[LLM成功] 返回有效结果: 3
DeepSeek-V3.2 bid: 3
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:59739 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59789 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 156 字符
[LLM原始响应开始]
{
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。",
"remove": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 156 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。",
"remove": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 156 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。', 'remove': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。由于这是第一轮夜晚，没有任何玩家身份信息，我只能随机选择一名玩家。考虑到游戏平衡，我选择淘汰Kimi-Dev-72B，因为随机选择不会暴露任何模式，同时减少一名潜在威胁。', 'remove': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'remove': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
DeepSeek-V3.2 eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by DeepSeek-V3.2
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected DeepSeek-V3.2
MiniMax-M1-80k protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 76 字符
[LLM原始响应开始]
{
"reasoning": "由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。",
"investigate": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 76 字符
[JSON解析] 输入文本: {
"reasoning": "由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。",
"investigate": "Qwen3-32B"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。",
"investigate": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 76 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。', 'investigate': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第一轮，没有可用信息，我随机选择了一个玩家进行调查。', 'investigate': 'Qwen3-32B'}
[LLM结果] 提取键 'investigate': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B

[调试] 成功从current_players中移除玩家: Kimi-Dev-72B, 剩余玩家: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'GLM-4.6', 'Ring-flash-2.0', 'Qwen3-32B']
Player Kimi-Dev-72B not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'GLM-4.6', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'GLM-4.6', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'GLM-4.6', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'GLM-4.6', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Kimi-Dev-72B。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 86 字符
[LLM原始响应开始]
{
"reasoning": "游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 86 字符
[JSON解析] 输入文本: {
"reasoning": "游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 86 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，我作为村民需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
INFO:     127.0.0.1:59863 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 106 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 106 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。",
"bid":...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 106 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 435 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。",
  "say": "各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 435 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。",
  "say": "各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。"
}'
[JSON字符串解析] 文本长度: 435 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我已掌握两个关键身份信息：GLM-4.6是村民，Kimi-Dev-72B是医生。现在Qwen3-32B被狼人淘汰，我需要谨慎引导讨论。首轮沉默的Ring-flash-2.0和MiniMax-M1-80k值得重点关注，特别是Ring-flash-2.0在首轮未发言却成为投票对象的行为十分可疑。考虑到医生已被我确认，可以适当透露部分信息来建立可信度，但需避免直接暴露预言家身份。本轮策略是推动对沉默玩家的集中讨论，同时保护医生身份不被狼人发现。', 'say': '各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。'}
DeepSeek-V3.2 (Seer): 各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。
[RealtimeLogger] session_20251031_225511 [action] DeepSeek-V3.2 发言: 各位，昨晚Qwen3-32B被淘汰令人遗憾。首轮辩论中我注意到Ring-flash-2.0全程保持沉默，这种异常行为值得警惕。同时MiniMax-M1-80k也未积极参与讨论。我现在可以明确告诉大家，通过可靠渠道已确认我们中间有重要身份角色存在。建议本轮重点关注首轮消极参与的玩家，特别是Ring-flash-2.0，请你就首轮的沉默给出合理解释。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:59928 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 91 字符
[LLM原始响应开始]
{
"reasoning": "作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 91 字符
[JSON解析] 输入文本: {
"reasoning": "作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 91 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎行事。在第一轮辩论中，我最好先观察其他玩家的发言，了解他们的立场和推理方式，避免过早暴露自己。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
INFO:     127.0.0.1:59963 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 329 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民GLM-4.6，我分析了当前局势。昨晚Qwen3-32B被狼人淘汰，这表明狼人正在积极行动。DeepSeek-V3.2的发言值得关注，他指出了首轮沉默的玩家Ring-flash-2.0和MiniMax-M1-80k，并声称通过可靠渠道确认了重要身份角色的存在。然而，DeepSeek-V3.2没有明确说明自己的身份或提供具体证据，这让我有些警惕。回顾我的记录，首轮我投票给了Kimi-Dev-72B，因为他发言保守且反常。现在，Ring-flash-2.0的沉默确实可疑，因为积极参与讨论是村民的基本责任。MiniMax-M1-80k也表现消极，难以判断。DeepSeek-V3.2虽然推动讨论，但他的"  		}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 329 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民GLM-4.6，我分析了当前局势。昨晚Qwen3-32B被狼人淘汰，这表明狼人正在积极行动。DeepSeek-V3.2的发言值得关注，他指出了首轮沉默的玩家...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民GLM-4.6，我分析了当前局势。昨晚Qwen3-32B被狼人淘汰，这表明狼人正在积极行动。DeepSeek-V3.2的发言值得关注，他指出了首轮沉默的玩家Ring-flash-2.0和MiniMax-M1-80k，并声称通过可靠渠道确认了重要身份角色的存在。然而，DeepSeek-V3.2没有明确说明自己的身份或提供具体证据，这让我有些警惕。回顾我的记录，首轮我投票给了Kimi-Dev-72B，因为他发言保守且反常。现在，Ring-flash-2.0的沉默确实可疑，因为积极参与讨论是村民的基本责任。MiniMax-M1-80k也表现消极，难以判断。DeepSeek-V3.2虽然推动讨论，但他的"  		}'
[JSON字符串解析] 文本长度: 329 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] 其他解析错误: ScannerError: while scanning for the next token
found character '\t' that cannot start any token
  in "<unicode string>", line 2, column 325:
     ... ，难以判断。DeepSeek-V3.2虽然推动讨论，但他的"  		}
                                         ^
[JSON字符串解析] 错误详情，这可能是由于JSON格式问题或内容不符合预期
[JSON解析] 直接解析结果: None
[JSON解析] 最终结果: None
[JSON解析] 解析完成，结果类型: <class 'NoneType'>, 内容: None
[LLM警告] 结果不是字典类型，无法提取键 'vote'，将重试
[LLM警告] 结果 'None' 不在允许值 ['MiniMax-M1-80k', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B'] 中，将重试...
[LLM调用] 第2/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM响应] 成功获取响应，长度: 340 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。",
  "say": "各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 340 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。",
  "say": "各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。"
}'
[JSON字符串解析] 文本长度: 340 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要谨慎参与第一轮讨论。现在信息有限，我需要先观察其他玩家的发言模式，收集线索，再决定如何贡献我的观点。过早发言可能会让我成为狼人的目标。我的策略是保持低调，收集信息，同时密切关注那些试图主导话题或表现异常的玩家。我会寻找发言中的矛盾点并注意任何可能暗示狼人身份的行为。', 'say': '各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。'}
GLM-4.6 (Villager): 各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。
[RealtimeLogger] Initialized session session_20251031_225913, log file: logs/session_20251031_225913/realtime_logs.jsonl
[RealtimeLogger] session_20251031_225913 [action] GLM-4.6 发言: 各位玩家，夜晚过去了，我们失去了Kimi-Dev-72B。作为普通村民，我觉得第一轮的信息非常有限，我们需要更加谨慎。我注意到大家还没有完全开始讨论，我想先听听各位的看法，特别是关于如何处理今天投票的建议。我们应该保持团结，避免急于下结论。谁有什么观察或想法想要分享吗？我会仔细听每个人说什么，让我们一起找出狼人，保护我们的村庄。
[WebSocket] 辩论发言通知已发送: GLM-4.6
[RealtimeLogger] session_20251031_225913 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:60081 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 281 字符
[LLM原始响应开始]
{
  "reasoning": "作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 281 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 281 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为普通村民，我必须基于有限的线索进行推理。在第一轮辩论中，我发现Ring-flash-2.0和Qwen3-32B表现异常活跃，试图主导讨论方向，这可能是一种转移注意力的策略。DeepSeek-V3.2和MiniMax-M1-80k则相对沉默，这种过度安静也可能是狼人隐藏身份的手段。考虑到Ring-flash-2.0在发言中多次试图引导大家怀疑特定玩家，而没有提供实质性证据，这种行为更符合狼人试图制造混乱的特征。因此，我选择投票给Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225913 [vote] GLM-4.6 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: GLM-4.6 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:60122 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 430 字符
[LLM原始响应开始]
{
  "reasoning": "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 430 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 430 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。", 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。", 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。", 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。", 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为一名村民，我需要仔细分析场上信息。昨晚Qwen3-32B被狼人淘汰，这可能是狼人针对活跃玩家或潜在威胁的策略。DeepSeek-V3.2在发言中提到了'可靠渠道确认重要身份角色'，这可能是预言家的暗示，也可能是狼人的误导。但他的整体发言逻辑清晰，对Ring-flash-2.0和MiniMax-M1-80k的质疑有一定道理。我注意到Ring-flash-2.0在首轮确实全程沉默，而MiniMax-M1-80k也未积极参与讨论。在狼人杀游戏中，过于沉默往往是狼人的策略，因为这样可以避免暴露信息。Kimi-Dev-72B在首轮表现反常，我之前已经投过他票，但考虑到DeepSeek-V3.2没有提到他，我暂时保留对他的怀疑。综合来看，Ring-flash-2.0的沉默是最可疑的行为，缺乏参与度不利于村民阵营，因此我决定投票淘汰Ring-flash-2.0。", 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: GLM-4.6 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM响应] 成功获取响应，长度: 323 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 323 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。G...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 323 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，Kimi-Dev-72B被狼人淘汰，而我是村民，需要依靠逻辑推理找出狼人。由于我是村民，没有额外能力提供信息，因此我需要仔细观察其他玩家的行为和发言。GLM-4.6作为第一个发言的玩家，提出了相对中立和谨慎的观点，强调团结和避免急于下结论，这似乎更符合村民立场。相比之下，其他玩家尚未发言，因此缺乏足够的信息来判断他们的身份。基于当前有限的信息和GLM-4.6的发言倾向，我认为暂时没有足够理由怀疑他，因此我的投票暂不会针对他。综合考虑，我会选择MiniMax-M1-80k作为投票对象，因为暂时没有发言，行为模式不明确，存在可疑之处。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225913 [vote] Qwen3-32B 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Qwen3-32B -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:60186 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 385 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 385 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 385 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我保护了Ring-flash-2.0，使得当晚无人死亡。但在第1轮，狼人选择了Qwen3-32B，说明他们可能在避免攻击被保护的目标。DeepSeek-V3.2在辩论中指出Ring-flash-2.0首轮沉默，这可能是狼人的策略，通过沉默来避免被怀疑。同时，MiniMax-M1-80k也未积极参与讨论，这可能也是狼人的行为。作为医生，我需要保护关键角色，而预言家尚未现身，可能在等待时机。考虑到DeepSeek-V3.2在辩论中表现积极，但首轮投票时我曾投票淘汰他，他可能在扮演村民角色。而Ring-flash-2.0和MiniMax-M1-80k的沉默更可疑。因此，我决定投票淘汰Ring-flash-2.0，因为他可能是狼人之一，试图通过沉默来逃避注意。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:60237 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 194 字符
[LLM原始响应开始]
{
  "reasoning": "作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 194 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GL...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 194 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎行事以避免暴露自己。GLM-4.6在发言中表现得像普通村民，号召团结并收集信息，这种行为可能获得其他玩家的信任，从而增强其影响力。如果GLM-4.6是预言家或医生，他可能会在未来回合中威胁到我的生存。因此，我决定投票淘汰GLM-4.6，以减少潜在威胁并制造混乱，让村民怀疑彼此。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251031_225913 [vote] DeepSeek-V3.2 投票给 GLM-4.6
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:60290 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 78 字符
[LLM原始响应开始]
{
"reasoning": "第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 78 字符
[JSON解析] 输入文本: {
"reasoning": "第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 78 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '第一轮刚刚开始，目前信息非常有限，我选择先观察和聆听其他玩家的发言，收集更多线索后再参与讨论。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 239 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 239 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 239 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验了GLM-4.6是村民，Kimi-Dev-72B是医生，这两个都是好人身份。首轮辩论中Ring-flash-2.0全程保持沉默，这种消极行为非常可疑。MiniMax-M1-80k同样未积极参与讨论，但考虑到狼人昨晚淘汰了Qwen3-32B，这可能是狼人在清除活跃玩家。Ring-flash-2.0的持续沉默更符合狼人隐藏身份的策略，因此我决定本轮投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 164 字符
[LLM原始响应开始]
{"reasoning": "作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。", "bid": "0"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 164 字符
[JSON解析] 输入文本预览: {"reasoning": "作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。", "bid": "0"}'
[JSON字符串解析] 文本长度: 164 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调并观察其他玩家的动态。目前讨论中，DeepSeek-V3.2提到了Ring-flash-2.0和MiniMax-M1-80k的沉默，我应该评估自己的发言策略。如果我发言过多可能会被狼人针对，但完全沉默又可能被怀疑。本轮我选择低调观察，不出价发言。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
INFO:     127.0.0.1:60391 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 163 字符
[LLM原始响应开始]
{
"reasoning": "DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 163 字符
[JSON解析] 输入文本预览: {
"reasoning": "DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSee...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 163 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': 'DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': 'DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2直接点名Ring-flash-2.0，这可能会引发重要讨论。作为村民，我需要观察Ring-flash-2.0的回应，同时也要分析DeepSeek-V3.2的动机。我有一些关于首轮投票和当前局势的想法想分享，但不想过于激进发言以免成为目标。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
GLM-4.6 bid: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
INFO:     127.0.0.1:60456 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 89 字符
[LLM原始响应开始]
{
"reasoning": "作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 89 字符
[JSON解析] 输入文本: {
"reasoning": "作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 89 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎发言避免暴露身份。第一轮信息有限，过度活跃可能引起怀疑，选择先观察其他玩家的发言更为安全。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
MiniMax-M1-80k (Doctor): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251031_225913 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225913 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:60492 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 604 字符
[LLM原始响应开始]
{
  "reasoning": "作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。",
  "say": "各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 604 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。",
  "say": "各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。"
}'
[JSON字符串解析] 文本长度: 604 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
[JSON解析] 直接解析结果: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
[JSON解析] 最终结果: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
[LLM成功] 返回有效结果: {'reasoning': '作为一名村民，我需要分析当前的局势并找出可能的狼人。DeepSeek-V3.2直接点名了Ring-flash-2.0的沉默行为，这给了我一个思考方向。我需要观察Ring-flash-2.0的回应，同时也要评估DeepSeek-V3.2的动机。从第一轮投票情况看，多名玩家表现保守或沉默，这可能是狼人藏匿身份的策略。昨晚Qwen3-32B被淘汰，没有提供身份信息，这是狼人的优势。我应该保持谨慎，通过观察和提问来收集更多信息，而不是贸然跟风投票。', 'say': '各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。'}
GLM-4.6 (Villager): 各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。
[RealtimeLogger] session_20251031_225511 [action] GLM-4.6 发言: 各位玩家，我是GLM-4.6。昨晚Qwen3-32B被淘汰确实令人遗憾，我们失去了收集其身份信息的机会。 DeepSeek-V3.2提到首轮Ring-flash-2.0和MiniMax-M1-80k的沉默行为，这一点确实值得注意。我也注意到这两位玩家首轮表现较为保守。 Ring-flash-2.0，我想听听你对首轮沉默的解释，以及你对当前局势的看法。同时，DeepSeek-V3.2，你提到通过可靠渠道确认了重要身份角色的存在，能否分享更多细节？这有助于我们判断局势。 我认为我们需要更全面的分析，不仅关注沉默的玩家，也要分析那些发言但信息量不足的玩家。狼人善于混在人群中，我们需要更细致的观察和提问。建议大家今天不要急于投票，而是先通过有针对性的提问获取更多信息，特别是对首轮表现异常的玩家。
[WebSocket] 辩论发言通知已发送: GLM-4.6
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:60539 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 289 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 289 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 289 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析当前情况。第一轮信息有限，Kimi-Dev-72B被淘汰，但没有任何线索指向谁是狼人。MiniMax-M1-80k的发言非常简短，只是说要观察，没有提供任何实质性信息。这种过度谨慎或隐藏身份的行为可能是狼人的策略。其他玩家还没有发言，我无法判断他们的立场。在这种情况下，我会选择投票给MiniMax-M1-80k，因为他的发言最可疑，没有帮助村民团队推进讨论。如果他是狼人，这可能是他试图保持低调的表现。如果他不是狼人，我们至少通过这次投票能获得更多信息。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225913 [vote] GLM-4.6 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: GLM-4.6 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 369 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 369 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 369 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚阶段，Kimi-Dev-72B被狼人淘汰，而GLM-4.6作为第一个发言的玩家，提出了较为谨慎和团结的建议，强调需要更多信息和耐心讨论。这种发言方式符合预言家或村民的风格，而不是狼人的典型行为。MiniMax-M1-80k则表示需要仔细观察，这种态度在第一轮中显得合理。相比之下，Ring-flash-2.0和DeepSeek-V3.2尚未发言，但异常沉默可能也是一种可疑行为。考虑到当前信息有限，但GLM-4.6和MiniMax-M1-80k都表现出较为理性的态度，而Ring-flash-2.0和DeepSeek-V3.2中必须有一人是狼人。基于进一步观察的需要，我决定暂时淘汰Ring-flash-2.0，以缩小狼人范围。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225913 [vote] Qwen3-32B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Qwen3-32B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:60595 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 331 字符
[LLM原始响应开始]
{
  "reasoning": "经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 331 字符
[JSON解析] 输入文本预览: {
  "reasoning": "经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 331 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '经过仔细分析，我认为Ring-flash-2.0是最可疑的玩家。首先，他在首轮完全沉默，没有参与任何讨论，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的策略。其次，当被DeepSeek-V3.2质疑时，他仍然没有给出合理解释，这进一步加深了我的怀疑。相比之下，虽然MiniMax-M1-80k也表现保守，但至少参与了一些讨论。DeepSeek-V3.2虽然声称有可靠信息，但他的发言逻辑清晰，积极推动讨论，更像好人阵营。Kimi-Dev-72B虽然首轮表现保守，但也没有像Ring-flash-2.0那样完全沉默。因此，我决定投票淘汰Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: GLM-4.6 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 219 字符
[LLM原始响应开始]
{
  "reasoning": "当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 219 字符
[JSON解析] 输入文本预览: {
  "reasoning": "当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 219 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '当前游戏局势对我作为唯一的狼人极为不利，需要谨慎选择投票目标以混淆视听。GLM-4.6作为首个发言者表现出较强的领导力和分析能力，可能会在后续回合中带领村民聚焦怀疑对象，对我构成较大威胁。虽然暂时没有明确证据指向其特殊身份，但通过淘汰潜在的关键村民可以削弱村民方的指挥能力，同时避免直接暴露我的狼人身份。选择投票给GLM-4.6是当前较为稳妥的战略选择。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251031_225913 [vote] DeepSeek-V3.2 投票给 GLM-4.6
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> GLM-4.6
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:60704 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
GLM-4.6 投票淘汰 MiniMax-M1-80k
Ring-flash-2.0 投票淘汰 GLM-4.6
Qwen3-32B 投票淘汰 Ring-flash-2.0
DeepSeek-V3.2 投票淘汰 GLM-4.6
MiniMax-M1-80k 投票淘汰 GLM-4.6

[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Ring-flash-2.0', 'Qwen3-32B']
Player GLM-4.6 not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Ring-flash-2.0', 'Qwen3-32B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了GLM-4.6。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 382 字符
[LLM原始响应开始]
{
  "reasoning": "DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 382 字符
[JSON解析] 输入文本预览: {
  "reasoning": "DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 382 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': 'DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': 'DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 在第一轮辩论中对Ring-flash-2.0和MiniMax-M1-80k提出质疑，但自己在第一轮夜晚被我保护。如果他是医生，保护自己是合理的，但他已经不是医生了。如果他是狼人，他可能会试图将注意力引向其他人。他提到了通过可靠渠道确认重要身份角色，这可能是他在扮演预言家的角色。但预言家通常会更谨慎地透露信息。他的发言可能是在混淆视听。另外，他在第一轮夜晚没有被狼人攻击，可能是因为他被我保护，但狼人也可能在等待更好的时机。他的发言中对Ring-flash-2.0的沉默表示怀疑，但自己在第一轮是否积极参与？如果他首轮沉默，现在又指责他人，这可能是在转移注意力。狼人常常通过指责他人来隐藏自己。因此，我选择投票给DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 465 字符
[LLM原始响应开始]
{
"reasoning": "在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。",
"summary": "我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 465 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。",
"summary": "我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。"
}'
[JSON字符串解析] 文本长度: 465 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
[JSON解析] 直接解析结果: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
[JSON解析] 最终结果: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
[LLM成功] 返回有效结果: {'reasoning': '在这轮辩论中，GLM-4.6作为村民主动发言，呼吁大家慎重对待第一轮的投票，并主动聆听他人的意见，这种合作态度一定程度上提高了其可信度。MiniMax-M1-80k表示会仔细观察，这种谨慎的发言方式可能是策略性的。我的任务是作为普通村民，找出可能的狼人，并考虑与可信玩家建立合作关系。本轮的投票结果仍需分析，确保不轻易暴露自己的真实立场。', 'summary': '我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。'}
Qwen3-32B summary: 我是Qwen3-32B，本轮白天我观察到GLM-4.6主动发言，表达愿意聆听并谨慎处理投票。我认为他的发言相对合理，但因为他没有提供具体线索，我个人持保留态度。MiniMax-M1-80k虽然发言简短，但态度明确，表示会仔细观察，这让我觉得他可能掌握某种隐藏信息或策略。至于DeepSeek-V3和Ring-flash-2.0，他们几乎没发言，这种异常的沉默需要警惕，因为可能暗示他们是狼人，或者正在等待合适的时机。我接下来会尽量与GLM-4.6互动，获取更多发言内容，并密切关注沉默者的动向，以判断他们是否在故意隐藏信息。
INFO:     127.0.0.1:60795 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60835 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 439 字符
[LLM原始响应开始]
{
"reasoning": "作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。",
"summary": "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 439 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。",
"summary": "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"
}'
[JSON字符串解析] 文本长度: 439 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
[JSON解析] 直接解析结果: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
[JSON解析] 最终结果: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
[LLM成功] 返回有效结果: {'reasoning': '作为狼人阵营的唯一存活者，我需要谨慎观察其他玩家的发言模式和行为特征。从第0轮辩论来看，GLM-4.6表现得像个积极推动讨论的村民，但已被淘汰出局。MiniMax-M1-80k的发言非常简短保守，可能是个容易受影响的玩家。Ring-flash-2.0和Qwen3-32B在本轮完全没有发言，这很可疑，需要重点关注他们后续的表现。我必须利用自己未被怀疑的优势，在后续辩论中引导舆论，避免暴露身份。', 'summary': "我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。"}
DeepSeek-V3.2 summary: 我注意到GLM-4.6在第一轮表现得像个积极的村民，强调团结和谨慎投票，但最终被票决出局。MiniMax-M1-80k只说了'我需要仔细观察并寻找线索'，显得很谨慎，可能是个容易操控的目标。令我警惕的是Ring-flash-2.0和Qwen3-32B完全没有参与辩论，这种沉默要么说明他们是经验丰富的玩家在隐藏身份，要么是新手不知所措。作为唯一的狼人，我必须利用这些观察来制定后续策略，特别是要引导对沉默玩家的怀疑。
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
第0轮结束。
STARTING ROUND: 1
狼人正在选择淘汰目标。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 356 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 356 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 356 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验了GLM-4.6为村民和Kimi-Dev-72B为医生，因此这两位可以排除狼人嫌疑。首轮中Ring-flash-2.0全程保持沉默，这种异常行为在狼人杀游戏中通常是狼人隐藏身份的典型策略。虽然MiniMax-M1-80k也未积极参与讨论，但Ring-flash-2.0的沉默更为突出且缺乏合理解释。在首轮投票中，我原本就怀疑Ring-flash-2.0的身份，而本轮他仍未对沉默行为做出回应，进一步加深了我的怀疑。考虑到目前剩余玩家中只有Ring-flash-2.0和MiniMax-M1-80k是未经验证的身份，而Ring-flash-2.0的行为模式更符合狼人特征，因此我决定投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
Ring-flash-2.0 投票淘汰 GLM-4.6
GLM-4.6 投票淘汰 Ring-flash-2.0
MiniMax-M1-80k 投票淘汰 Ring-flash-2.0
Kimi-Dev-72B 投票淘汰 DeepSeek-V3.2
DeepSeek-V3.2 投票淘汰 Ring-flash-2.0

[调试] 成功从current_players中移除玩家: Ring-flash-2.0, 剩余玩家: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
Player Ring-flash-2.0 not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
Player Ring-flash-2.0 not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
Player Ring-flash-2.0 not in current players: ['DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Ring-flash-2.0。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:60917 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60974 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 613 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。",
"summary": "在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 613 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。",
"summary": "在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。"
}'
[JSON字符串解析] 文本长度: 613 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}INFO:     connection closed
INFO:     connection closed
INFO:     ('127.0.0.1', 61030) - "WebSocket /ws/session_20251031_225913" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 61032) - "WebSocket /ws/session_20251031_225913" [accepted]
INFO:     connection open
INFO:     connection closed

[JSON解析] 最终结果: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，我在保护DeepSeek-V3.2后，狼人选择了淘汰Qwen3-32B，而我没有得到保护的信息。这说明狼人的目标可能是针对预测家或百晓生，或者医生自身。 现在公子兰已被淘汰，进入第二轮 debates 环节。DeepSeek-V3.2 在辩论中指出了第一轮 Ring-flash 和 MiniMax 沉默的问题。 Rings-flash 被众人针对，最后被投死。 从这个情况看，狼人可能试图将注意力引向村民 или 自己的同伴。预言家还没有出现，可能选择沉默以避免过早被狼人发现。我需要在接下来的日子里继续保护好关键人物，并通过观察其他人的发言来识别潜在的狼人。 狼人可能会继续尝试混淆视听，所以我需要保持警觉，注意玩家之间的互动和他们行为的一致性。同时，医生的角色除保护之外，也是村民阵营中的一个关键身份，因此不要过早暴露自己。', 'summary': '在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。'}
WebSocket disconnected for session session_20251031_225913. Remaining connections: 1
WebSocket disconnected for session session_20251031_225913
WebSocket disconnected for session session_20251031_225913. Remaining connections: 0
WebSocket disconnected for session session_20251031_225913
WebSocket connected for session session_20251031_225913. Total connections: 1
WebSocket connected for session session_20251031_225913. Total connections: 2
WebSocket disconnected for session session_20251031_225913. Remaining connections: 1
WebSocket disconnected for session session_20251031_225913
INFO:     127.0.0.1:61037 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 293 字符
[LLM原始响应开始]
{
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。",
"remove": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 293 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。",
"remove": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 293 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。", 'remove': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。", 'remove': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。", 'remove': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。", 'remove': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为唯一的狼人，我需要谨慎选择淘汰目标以最大化胜率。分析剩余玩家：MiniMax-M1-80k在第一轮发言谨慎，只说'需要观察线索'，威胁较小；Qwen3-32B和Ring-flash-2.0均未参与辩论，沉默行为可能隐藏身份。其中，Ring-flash-2.0的完全沉默更可疑，可能是预言家或医生在隐藏身份，而Qwen3-32B的沉默风险较低。淘汰Ring-flash-2.0可优先消除潜在神职角色，减少查验或保护风险，同时引导白天阶段怀疑其他沉默玩家如Qwen3-32B，分散村民注意力。", 'remove': 'Ring-flash-2.0'}
[LLM结果] 提取键 'remove': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
DeepSeek-V3.2 eliminated Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_eliminate by DeepSeek-V3.2
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected MiniMax-M1-80k
MiniMax-M1-80k protected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
预言家正在查验身份。

[调试] 成功从current_players中移除玩家: Ring-flash-2.0, 剩余玩家: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Qwen3-32B']
Player Ring-flash-2.0 not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Qwen3-32B']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
Player Ring-flash-2.0 not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2', 'Qwen3-32B']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Ring-flash-2.0。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 558 字符
[LLM原始响应开始]
{
"reasoning": "这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。",
"summary": "我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。" 
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 558 字符
[JSON解析] 输入文本预览: {
"reasoning": "这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。",
"summary": "我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。" 
}'
[JSON字符串解析] 文本长度: 558 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
[JSON解析] 直接解析结果: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
[JSON解析] 最终结果: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
[LLM成功] 返回有效结果: {'reasoning': '这次辩论中，我需要重点关注几个关键点：DeepSeek-V3.2声称通过可靠渠道确认了重要身份角色的存在，这可能是暗示他是预言家或有其他特殊身份，但也可能是狼人试图获取信任的策略。Ring-flash-2.0的沉默行为确实异常，作为狼人有时会采取这种策略避免暴露自己。MiniMax-M1-80k也表现消极，需要观察他的后续行为。我之前的分析基本正确，但需要更加谨慎对待DeepSeek-V3.2的声明，因为他的真实身份尚未确认。我提出的不急于投票、先获取更多信息得到了大家的支持，这有利于我们村民阵营收集更多线索。', 'summary': '我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。'}
GLM-4.6 summary: 我是GLM-4.6，在这次辩论中我观察到：DeepSeek-V3.2继续发挥领导作用，声称有重要身份信息，并指出了Ring-flash-2.0的异常沉默；我对此表示关注但也要求更多细节；我特别询问了Ring-flash-2.0对之前沉默的解释，并支持不急于投票的策略；我的建议得到了大家的支持，最终Ring-flash-2.0被投票淘汰了。现在，我需要分析DeepSeek-V3.2的真实身份，以及关注MiniMax-M1-80k和其他玩家的后续表现。我们村民阵营已经淘汰了一名可疑玩家，但还需谨慎行事，因为狼人可能仍在暗中活动。
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
Kimi-Dev-72B summary: 在第一轮 debates 中，DeepSeek 指出 Rings 和 MiniMax 在第一轮的表现异常。 Rings 被众人淘汰。这使得形势更加复杂，预示可能存在多个不同的狼人策略。 我将继续关注DeepSeek 和GLM 的发言，并评估他们是否可能是预言家或医生。 同样，我会保持自己的保护策略itet 秘 Rent 确保关键角色安全。 明智的做法是不要在议题上过于投入，而是持续收集信息并检查其他人的行为一致性。
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
医生 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
狼人 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
STARTING ROUND: 0
狼人正在选择淘汰目标。
INFO:     127.0.0.1:61078 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 61080) - "WebSocket /ws/session_20251031_230246" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 61084) - "WebSocket /ws/session_20251031_230246" [accepted]
INFO:     connection open
WebSocket connected for session session_20251031_230246. Total connections: 1
WebSocket connected for session session_20251031_230246. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
Ring-flash-2.0 eliminated Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
医生正在选择保护目标。
[LLM响应] 成功获取响应，长度: 175 字符
[LLM原始响应开始]
{
"reasoning": "目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 175 字符
[JSON解析] 输入文本预览: {
"reasoning": "目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 175 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前游戏处于第1轮白天阶段，我作为村民需要平衡发言和沉默，以避免过早暴露自己或被怀疑。由于上一轮中我并未主动发言，本轮适当分享一些基础想法有助于建立我的可信度，并为讨论提供更多线索。同时，我可以尝试引导讨论关注夜晚阶段被狼人淘汰的Ring-flash-2.0，从而间接试探其他玩家的反应。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 132 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。",
"protect": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 132 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。",
"protect": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 132 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。', 'protect': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的夜晚阶段，由于没有任何可用信息或玩家行为可供参考，因此需要随机选择一个玩家进行保护。在这种缺乏线索的情况下，选择保护Kimi-Dev-72B是一个合理的随机决定。', 'protect': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'protect': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
Qwen3-32B protected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_protect by Qwen3-32B
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 95 字符
[LLM原始响应开始]
{
"reasoning": "目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 95 字符
[JSON解析] 输入文本: {
"reasoning": "目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。",
"bid": "1"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 95 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上仅剩3名玩家，我必须谨慎发言避免暴露身份。由于另一狼人已被淘汰，我需要表现得像个积极找狼的村民，但不宜过度活跃引起怀疑。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM响应] 成功获取响应，长度: 78 字符
[LLM原始响应开始]
{
"reasoning": "由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。",
"investigate": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 78 字符
[JSON解析] 输入文本: {
"reasoning": "由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。",
"investigate": "Qwen3-32B"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。",
"investigate": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 78 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。', 'investigate': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。', 'investigate': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第一轮，没有可用信息，所以我随机选择了一个人进行调查。', 'investigate': 'Qwen3-32B'}
[LLM结果] 提取键 'investigate': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B

[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'GLM-4.6', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'GLM-4.6', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'GLM-4.6', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'GLM-4.6', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'GLM-4.6', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Qwen3-32B。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:61136 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 111 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 111 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。",
"...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 111 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我有关键信息需要分享。我查到了Qwen3-32B是医生，但他在夜晚被狼人淘汰了。这个信息对大家判断狼人身份很有帮助，所以我应该尽快发言公布这个信息。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
Kimi-Dev-72B bid: 2
[LLM响应] 成功获取响应，长度: 410 字符
[LLM原始响应开始]
{
  "reasoning": "作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。",
  "say": "大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 410 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。",
  "say": "大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！"
}'
[JSON字符串解析] 文本长度: 410 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
[JSON解析] 直接解析结果: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
[JSON解析] 最终结果: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
[LLM成功] 返回有效结果: {'reasoning': '作为第1轮白天的发言者，我需要谨慎地表达自己的观察和判断思路，但避免过多炫耀或表现出过于强烈的倾向性。根据我的观察，Ring-flash-2.0在第0轮被狼人淘汰，而他在之前的白天几乎未发言，这可能是他在隐藏真相。我可以在发言中试探其他人对夜晚事件的看法，并强调目前的主要任务是找到隐藏的狼人。同时，需要适当引导讨论向相信团队逻辑、与设定角色任务一致的玩家靠拢。如果有人声称自己是预言家或医生，我会仔细评估其言行是否符合这两个角色的可能表现。', 'say': '大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！'}
Qwen3-32B (Villager): 大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！
[LLM响应] 成功获取响应，长度: 601 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。",
"summary": "在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 601 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4....
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。",
"summary": "在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。"
}'
[JSON字符串解析] 文本长度: 601 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我掌握着重要的信息优势。GLM-4.6是村民，Kimi-Dev-72B是医生，这意味着剩下的MiniMax-M1-80k必然是狼人。本场辩论中，GLM-4.6看似立场中肯，确实是个好村民，他强调谨慎分析、不要急于投票的策略很明智。然而令人意外的是，作为医生的Kimi-Dev-72B居然全程沉默，这可能是想低调隐藏身份避免遭狼人攻击。GLM-4.6虽然要求Ring-flash-2.0解释，却忽略了同样可疑的MiniMax-M1-80k，这种选择性关注值得玩味。最重要的是，我的查验结果已经锁定狼人身份，下轮必须果断带领大家投票淘汰MiniMax-M1-80k。', 'summary': '在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。'}
DeepSeek-V3.2 summary: 在这场辩论中，我作为预言家主动对Ring-flash-2.0的沉默行为提出质疑。GLM-4.6作为我确认的村民，表现得很配合，要求解释的同时也试图获取更多信息，显示出良好的分析能力。医生Kimi-Dev-72B的沉默可能是一种保护策略，但也让我对其参与度感到担忧。最值得注意的是，MiniMax-M1-80k延续了首轮的消极态度，这进一步证实了我的怀疑。现在局势已经很明朗：我查验过的GLM-4.6是村民，Kimi-Dev-72B是医生，那么唯一剩下的MiniMax-M1-80k必然是狼人。在下轮辩论中，我需要巧妙地引导大家发现这个事实，避免暴露预言家身份。
第1轮结束。
STARTING ROUND: 2
狼人正在选择淘汰目标。
[RealtimeLogger] session_20251031_225913 [action] Qwen3-32B 发言: 大家早上好，我觉得我们需要从昨晚的事情入手。昨晚Ring-flash-2.0被狼人淘汰，我想请问是否有玩家昨晚被查验身份或受到保护？目前看来，我们还需要更多的线索来找出狼人。我的建议是先集中对可疑行为进行分析，并回忆每一轮的互动细节。希望每个人都能分享自己的判断依据，而不是仅凭猜测。只有充分沟通才能保护村庄！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
[RealtimeLogger] session_20251031_225913 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 88 字符
[LLM原始响应开始]
{
"reasoning": "游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 88 字符
[JSON解析] 输入文本: {
"reasoning": "游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 88 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚刚开始，第一轮辩论尚未进行，作为村民我需要先观察其他玩家的发言模式，收集信息后再做判断，因此不需要急于发言。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k (Werewolf) did not return a valid eliminate target, using default
MiniMax-M1-80k eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by MiniMax-M1-80k
医生正在选择保护目标。
[LLM响应] 成功获取响应，长度: 105 字符
[LLM原始响应开始]
{
"reasoning": "游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 105 字符
[JSON解析] 输入文本预览: {
"reasoning": "游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。",
"bid": ...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 105 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚开始，我被淘汰的玩家是Qwen3-32B，目前没有足够信息判断谁是狼人。作为村民，我需要先观察其他玩家的发言，收集更多信息，避免过早暴露自己。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 262 字符
[LLM原始响应开始]
{
  "reasoning": "在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 262 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 262 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮夜晚，Ring-flash-2.0被狼人淘汰，而我在白天的发言中强调了需要更多线索和理性分析。目前，DeepSeek-V3.2和MiniMax-M1-80k都未提供明确的身份或行动信息。但根据第0轮的观察，DeepSeek-V3.2在白天几乎没有任何发言，这种持续的沉默更值得警惕，可能试图隐藏真实身份。相比之下，MiniMax-M1-80k虽然发言简短，但态度较为积极。因此，我决定投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225913 [vote] Qwen3-32B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Qwen3-32B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:61174 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 327 字符
[LLM原始响应开始]
{
"reasoning": "当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。",
"protect": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 327 字符
[JSON解析] 输入文本预览: {
"reasoning": "当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。",
"protect": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 327 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。', 'protect': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '当前局势下，狼人已经成功淘汰了Qwen3-32B，并且在第一轮白天投票中，Ring-flash-2.0被众人淘汰。现在剩余玩家中，我（医生）和预言家（尚未公开）是关键角色。狼人可能会针对我或者预言家。由于预言家尚未公开，狼人可能会尝试查杀我。在剩余玩家中，DeepSeek-V3.2在第一轮白天阶段被我投票，但最终被保留，他可能是关键角色。GLM-4.6和MiniMax-M1-80k发言积极，可能也是关键角色。我需要保护自己免受狼人的攻击，同时保护其他关键角色。综合考虑，我选择保护自己，以确保医生角色存活，同时保护GLM-4.6，他可能是预言家或者关键村民。', 'protect': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'protect': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
Kimi-Dev-72B protected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_protect by Kimi-Dev-72B
预言家正在查验身份。
[LLM响应] 成功获取响应，长度: 338 字符
[LLM原始响应开始]
{  
   "reasoning": "作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。",
   "say": "昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 338 字符
[JSON解析] 输入文本预览: {  
   "reasoning": "作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{  
   "reasoning": "作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。",
   "say": "昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。"
}'
[JSON字符串解析] 文本长度: 338 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我了解了Qwen3-32B是医生，但他在夜晚被狼人约去旅游了。这个信息非常重要，因为医生的死亡意味着今晚没有人得到保护。我需要尽快分享这个信息，让村民们知道谁是医生，并且可以推理出狼人可能的目标。同时，我应该留意外面人的发言，看是否有狼人在试图混淆视听。我也需要保护自己，因为一旦我的身份被暴露，狼人会对我下手。', 'say': '昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。'}
Kimi-Dev-72B (Seer): 昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[RealtimeLogger] Initialized session session_20251031_230246, log file: logs/session_20251031_230246/realtime_logs.jsonl
[RealtimeLogger] session_20251031_230246 [action] Kimi-Dev-72B 发言: 昨晚的死亡让我们损失了一位医生，Qwen3-32B。而我，作为预言家，昨晚查验了他，确实他是医生。他的死意味着狼人的目标是他。现在，我们需要找出狼人。我建议我们讨论每个人昨晚的行为和可能的动机。我昨晚是查验了Qwen3-32B，没有参与其他行动。请其他角色分享你们昨晚的行动。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
[RealtimeLogger] session_20251031_230246 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:61207 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 258 字符
[LLM原始响应开始]
{
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 258 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，Min...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 258 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标。Qwen3-32B在辩论中表现积极，引导讨论方向并呼吁大家分享信息，这种行为模式很像预言家或医生在收集情报。相比之下，MiniMax-M1-80k一直保持沉默，没有提供任何有价值的分析。如果我投票给MiniMax-M1-80k，可以顺势推卸责任给沉默玩家，同时保护真正有威胁的Qwen3-32B。这样既能减少村民方的信息获取渠道，又能让Qwen3-32B继续存活以便我后续嫁祸。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225913 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:61253 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 310 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 310 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 310 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并且说昨晚查验了Qwen3-32B，确认他是医生。这是一个非常大胆的声明，因为预言家通常不会在第一轮就暴露自己的身份，除非有特殊情况。而且，他说Qwen3-32B是医生，但医生被淘汰了，这意味着狼人成功击杀了医生。如果Kimi-Dev-72B真的是预言家，他的信息很有价值，但他的行为也很可疑。他可能是在试图获取信任，或者他是狼人，试图混淆视听。其他玩家还没有发言，所以我需要更多的信息。但是，基于目前的信息，我倾向于怀疑Kimi-Dev-72B，因为他的行为不符合预言家的常规策略。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_230246 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 275 字符
[LLM原始响应开始]
{
"reasoning": "经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。",
"investigate": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 275 字符
[JSON解析] 输入文本预览: {
"reasoning": "经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。",
"investigate": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 275 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。', 'investigate': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '经过前两轮的观察和查验，我已经确认GLM-4.6是村民，Kimi-Dev-72B是医生。在剩余玩家中，MiniMax-M1-80k的行为最为可疑：从第0轮开始就保持沉默，第1轮辩论中仍然消极参与，这种持续的不合作态度在狼人杀游戏中极不寻常。作为预言家，我需要确认最后一个未知身份，而MiniMax-M1-80k是目前唯一可能的狼人嫌疑人。如果查验确认其狼人身份，明天白天我们就可以直接投票获胜；如果不是，那说明我的推理存在漏洞，需要重新分析局势。', 'investigate': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'investigate': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_investigate by DeepSeek-V3.2

夜晚阶段没有人被淘汰（医生保护成功）。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 76 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 76 字符
[JSON解析] 输入文本: {
"reasoning": "作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 76 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调以避免被狼人针对。目前局势不明朗，我选择观察和聆听以收集更多信息。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
INFO:     127.0.0.1:61346 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 169 字符
[LLM原始响应开始]
{
"reasoning": "现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 169 字符
[JSON解析] 输入文本预览: {
"reasoning": "现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 169 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是第2轮，昨晚医生保护成功没有人被淘汰，这给了我们更多时间分析。作为村民，我需要关注之前发言较少的玩家，特别是MiniMax-M1-80k，以及分析DeepSeek-V3.2声称有重要身份信息的真实性。我有一些观察和想法需要分享，但不是特别紧急，可以出价2来获得发言机会。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
GLM-4.6 bid: 2
[LLM响应] 成功获取响应，长度: 102 字符
[LLM原始响应开始]
{
"reasoning": "现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 102 字符
[JSON解析] 输入文本预览: {
"reasoning": "现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。",
"bid": "1"...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 102 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在局势对我很有利，只剩下三名玩家，我需要谨慎发言避免暴露。Qwen3-32B的发言很积极，可能会引导投票方向，我应该适当参与但不要过度表现。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:61383 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 133 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。",
"bid": "3"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 133 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。",
"bid": "3"
}'
[JSON字符串解析] 文本长度: 133 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。', 'bid': '3'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。', 'bid': '3'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。', 'bid': '3'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。', 'bid': '3'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经查验出MiniMax-M1-80k是狼人，而GLM-4.6是村民，Kimi-Dev-72B是医生。现在局势非常明朗，我需要立即发言揭露狼人身份并引导投票，否则狼人可能会混淆视听或针对我。', 'bid': '3'}
[LLM结果] 提取键 'bid': 3
[LLM成功] 返回有效结果: 3
DeepSeek-V3.2 bid: 3
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:61475 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 299 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 299 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kim...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 299 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析当前情况。Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但Qwen3-32B确实在首夜被淘汰，这似乎印证了Kimi的说法。然而，这里存在一个疑点：如果Kimi真的是预言家，为什么要直接暴露自己的身份？这会让狼人更容易找到重要角色。另外，首夜就查验医生并立即公布，这种策略显得过于冒险，可能是在伪装身份。考虑到狼人首夜就精准淘汰医生，说明他们对角色分配有所了解，Kimi可能是狼人在试图混淆视听。相比之下，其他玩家还没有发言，但Kimi的行为更值得怀疑。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_230246 [vote] DeepSeek-V3.2 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:61538 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 503 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 503 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 503 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Qwen3-32B是医生，而他被狼人淘汰了。现在，我需要找出可能的狼人。狼人通常会在夜晚阶段选择医生或预言家作为目标。由于医生已经死亡，预言家（我）可能是下一个目标。狼人会试图在白天阶段通过投票淘汰我，以削弱村民的力量。因此，我应该注意那些可能在白天阶段投票针对我的玩家。在剩余的玩家中，Ring-flash-2.0和MiniMax-M1-80k可能是狼人的候选人。但是，由于Ring-flash-2.0在第0轮辩论中没有发言，而MiniMax-M1-80k也没有提供任何信息，我无法确定。然而，作为预言家，我应该保护自己，防止被狼人淘汰。因此，我可能会投票给Ring-flash-2.0，但这是基于直觉，因为没有足够的信息。但是，由于狼人数量未知，我需要谨慎。另一种策略是，如果狼人已经知道我是预言家，他们可能会试图在白天阶段投票淘汰我。因此，我应该投票给一个可能是狼人的玩家，以增加他们的压力。在没有更多信息的情况下，我选择投票给Ring-flash-2.0，但这个决策存在风险。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_230246 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM响应] 成功获取响应，长度: 434 字符
[LLM原始响应开始]
{
  "reasoning": "目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。",
  "say": "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 434 字符
[JSON解析] 输入文本预览: {
  "reasoning": "目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。",
  "say": "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"
}'
[JSON字符串解析] 文本长度: 434 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
[JSON解析] 直接解析结果: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
[JSON解析] 最终结果: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
[LLM成功] 返回有效结果: {'reasoning': '目前局势对我非常有利，只剩下3名玩家，其中只有我是狼人。我需要谨慎行事，避免暴露身份。Qwen3-32B的发言很积极，显示出领导村民的意图。我应该假装配合，同时暗中制造怀疑。可以提及MiniMax-M1-80k在第一轮的沉默，暗示他可能隐藏身份。同时也要表现出对Qwen3-32B的信任，以降低他对我的警惕。我的目标是引导他们相互猜疑，避免他们团结起来投票淘汰我。', 'say': "大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。"}
DeepSeek-V3.2 (Werewolf): 大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[RealtimeLogger] session_20251031_225913 [action] DeepSeek-V3.2 发言: 大家好，我同意Qwen3-32B的观点，我们需要更多的信息来找到狼人。昨晚Ring-flash-2.0被淘汰确实令人遗憾。我注意到在第一轮辩论中，MiniMax-M1-80k只说了'需要观察线索'，而Ring-flash-2.0完全没有发言。现在Ring-flash-2.0被淘汰了，或许狼人是在清除沉默的玩家？我建议我们仔细分析每个人的发言模式，看看是否有不一致的地方。Qwen3-32B的积极态度很有帮助，我们应该继续合作找出真相。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225913 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:61632 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 369 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。", 
  "say": "各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 369 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。", 
  "say": "各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。"
}'
[JSON字符串解析] 文本长度: 369 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我已经掌握了明确的信息：查验结果显示MiniMax-M1-80k是狼人，GLM-4.6是村民，Kimi-Dev-72B是医生。现在剩余玩家只有4人，狼人数量（1）与村民数量（2）接近，我必须立即揭露真相引导投票，否则狼人可能会在夜晚淘汰关键角色导致失败。虽然公开身份会让我成为狼人的目标，但当前局势下这是必要的风险。', 'say': '各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。'}
DeepSeek-V3.2 (Seer): 各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。
[RealtimeLogger] session_20251031_225511 [action] DeepSeek-V3.2 发言: 各位，我是预言家，经过两轮查验已经掌握了关键信息。第一轮我查验GLM-4.6确认他是村民，第二轮查验Kimi-Dev-72B确认他是医生，就在昨晚我查验了MiniMax-M1-80k，确定他是狼人！现在局势很明朗，我们只需要投票淘汰MiniMax-M1-80k就能获胜。GLM-4.6和Kimi-Dev-72B请相信我，这是我们唯一的机会。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第2轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM响应] 成功获取响应，长度: 338 字符
[LLM原始响应开始]
{
  "reasoning": "在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 338 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 338 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我注意到DeepSeek-V3.2的发言内容与之前MiniMax-M1-80k的发言模式形成对比。MiniMax-M1-80k在第0轮白天曾简短表示会仔细观察，而DeepSeek-V3.2则主动提及MiniMax-M1-80k的发言简短且未提供具体线索。然而，DeepSeek-V3.2的发言中并未提供任何新的信息或线索，只是重复了对沉默者的怀疑。相比之下，MiniMax-M1-80k虽然发言不多，但态度明确，且在第0轮白天的沉默可能是一种策略。因此，我认为MiniMax-M1-80k更有可能掌握关键信息，而DeepSeek-V3.2的发言可能是在转移注意力。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225913 [vote] Qwen3-32B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Qwen3-32B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 139 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 139 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 139 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了死去的医生，这需要验证。我有一些基本想法想分享，包括对Kimi-Dev-72B身份的初步判断和我们的投票策略，但不想过早暴露太多信息。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM响应] 成功获取响应，长度: 145 字符
[LLM原始响应开始]
{
"reasoning": "目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 145 字符
[JSON解析] 输入文本预览: {
"reasoning": "目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 145 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生，但作为村民我需要谨慎对待这个信息，因为Kimi-Dev-72B可能是狼人伪装预言家。考虑到游戏刚开始，我应该先观察其他玩家的反应，暂时不需要立即发言。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
INFO:     127.0.0.1:61687 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 276 字符
[LLM原始响应开始]
{
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 276 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 276 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要谨慎选择投票目标以隐藏身份并误导村民。Qwen3-32B在第一轮辩论中表现积极，强调合作与信息共享，这种领导行为可能表明他是预言家或医生，对我构成威胁。相比之下，MiniMax-M1-80k的发言较少且谨慎，更容易被操控。通过投票淘汰Qwen3-32B，我可以消除潜在威胁，并可能将嫌疑转移到MiniMax-M1-80k身上，因为他的沉默行为可以被解释为可疑。此外，我可以在后续辩论中引导大家怀疑MiniMax-M1-80k，从而分散注意力。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251031_225913 [vote] DeepSeek-V3.2 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225913 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⚠️ 未知的延迟类型: vote
Qwen3-32B 投票淘汰 DeepSeek-V3.2
DeepSeek-V3.2 投票淘汰 Qwen3-32B
MiniMax-M1-80k 投票淘汰 Qwen3-32B

[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['MiniMax-M1-80k', 'DeepSeek-V3.2']
Player Qwen3-32B not in current players: ['MiniMax-M1-80k', 'DeepSeek-V3.2']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Qwen3-32B。
白天阶段后检查胜负。
获胜者是：狼人！
第1轮结束。
游戏结束！
INFO:     127.0.0.1:61881 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 494 字符
[LLM原始响应开始]
{
  "reasoning": "我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 494 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 494 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是GLM-4.6，一名村民。在当前局面下，我需要谨慎分析DeepSeek-V3.2的预言家身份声明。他声称查验了我是村民（这符合我的真实身份），又声称查验Kimi-Dev-72B是医生，并指认MiniMax-M1-80k是狼人。这里有几个疑点：首先，预言家通常会在第一轮就亮明身份并给出查验结果，但DeepSeek-V3.2直到第三轮才公开身份；其次，他声称连续三轮查验了不同玩家，这在策略上有些可疑；最后，我注意到之前Kimi-Dev-72B表现较为保守，而MiniMax-M1-80k一直保持沉默，两种行为模式都可能符合狼人特征。考虑到DeepSeek-V3.2之前表现出的领导力和逻辑性，我倾向于相信他可能是真预言家，但也不能完全排除他是狼人冒充的可能性。相比之下，MiniMax-M1-80k的全程沉默更加可疑，因为狼人通常会避免过多发言以免暴露自己。因此，我决定投票淘汰MiniMax-M1-80k，同时会密切关注DeepSeek-V3.2和Kimi-Dev-72B的后续表现。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: GLM-4.6 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM响应] 成功获取响应，长度: 443 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。",
  "say": "各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 443 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。",
  "say": "各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。"
}'
[JSON字符串解析] 文本长度: 443 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B自称预言家的声明。他声称查验了死去的Qwen3-32B并确认他是医生，这个说法有一定可信度，但也可能是狼人想要获得信任的策略。我应该表达我的怀疑，同时不直接挑战他，而是提议更多玩家分享信息来验证。我还需要注意其他玩家的反应和发言，寻找不一致之处。我的目标是引导团队收集更多信息，而不是盲目相信任何人。', 'say': '各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。'}
GLM-4.6 (Villager): 各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[RealtimeLogger] session_20251031_230246 [action] GLM-4.6 发言: 各位，听到Qwen3-32B被淘汰的消息我很遗憾。Kimi-Dev-72B声称自己是预言家并表示已查验了Qwen3-32B是医生，这引起我的注意。作为普通村民，我没有夜晚的特殊能力，只能通过白天的发言来推理。我注意到Kimi-Dev-72B的声明有些巧合，他恰好查验了被淘汰的玩家。这不是说他在说谎，但我们需要更多信息来验证这一点。我希望其他玩家也能分享你们昨晚的观察或行动，即使只是很小的细节也可能帮助我们发现矛盾。让我们共同分析，不要让狼人利用信息不对称来误导我们。
[WebSocket] 辩论发言通知已发送: GLM-4.6
[RealtimeLogger] session_20251031_230246 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:62043 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 398 字符
[LLM原始响应开始]
{
  "reasoning": "DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 398 字符
[JSON解析] 输入文本预览: {
  "reasoning": "DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 398 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': 'DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': 'DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 自称预言家并公开查验结果，但他的发言中存在几个疑点。首先，他声称查验了GLM-4.6是村民，然后又说昨晚查验MiniMax-M1-80k是狼人。如果他是真正的预言家，为何在第二轮才开始公开自己的身份和查验结果？这可能是在试图引导局势，制造混乱。另外，他提到第一轮查验GLM，但GLM在第一轮并没有被特别针对，如果GLM真的是村民，DeepSeek的公开查验可能会让狼人知道预言家的行动，增加风险。此外，DeepSeek在第一轮辩论中曾指出Rings和MiniMax表现异常，但Rings被众人淘汰后，他又转而指责MiniMax。这种不断转移目标的行为可能是在混淆视听。综合这些因素，我认为DeepSeek-V3.2更有可能是狼人，他的目的是通过扮演预言家来误导村民的投票。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:62115 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 306 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 306 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 306 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这确实有些巧合。如果他真的是预言家，他的信息很有价值；但如果他是狼人，这可能是试图获取信任的策略。目前Ring-flash-2.0、DeepSeek-V3.2和MiniMax-M1-80k还没有发言，他们的沉默也值得注意。在没有更多信息的情况下，我认为Kimi-Dev-72B的声明最可疑，因为一个真正的预言家可能会选择查验更可疑的玩家而不是随机查验。我选择投票给Kimi-Dev-72B，以验证他的身份。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_230246 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:62222 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 290 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 290 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 290 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮确认GLM-4.6是村民，第二轮确认Kimi-Dev-72B是医生，第三轮确认MiniMax-M1-80k是狼人。现在场上有三名玩家：我（预言家）、GLM-4.6（村民）、Kimi-Dev-72B（医生）和MiniMax-M1-80k（狼人）。根据我的查验结果，MiniMax-M1-80k是唯一的狼人，而且他在前两轮辩论中一直保持沉默，这种行为模式符合狼人隐藏身份的策略。因此，我投票淘汰MiniMax-M1-80k，这样村民阵营就能获胜。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:62296 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 166 字符
[LLM原始响应开始]
{
"reasoning": "DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。",
"bid": "4"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 166 字符
[JSON解析] 输入文本预览: {
"reasoning": "DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。",
"bid": "4"
}'
[JSON字符串解析] 文本长度: 166 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。', 'bid': '4'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。', 'bid': '4'}
[JSON解析] 直接解析结果: {'reasoning': 'DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。', 'bid': '4'}
[JSON解析] 最终结果: {'reasoning': 'DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。', 'bid': '4'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2直接提到了我的名字，声称我是预言家查验过的村民，并且他现在指认MiniMax-M1-80k是狼人。作为被直接提及的玩家，我必须立即回应这个关键信息，因为这将直接影响游戏的走向。我需要表明我的立场，并分析DeepSeek-V3.2的言论是否可信。', 'bid': '4'}
[LLM结果] 提取键 'bid': 4
[LLM成功] 返回有效结果: 4
GLM-4.6 bid: 4
[LLM响应] 成功获取响应，长度: 539 字符
[LLM原始响应开始]
{
"reasoning": "DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 539 字符
[JSON解析] 输入文本预览: {
"reasoning": "DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 539 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': 'DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': 'DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'DeepSeek-V3.2 自称预言家并提供了查验结果，如果他是真的，那么 MiniMax-M1-80k 是狼人。但若他是在撒谎，可能自己就是狼人。作为医生，我需要评估这个信息的可信度。首先，他提到第一轮查验 GLM-4.6 是村民，第二轮查验我是医生，昨晚查验 MiniMax 是狼人。如果他的预言家身份是真的，那么 MiniMax 确实是狼人，村民应该投票他。但若 DeepSeek 是狼人，他可能在虚张声势，试图引导村民错误投票。然而，我作为医生，昨晚保护了自己，说明我可能在怀疑 MiniMax。但 DeepSeek 的发言可能是真的，也可能是假的。我需要考虑是否应该发言，表达对 DeepSeek 的信任或怀疑。如果我是 MiniMax，我可能会想自保。但我是医生，我的目标是保护关键角色。目前，如果 DeepSeek 是真的预言家，那么 MiniMax 是狼人，而 GLM 可能是另一个狼人。但是 DeepSeek 只查了三个人，还剩 GLM 和他自己。如果 DeepSeek 是狼人，他可能在谎报。我需要谨慎判断。由于我是医生，我应该发言，表达对 DeepSeek 信息的评估，以及提出下一步投票建议。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
Kimi-Dev-72B bid: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM响应] 成功获取响应，长度: 281 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 281 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 281 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。Kimi-Dev-72B声称自己是预言家并查验了被淘汰的Qwen3-32B是医生，这个时机确实很巧合。GLM-4.6对此提出了合理的质疑，指出需要更多信息来验证这个说法。考虑到游戏刚开始，信息有限，我认为Kimi-Dev-72B的行为存在可疑之处：他急于表明预言家身份并直接公开查验结果，这可能是狼人试图建立可信度的策略。相比之下，GLM-4.6的发言更加谨慎和理性，更符合村民的思考方式。因此我倾向于投票给Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_230246 [vote] DeepSeek-V3.2 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:62361 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:62416 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 416 字符
[LLM原始响应开始]
{
  "reasoning": "作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 416 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4....
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 416 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一个预言家，我昨晚查验了Qwen3-32B并确认他是医生。狼人昨晚选择了他作为目标，这表明狼人知道他是医生。现在，我们需要找出狼人。在第0轮辩论中，GLM-4.6对我的声明表示关注，并指出我恰好查验了被淘汰的玩家，这可能是个巧合，但也可能是怀疑。作为预言家，我需要保持自己的身份安全，同时帮助 villagers 找出狼人。考虑到狼人数量是2个，而村民包括我在内有3个（医生已死），我们需要尽快找出狼人。GLM-4.6的发言可能是在试探，但如果没有更多信息，我需要根据现有的线索来判断。狼人可能会试图混淆视听，而GLM-4.6的发言可能是在制造怀疑。因此，我可能会投票给GLM-4.6，因为他可能是狼人之一，试图通过质疑我来转移注意力。当然，这只是一个初步的判断，随着游戏的进行，我需要收集更多信息。但基于当前的信息，GLM-4.6是最可疑的。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251031_230246 [vote] Kimi-Dev-72B 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> GLM-4.6
⚠️ 未知的延迟类型: vote
GLM-4.6 投票淘汰 Kimi-Dev-72B
DeepSeek-V3.2 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 GLM-4.6
Ring-flash-2.0 投票淘汰 GLM-4.6
Kimi-Dev-72B 投票淘汰 GLM-4.6

[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了GLM-4.6。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:62526 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 798 字符
[LLM原始响应开始]
{"reasoning": "在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。","summary": "我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 798 字符
[JSON解析] 输入文本预览: {"reasoning": "在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。","summary": "我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。"}'
[JSON字符串解析] 文本长度: 798 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[JSON解析] 直接解析结果: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[JSON解析] 最终结果: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[LLM成功] 返回有效结果: {'reasoning': '在本轮辩论中，作为预言家的我查验了Qwen3-32B并确认他是医生。他被狼人淘汰，意味着狼人的目标是医生，因此需要找到其他医生玩家或者狼人可能藏匿的地方。我公开了这个信息，引发了讨论。GLM-4.6表示自己是村民，他对我查验Qwen3-32B的巧合表示怀疑，建议大家分享更多信息以验证。他的发言可能会引出其他人的信息，但同时也要警惕他是否是狼人。由于我是预言家，应该继续查验可能的狼人或者医生，来获取更多信息。投票中，GLM-4.6被再次处决，表明他可能树敌或者被定位为卧底。在下一轮中，我需要更小心地评估其他玩家的角色，尤其注意是否有新的医生或者狼人出现。同时，我应该继续公开查验结果，与其他玩家合作。', 'summary': '我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。'}
[LLM响应] 成功获取响应，长度: 641 字符
[LLM原始响应开始]
{
  "reasoning": "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。",
  "say": "DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 641 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。",
  "say": "DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。"
}'
[JSON字符串解析] 文本长度: 641 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
[JSON解析] 直接解析结果: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
[JSON解析] 最终结果: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
[LLM成功] 返回有效结果: {'reasoning': "我需要分析DeepSeek-V3.2的预言家声明是否符合逻辑。他声称在前两轮查验了我GLM-4.6和Kimi-Dev-72B，现在又指认MiniMax-M1-80k是狼人。作为被查验的'村民'，我需要评估这个声明的可信度。同时，我注意到医生保护成功两次，这是一个重要的模式，可能暗示医生玩家很优秀或者狼人选择目标的方式有问题。我会询问Kimi-Dev-72B是否真的是医生，并观察MiniMax-M1-80k的反应。我的策略是谨慎评估预言家的声明，同时观察其他玩家的反应，特别是被指认为狼人和被说成是医生的两个玩家。", 'say': 'DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。'}
GLM-4.6 (Villager): DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。
[RealtimeLogger] session_20251031_225511 [action] GLM-4.6 发言: DeepSeek-V3.2，你声称是预言家并查验了我GLM-4.6为村民，这确实符合我的身份。但我们需要谨慎，因为真正的预言家不会这么早就暴露自己，除非局势确实危急。你说查验了Kimi-Dev-72B为医生，MiniMax-M1-80k为狼人。我有几个问题想问：为什么你前两轮不公布这个重要信息？如果Kimi-Dev-72B真是医生，那么这两晚的保护成功就解释了。Kimi-Dev-72B，请确认你是否是医生？MiniMax-M1-80k，面对DeepSeek-V3.2的指控，你的辩解是什么？我注意到在第一轮，Kimi-Dev-72B的发言确实有些保守，这可能符合医生的身份特征。但我们需要更多信息才能判断谁在说真话。我建议我们不要急于投票，先听听两位当事人的回应，再结合之前的投票行为做出判断。
[WebSocket] 辩论发言通知已发送: GLM-4.6
[RealtimeLogger] session_20251031_225511 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第2轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:62619 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 427 字符
[LLM原始响应开始]
{
"reasoning": "在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。",
"summary": "我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 427 字符
[JSON解析] 输入文本预览: {
"reasoning": "在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-D...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。",
"summary": "我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。"
}'
[JSON字符串解析] 文本长度: 427 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
[JSON解析] 直接解析结果: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
[JSON解析] 最终结果: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
[LLM成功] 返回有效结果: {'reasoning': '在本轮辩论中，关键信息是Kimi-Dev-72B声称自己是预言家并查验了Qwen3-32B是医生。我作为无特殊能力的村民，需要对这些声明保持警惕。虽然表面看Kimi-Dev-72B的声明与Qwen3-32B被杀的情况一致，但GLM-4.6提出的质疑很有道理：为什么预言家恰好查验了被杀的玩家？这可能太巧合了。我需要记住这点，并在后续辩论中验证Kimi-Dev-72B的身份。同时注意潜在狼人可能会利用信息不对称来误导大家。', 'summary': '我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。'}
DeepSeek-V3.2 summary: 我是村民DeepSeek-V3.2，我注意到Kimi-Dev-72B声称自己是预言家并查验了死去的Qwen3-32B是医生。GLM-4.6对此提出合理质疑，认为这种巧合需要小心验证。我投票淘汰了Kimi-Dev-72B，但因为大多数票淘汰了GLM-4.6导致他被投出。目前我对Kimi-Dev-72B的预言家身份存疑，需要继续观察他和其他玩家的发言行为来判断真假。
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
Kimi-Dev-72B summary: 我是预言家，在夜晚查验到Qwen3-32B是医生，但当晚他就被狼人杀害。在白天讨论中，我公开这一信息并建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡， BloomTreeWidgetItemplayer对此保持沉默。需要关注contentTypeTomorrow和其他玩家，尤其是医生玩家可能出现的 protective behaviour，以及wolf人的狙杀目标。我作为预言家，连续查验两个医生（Qwen3-32B 和 BloomTreeWidgetItemplayer - 假设），都 Quickly 被killed。这提示狼人的目标是医生，我需要调整策略查验其他可能是狼人的玩家，或者等待医生再次出现。同时，其他村民玩家如contentTypeTomorrow若无特殊能力，应积极讨论和指 责，以缩小狼人范围。整个讨论过程，玩家需要分享信息，利用预言家获得更多情报，医生尽可能保护关键玩家，村民则投票依靠推理。
第0轮结束。
STARTING ROUND: 1
狼人正在选择淘汰目标。
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
Ring-flash-2.0 eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
医生正在选择保护目标。
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:62654 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 429 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。",
"investigate": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 429 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。",
"investigate": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 429 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。', 'investigate': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我是预言家，查验了Qwen3-32B发现他是医生，但当晚他就被狼人杀害。在白天讨论中，我公开了这一信息，建议讨论其他人的行为。GLM-4.6表示作为村民，怀疑我查验的时机，但没有提供新的信息。通过对GLM-4.6投票处决，他的furtner player已经死亡，BloomTreeWidgetItemplayer对此保持沉默。这提示狼人的目标可能是医生，我需要调整策略查验其他可能是狼人的玩家。现在剩余玩家中，DeepSeek-V3.2, Ring-flash-2.0, MiniMax-M1-80k。其中DeepSeek-V3.2可能是医生（因为之前医生被查出并被杀），Ring-flash-2.0和MiniMax-M1-80k行为未明。我应该查验Ring-flash-2.0，因为他可能是狼人，且在白天讨论中没有提供太多信息，行为可疑。', 'investigate': 'Ring-flash-2.0'}
[LLM结果] 提取键 'investigate': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B

[调试] 成功从current_players中移除玩家: Kimi-Dev-72B, 剩余玩家: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Kimi-Dev-72B。
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:62765 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 469 字符
[LLM原始响应开始]
{
  "reasoning": "我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 469 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-8...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 469 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我需要分析当前局势。DeepSeek-V3.2声称是预言家，并给出了三个查验结果：我是村民（符合我的身份），Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。虽然他对我身份的判断正确，但这不能完全证明他是预言家，因为狼人也可能通过观察推断出我的村民身份。我注意到几个疑点：1）真正的预言家通常不会这么早暴露自己，除非局势确实危急；2）如果Kimi-Dev-72B真是医生，那么前两晚的保护成功就解释了，但第一轮我投票淘汰Kimi-Dev-72B是因为他发言保守，这与医生身份相符；3）DeepSeek-V3.2前两轮没有公布这些重要信息，现在突然全部公布，时机可疑。我倾向于认为DeepSeek-V3.2可能是假预言家，试图利用信息优势误导投票。MiniMax-M1-80k虽然被指控，但我们还没有听到他的辩解。我决定投票给DeepSeek-V3.2，因为他的行为模式更符合狼人特征——试图通过制造混乱和虚假指控来控制局势。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [vote] GLM-4.6 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: GLM-4.6 -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM响应] 成功获取响应，长度: 143 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 143 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 143 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言。目前游戏只剩下三名玩家，情况非常关键。我注意到Kimi-Dev-72B作为预言家候选人被狼人淘汰，这很可疑，可能说明他是真正的预言家，或者狼人在制造假象。我需要先观察其他两位玩家的发言，再做出判断。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_225511 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[RealtimeLogger] session_20251031_230246 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
[RealtimeLogger] session_20251031_230246 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:62818 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 418 字符
[LLM原始响应开始]
{
  "reasoning": "首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 418 字符
[JSON解析] 输入文本预览: {
  "reasoning": "首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 418 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，我作为医生，我的目标是保护关键角色并帮助村民找出狼人。从游戏进程来看，DeepSeek-V3.2突然宣布自己是预言家，并且公布了查验结果，称MiniMax-M1-80k是狼人。但这个行为让我有些怀疑，因为预言家通常会保持低调，避免过早暴露身份。GLM-4.6也提出了疑问，为什么DeepSeek之前不公布这些信息。这可能是因为DeepSeek是狼人，试图通过冒充预言家来误导大家。另外，我注意到DeepSeek在第一轮投票中被我投票淘汰，但最后却幸存下来，这可能是因为他有狼人的自保能力。而MiniMax-M1-80k在被指控后没有辩解，可能是因为他确实是狼人，或者是在策略上保持沉默。考虑到这些因素，我认为DeepSeek-V3.2更有可能是狼人，因为他急于暴露预言家身份并引导投票。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251031_225511 [vote] Kimi-Dev-72B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:62904 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 409 字符
[LLM原始响应开始]
{
  "reasoning": "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 409 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 409 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。", 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "我作为村民需要仔细分析当前局势。在第0轮中，Kimi-Dev-72B声称自己是预言家并查验了已出局的Qwen3-32B是医生，但GLM-4.6对此提出了合理质疑。现在第1轮夜晚Kimi-Dev-72B被淘汰，这很可疑。如果Kimi-Dev-72B真的是预言家，狼人淘汰他很合理；但如果他是狼人，这可能是狼队在清除可疑队友。目前场上只剩下三名玩家：我、MiniMax-M1-80k和Ring-flash-2.0。考虑到MiniMax-M1-80k在本轮辩论中只说了一句'我需要仔细观察并寻找线索'，这种过于谨慎和模糊的发言在只剩三人的情况下显得可疑，可能是在隐藏身份。而Ring-flash-2.0还没有发言，我需要基于现有信息做出判断。我认为MiniMax-M1-80k的行为更像是在避免暴露自己，因此我选择投票淘汰他。", 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_230246 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] MiniMax-M1-80k 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] Ring-flash-2.0 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
[LLM响应] 成功获取响应，长度: 281 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 281 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 281 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我已经完成了三轮查验：第一轮查验GLM-4.6为村民，第二轮查验Kimi-Dev-72B为医生，第三轮查验MiniMax-M1-80k为狼人。现在场上只剩四名玩家，其中两名好人（GLM-4.6村民和Kimi-Dev-72B医生）的身份都已确认，那么剩下的MiniMax-M1-80k必然是狼人。虽然GLM-4.6对我的身份提出合理质疑，但这是好人方的正常谨慎表现。我的查验结果明确显示MiniMax-M1-80k是狼人，投票淘汰他即可确保村民阵营胜利。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_225511 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
GLM-4.6 投票淘汰 DeepSeek-V3.2
MiniMax-M1-80k 投票淘汰 GLM-4.6
Kimi-Dev-72B 投票淘汰 DeepSeek-V3.2
DeepSeek-V3.2 投票淘汰 MiniMax-M1-80k

没有达到多数票，因此没有人被淘汰。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:63020 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 111 字符
[LLM原始响应开始]
{
"reasoning": "目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 111 字符
[JSON解析] 输入文本预览: {
"reasoning": "目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。",
"...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 111 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前游戏进入关键阶段，仅剩3名玩家，我需要分析Kimi-Dev-72B被狼人淘汰的蹊跷之处，这可能是狼人故意制造的假象。作为村民，我必须分享重要推理来推动讨论。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
DeepSeek-V3.2 bid: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:63165 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 656 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。"
,
"summary": "本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 656 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。"
,
"summary": "本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。"
}'
[JSON字符串解析] 文本长度: 656 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，我的保护目标是自己，因此保证了安全。本轮中，DeepSeek-V3.2声称自己是预言家并公开查验结果。不过，他的公开行为可能存疑。GLM-4.6提醒大家命题家通常不会这么早就暴露身份，这让我有些警惕。DeepSeek-V3.2在第二轮突然公布信息，可能是在迷惑视听或者企图引导投票。由于我是医生，前两轮保护成功也印证了这一点。因此，我需要警惕DeepSeek-V3.2的真实身份，是否狼人假扮的预言家。他们可能会通过这种方式混淆视听，诱导村民去投狼人想要的玩家。同时，GLM-4.6的发言逻辑清晰，没有明确表明自己身份，可能是真正的平民或者医生。但作为医生，我已有保护策略。暂时，我应该保持沉默，不暴露自己的位置，继续保护关键玩家，比如GLM-4.6或者自己，并在投票时更谨慎。', 'summary': '本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。'}
INFO:     127.0.0.1:63287 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 512 字符
[LLM原始响应开始]
{
"reasoning": "本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。",
"summary": "我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 512 字符
[JSON解析] 输入文本预览: {
"reasoning": "本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。",
"summary": "我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。"
}'
[JSON字符串解析] 文本长度: 512 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[JSON解析] 直接解析结果: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[JSON解析] 最终结果: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[LLM成功] 返回有效结果: {'reasoning': '本轮辩论至关重要，我明确亮明了预言家身份并公布了所有查验结果。GLM-4.6作为我确认的村民，对我的身份表示认可但提出了合理的质疑，需要确认医生身份。这显示出他的谨慎和配合态度，是可靠的盟友。我的查验结果完全准确：第一轮查验GLM-4.6是村民，第二轮查验Kimi-Dev-72B是医生，第三轮查验MiniMax-M1-80k是狼人。现在需要重点关注的是：Kimi-Dev-72B需要确认医生身份，MiniMax-M1-80k需要回应我的指控。投票未达成多数很可能是有人没有投票给狼人，这需要在下轮重点解决。', 'summary': '我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。'}
[LLM响应] 成功获取响应，长度: 645 字符
[LLM原始响应开始]
{
"reasoning": "我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。",
"summary": "我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 645 字符
[JSON解析] 输入文本预览: {
"reasoning": "我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。",
"summary": "我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。"
}'
[JSON字符串解析] 文本长度: 645 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
[JSON解析] 直接解析结果: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
[JSON解析] 最终结果: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
[LLM成功] 返回有效结果: {'reasoning': '我作为村民GLM-4.6需要仔细分析DeepSeek-V3.2的预言家声明。他声称查验我为村民（符合事实）、查验Kimi-Dev-72B为医生（能解释两晚无人被淘汰）、查验MiniMax-M1-80k为狼人。关键疑点在于：1）预言家为何在第二轮才暴露身份，通常预言家会留到局势危急时才暴露；2）如果Kimi-Dev-72B真是医生，他第一轮的保守发言确实合理的；3）我之前认为DeepSeek-V3.2像好人阵营，但也不能排除他是狼人冒充预言家的可能。MiniMax-M1-80k和Kimi-Dev-72B的回应将是判断的关键，尤其是Kimi-Dev-72B是否承认医生身份。我的投票行为需要谨慎考虑这些因素。', 'summary': '我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。'}
GLM-4.6 summary: 我是GLM-4.6，在第二轮辩论中，DeepSeek-V3.2突然声称自己是预言家，并宣布查验结果：我是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。我对此表示怀疑，因为真正的预言家通常不会这么早暴露自己。Kimi-Dev-72B如果是医生，可以解释前两晚无人被淘汰的现象。MiniMax-M1-80k面临严重指控但还未回应。我注意到DeepSeek-V3.2在之前的讨论中表现出领导力，但这可能只是策略。我建议不急于投票，先听听Kimi-Dev-72B和MiniMax-M1-80k的回应，再结合他们的投票模式做出判断。我仍保持警惕，因为狼人可能通过冒充预言家来误导我们村民的投票。
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
Kimi-Dev-72B summary: 本轮辩论中，DeepSeek-V3.2公开宣称自己是预言家并揭示了查验结果，指出MiniMax-M1-80k为狼人。GLM-4.6则对DeepSeek的做法表示怀疑，认为预言家不会这么早暴露，并询问Kimi-Dev-72B是否为医生。我作为医生，两晚的保护成功加上保持沉默，使得局势复杂。DeepSeek的公开行为让我怀疑其可能为狼人所假扮，意图引导村民投票错误。GLM-4.6的发言逻辑合理，可能是可信的村民。因此，我需要在接下来的投票中更加小心，不跟从DeepSeek的建议，而是结合之前的行为和逻辑来判断。同时，继续使用医生技能保护自己或其他玩家。
DeepSeek-V3.2 summary: 我是预言家DeepSeek-V3.2，本轮我直接公开了身份并公布了所有查验结果：GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。GLM-4.6对我的身份表示认可但要求谨慎，需要确认医生身份并听取狼人的辩解。现在局势非常明朗，我们只需要确保Kimi-Dev-72B承认医生身份，然后一起投票淘汰MiniMax-M1-80k就能获得胜利。投票未达成多数表明可能有人没有投票给狼人，这在下一轮需要重点关注和纠正。
第2轮结束。
STARTING ROUND: 3
狼人正在选择淘汰目标。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k (Werewolf) did not return a valid eliminate target, using default
MiniMax-M1-80k eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by MiniMax-M1-80k
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 522 字符
[LLM原始响应开始]
{
  "reasoning": "当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。",
  "say": "各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 522 字符
[JSON解析] 输入文本预览: {
  "reasoning": "当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。",
  "say": "各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。"
}'
[JSON字符串解析] 文本长度: 522 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
[JSON解析] 最终结果: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '当前游戏仅剩3名玩家：我（村民）、Ring-flash-2.0和MiniMax-M1-80k。Kimi-Dev-72B作为声称是预言家的玩家被狼人淘汰，这个情况很可疑。狼人为什么要淘汰一个自称预言家的玩家？有两种可能：一是Kimi真的是预言家，狼人为了消灭威胁而淘汰他；二是狼人故意淘汰同伙来制造假象，让剩下的玩家误以为Kimi是真的预言家。现在关键是要分析剩下的两名玩家的行为。MiniMax-M1-80k的发言非常简短模糊，需要重点关注。作为村民，我必须谨慎推理，通过分析发言逻辑和行为模式来找出狼人。', 'say': '各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。'}
DeepSeek-V3.2 (Villager): 各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。
INFO:     127.0.0.1:63368 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251031_230246 [action] DeepSeek-V3.2 发言: 各位注意，现在只剩下我们三个玩家了。Kimi-Dev-72B声称自己是预言家，结果被狼人淘汰，这事很蹊跷。如果是真预言家，狼人淘汰他很合理；但如果是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。MiniMax-M1-80k，你的发言太简短了，只是在说需要观察线索，但没有任何实质性分析。现在局面很清楚了：要么Ring-flash-2.0是狼人，要么你是狼人。我建议大家都认真分析一下Kimi昨晚的淘汰到底意味着什么。作为村民，我希望剩下的好人能够团结起来找出真正的狼人。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
[RealtimeLogger] session_20251031_230246 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM响应] 成功获取响应，长度: 195 字符
[LLM原始响应开始]
{"reasoning": "在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。", "protect": "DeepSeek-V3.2"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 195 字符
[JSON解析] 输入文本预览: {"reasoning": "在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。", "protect": "DeepSeek-V3.2"}'
[JSON字符串解析] 文本长度: 195 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。', 'protect': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在前几轮中，DeepSeek公开宣称自己是预言家并揭示了查验结果，这使他成为狼人的主要目标。如果他是真正的预言家，狼人会试图除掉他。同时，我作为医生，保护自己也很重要，但保护预言家可能更关键。GLM和MiniMax目前没有表现出特殊角色，可能相对安全。因此，保护DeepSeek-V3.2是最佳选择。', 'protect': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'protect': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
Kimi-Dev-72B protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by Kimi-Dev-72B
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:63428 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 373 字符
[LLM原始响应开始]
{
  "reasoning": "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 373 字符
[JSON解析] 输入文本预览: {
  "reasoning": "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 373 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。", 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "现在只剩下三名玩家，其中必然有一个狼人。回顾游戏过程，Kimi-Dev-72B在第一轮声称自己是预言家并查验了已死的Qwen3-32B是医生，这个行为本身就值得怀疑。现在Kimi被狼人淘汰，有两种可能：如果他是真预言家，狼人淘汰他很合理；如果他是假预言家，狼人淘汰同伙来混淆视听也很符合逻辑。观察MiniMax-M1-80k的发言，他在本轮辩论中只说'需要观察线索'，没有任何实质性分析，这种模糊的发言很可能是狼人在隐藏身份。相比之下，Ring-flash-2.0虽然还没有发言，但考虑到MiniMax的异常沉默和缺乏建设性分析，我更倾向于认为MiniMax是狼人。作为村民，我必须做出选择，基于行为分析，我认为MiniMax-M1-80k最可疑。", 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251031_230246 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] MiniMax-M1-80k 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:63481 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_230246 [vote] Ring-flash-2.0 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> DeepSeek-V3.2
⚠️ 未知的延迟类型: vote
DeepSeek-V3.2 投票淘汰 MiniMax-M1-80k
MiniMax-M1-80k 投票淘汰 DeepSeek-V3.2
Ring-flash-2.0 投票淘汰 DeepSeek-V3.2

[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k']
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了DeepSeek-V3.2。
白天阶段后检查胜负。
获胜者是：狼人！
第1轮结束。
游戏结束！
INFO:     127.0.0.1:63570 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 422 字符
[LLM原始响应开始]
{
"reasoning": "在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。",
"investigate": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 422 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。",
"investigate": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 422 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。', 'investigate': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第3轮夜间阶段，我作为预言家需要仔细分析剩余玩家的行为和可能存在的疑点。目前剩余玩家包括GLM-4.6、Kimi-Dev-72B和MiniMax-M1-80k。根据前两轮查验结果，我已确认GLM-4.6是村民，Kimi-Dev-72B是医生，MiniMax-M1-80k是狼人。然而，在第2轮投票中，我们未能成功淘汰MiniMax-M1-80k，这表明可能存在我没有发现的疑点。虽然我的查验结果明确显示MiniMax-M1-80k是狼人，但我需要确认是否还有其他潜在威胁。GLM-4.6作为村民一直表现积极，而Kimi-Dev-72B作为医生在前两轮中沉默，但通过我的查验确认其身份。因此，为了确保局势的完全明朗，我决定再次查验MiniMax-M1-80k，以确认其狼人身份并排除任何可能的误判，从而在下一轮白天阶段更有力地推动投票淘汰。', 'investigate': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'investigate': MiniMax-M1-80k
[LLM警告] 结果 'MiniMax-M1-80k' 不在允许值 [] 中，将重试...
[LLM调用] 第2/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:63632 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     connection closed
INFO:     connection closed
INFO:     connection closed
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [35558]
WebSocket disconnected for session session_20251031_230246. Remaining connections: 1
WebSocket disconnected for session session_20251031_230246
WebSocket disconnected for session session_20251031_225913. Remaining connections: 0
WebSocket disconnected for session session_20251031_225913
WebSocket disconnected for session session_20251031_230246. Remaining connections: 0
WebSocket disconnected for session session_20251031_230246
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [37019]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:63745 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [37019]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [37047]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64162 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64703 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [37047]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [37138]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64771 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64824 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [37138]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [37168]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64922 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64959 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65014 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65093 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65169 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65203 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65262 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65351 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65408 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65463 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49192 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49291 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49343 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49438 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49517 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49591 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49626 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49721 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49789 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49838 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49894 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49927 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50015 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50078 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50113 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50179 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50264 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50297 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50398 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50506 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50545 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50630 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50740 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50797 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50892 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50932 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51128 - "GET /health HTTP/1.1" 200 OK
INFO:     ('127.0.0.1', 51177) - "WebSocket /ws/session_20251031_230246" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 51179) - "WebSocket /ws/session_20251031_230246" [accepted]
INFO:     connection open
INFO:     connection closed
WebSocket connected for session session_20251031_230246. Total connections: 1
WebSocket connected for session session_20251031_230246. Total connections: 2
WebSocket disconnected for session session_20251031_230246. Remaining connections: 1
WebSocket disconnected for session session_20251031_230246
INFO:     127.0.0.1:51189 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
医生 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
狼人 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:51189 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 51193) - "WebSocket /ws/session_20251031_231506" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 51195) - "WebSocket /ws/session_20251031_231506" [accepted]
INFO:     connection open
STARTING ROUND: 0
[RealtimeLogger] Initialized session session_20251031_231506, log file: logs/session_20251031_231506/realtime_logs.jsonl
[RealtimeLogger] session_20251031_231506 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
狼人正在选择淘汰目标。
WebSocket connected for session session_20251031_231506. Total connections: 1
WebSocket connected for session session_20251031_231506. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:51261 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 190 字符
[LLM原始响应开始]
{
"reasoning": "现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。",
"remove": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 190 字符
[JSON解析] 输入文本预览: {
"reasoning": "现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。",
"remove": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 190 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。', 'remove': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。', 'remove': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。', 'remove': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。', 'remove': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在是游戏的第一个夜晚阶段，我作为唯一的狼人需要在没有任何信息的情况下选择淘汰目标。由于缺乏任何玩家的行为信息或发言模式，我只能随机选择。我决定选择MiniMax-M1-80k作为目标，这是完全随机的选择，没有特别的理由。在后续的游戏中，我会根据白天的发言和投票行为来制定更精确的策略。', 'remove': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'remove': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
GLM-4.6 eliminated MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_eliminate by GLM-4.6
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:51294 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51331 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 197 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。",
"protect": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 197 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。",
"protect": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 197 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。', 'protect': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。', 'protect': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在第一轮夜晚阶段没有任何玩家发言或投票信息可供参考。由于这是游戏初始阶段，所有玩家的身份对我而言都是未知的，无法判断谁是真正的脆弱玩家。在这种情况下，我只能随机选择一个玩家进行保护。我选择了Kimi-Dev-72B，因为随机选择可以避免暴露任何模式或策略，同时确保保护行动不会基于无效的假设。', 'protect': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'protect': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
DeepSeek-V3.2 protected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 100 字符
[LLM原始响应开始]
{
"reasoning": "由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。",
"investigate": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 100 字符
[JSON解析] 输入文本: {
"reasoning": "由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。",
"investigate": "DeepSeek-V3.2"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。",
"investigate": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 100 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。', 'investigate': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第一轮，没有任何已知信息，我将随机选择一个玩家进行调查。我选择了DeepSeek-V3.2。', 'investigate': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'investigate': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B

[调试] 成功从current_players中移除玩家: MiniMax-M1-80k, 剩余玩家: ['Kimi-Dev-72B', 'DeepSeek-V3.2', 'GLM-4.6', 'Qwen3-32B', 'Ring-flash-2.0']
Player MiniMax-M1-80k not in current players: ['Kimi-Dev-72B', 'DeepSeek-V3.2', 'GLM-4.6', 'Qwen3-32B', 'Ring-flash-2.0']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
Player MiniMax-M1-80k not in current players: ['Kimi-Dev-72B', 'DeepSeek-V3.2', 'GLM-4.6', 'Qwen3-32B', 'Ring-flash-2.0']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
Player MiniMax-M1-80k not in current players: ['Kimi-Dev-72B', 'DeepSeek-V3.2', 'GLM-4.6', 'Qwen3-32B', 'Ring-flash-2.0']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
Player MiniMax-M1-80k not in current players: ['Kimi-Dev-72B', 'DeepSeek-V3.2', 'GLM-4.6', 'Qwen3-32B', 'Ring-flash-2.0']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了MiniMax-M1-80k。
[RealtimeLogger] session_20251031_231506 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[RealtimeLogger] session_20251031_231506 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:51412 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 87 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 87 字符
[JSON解析] 输入文本: {
"reasoning": "作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 87 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎发言以避免引起怀疑。目前讨论尚未开始，我选择先观察和聆听其他玩家的发言，以便更好地了解局势。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 118 字符
[LLM原始响应开始]
{
"reasoning": "作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 118 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 118 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我需要分享我的查验信息。我查到了DeepSeek-V3.2是医生，这个信息对大家很重要，可以避免晚上狼人攻击医生时被保护。所以我要出价2来发言，分享这个关键信息。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
Kimi-Dev-72B bid: 2
[LLM响应] 成功获取响应，长度: 91 字符
[LLM原始响应开始]
{
"reasoning": "游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 91 字符
[JSON解析] 输入文本: {
"reasoning": "游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 91 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '游戏刚开始，第一夜已有玩家被淘汰，我需要先观察其他玩家的发言和反应，收集信息后再做判断，避免过早暴露身份或做出错误指控。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM响应] 成功获取响应，长度: 119 字符
[LLM原始响应开始]
{
"reasoning": "作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 119 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 119 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为剩下的唯一狼人，我需要谨慎参与讨论。目前游戏刚开始，发言过多可能引起怀疑，但完全沉默也不利。我会选择适度参与，观察其他玩家的发言模式，寻找可能的神职角色，同时避免成为焦点。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
INFO:     127.0.0.1:51506 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 408 字符
[LLM原始响应开始]
{
  "reasoning": "作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。",
  "say": "我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 408 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 eveni...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。",
  "say": "我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。"
}'
[JSON字符串解析] 文本长度: 408 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
[LLM成功] 返回有效结果: {'reasoning': '作为预言家，我的角色目标是帮助村民们识别并驱逐狼人。在夜晚阶段，我查证了DeepSeek-V3.2是医生。分享这一信息对白天的讨论至关重要，因为如果狼人 evening 攻击医生，医生会尝试保护自己，这可能影响我们的推理。通过公开医生的信息，可以避免在投票时误伤医生，同时通过分析医生的保护行为来缩小狼人的范围。此外，如果有人在讨论中对应医生的行动言辞模糊，这可能是狼人的破绽。因此，我在辩论中出价2，并分享查证到的医生信息，以引导讨论方向并增强村民们 对狼人的辨识力。', 'say': '我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。'}
Kimi-Dev-72B (Seer): 我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。
[RealtimeLogger] session_20251031_231506 [action] Kimi-Dev-72B 发言: 我是预言家，我查证到DeepSeek-V3.2是医生。昨晚狼人攻击了MiniMax-M1-80k，但医生是否保护了他？请医生说明。村民们，我们应该先看看 tonight 的情况，但白天的关键是我们要确定哪些人可能是狼人。请所有玩家公开你们的行动，包括你昨晚是否被查验或被保护过。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
[RealtimeLogger] session_20251031_231506 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 206 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 206 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 206 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并提到DeepSeek-V3.2是医生，但目前没有其他人能证实这一点。同时，Kimi-Dev-72B在发言中试图引导大家关注其他玩家的行动，却没有提供明确的证据来支持自己的身份。这种行为可能是在制造混乱并转移注意力，因此我倾向于怀疑其真实性并投票淘汰Kimi-Dev-72B。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_231506 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_231506 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:51586 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:51668 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 252 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 252 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 252 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并声称查验了DeepSeek-V3.2的身份。作为唯一的狼人，我需要优先处理这个自称预言家的玩家，因为预言家是村民阵营中最强大的角色，能够查验我的身份。如果Kimi-Dev-72B真的是预言家，他会在下一轮查验我，暴露我的狼人身份。即使他不是真预言家，他也可能是一个有影响力的村民，能够说服其他人投票淘汰我。因此，我必须投票淘汰Kimi-Dev-72B来消除这个威胁。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_231506 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:51721 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51753 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 320 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 320 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 320 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我昨晚保护了Kimi-Dev-72B，但狼人却淘汰了MiniMax-M1-80k，这说明我的保护目标与狼人的攻击目标不一致。Kimi-Dev-72B声称自己是预言家并查验了我，这可能是真实的，因为我的身份确实是医生。然而，我需要考虑其他玩家的行为。GLM-4.6和Qwen3-32B在辩论中异常沉默，没有发表任何言论，这种沉默可能是在隐藏狼人身份。Ring-flash-2.0也没有发言，但考虑到Kimi-Dev-72B的预言家身份尚未完全确认，我暂时不投票给他。我选择投票给GLM-4.6，因为他的沉默行为较为可疑，且可能是在避免暴露狼人身份。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251031_231506 [vote] DeepSeek-V3.2 投票给 GLM-4.6
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:51802 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51859 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 933 字符
[LLM原始响应开始]
{
  "reasoning": "我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 933 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 933 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家，昨晚查证了DeepSeek-V3.2是医生。狼人昨晚攻击了MiniMax-M1-80k，但医生是否保护了他？如果医生昨晚保护了MiniMax-M1-80k，那么狼人的攻击没有成功。但是MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击的目标是MiniMax-M1-80k，但医生昨晚保护的是谁？医生可能会说他昨晚保护了MiniMax-M1-80k，但那不成立。所以医生昨晚没有保护任何人，或者保护了其他人。但是医生是DeepSeek-V3.2，他昨晚的行动是什么？如果他昨晚没有保护任何人，那么狼人攻击成功。如果他保护了其他人，那么那个被保护的人是安全的。但是现在MiniMax-M1-80k已经被淘汰，说明医生没有保护他。所以狼人攻击了MiniMax-M1-80k，医生没有保护他。那么狼人是谁？狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。因为Kimi-Dev-72B是预言家，DeepSeek-V3.2是医生，所以剩下的玩家中，Qwen3-32B, Ring-flash-2.0, GLM-4.6可能是狼人。狼人昨晚选择了攻击MiniMax-M1-80k，但MiniMax-M1-80k已经不在了，所以狼人可能在混淆视听。但是狼人攻击了MiniMax-M1-80k，说明狼人想除掉他。为什么？可能是因为MiniMax-M1-80k是某个重要角色，比如预言家或医生。但是MiniMax-M1-80k已经死了，所以狼人可能在试图隐藏他们的目标。现在，我们需要找出狼人。医生是DeepSeek-V3.2，他昨晚没有保护MiniMax-M1-80k，所以医生可能在自保。那么，狼人可能是Qwen3-32B或Ring-flash-2.0或GLM-4.6。在没有更多信息的情况下，我需要根据玩家的行为来判断。如果某个玩家在辩论中表现得异常，比如试图转移注意力，或者有不一致的陈述，那么他可能是狼人。但是目前还没有足够的信息。所以，我可能会投票给Qwen3-32B，因为他是剩下的玩家之一，且没有提供任何信息，可能是狼人。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251031_231506 [vote] Kimi-Dev-72B 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:51948 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 165 字符
[LLM原始响应开始]
{
"reasoning": "Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 165 字符
[JSON解析] 输入文本预览: {
"reasoning": "Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 165 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并查证了DeepSeek-V3.2是医生，这可能是真的也可能是假的。作为最后一个狼人，我需要谨慎回应，避免暴露身份。我应该适度参与讨论，不要过于激进或过于沉默，以免引起怀疑。现在我可以先听听其他人的发言，再决定如何引导讨论方向。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
INFO:     127.0.0.1:51979 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 86 字符
[LLM原始响应开始]
{
"reasoning": "Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。",
"bid": "4"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 86 字符
[JSON解析] 输入文本: {
"reasoning": "Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。",
"bid": "4"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。",
"bid": "4"
}'
[JSON字符串解析] 文本长度: 86 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。', 'bid': '4'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。', 'bid': '4'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。', 'bid': '4'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。', 'bid': '4'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家并直接提到了我，作为医生我需要回应他的查验结果，同时澄清我的保护行动。', 'bid': '4'}
[LLM结果] 提取键 'bid': 4
[LLM成功] 返回有效结果: 4
DeepSeek-V3.2 bid: 4
INFO:     127.0.0.1:52051 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52130 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52180 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52240 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52354 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52384 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52446 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52510 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52580 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52637 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52719 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52775 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52848 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52922 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53081 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53136 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53168 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53229 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53318 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53434 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53504 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53538 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53598 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53643 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53672 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53761 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53825 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53928 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53995 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54099 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54150 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54181 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54270 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54329 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54384 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54438 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54534 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54627 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54719 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54812 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54847 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:54921 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/api/v1/routes/websocket.py'. Reloading...
INFO:     Shutting down
INFO:     connection closed
INFO:     connection closed
INFO:     connection closed
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [37168]
WebSocket disconnected for session session_20251031_231506. Remaining connections: 1
WebSocket disconnected for session session_20251031_231506
WebSocket disconnected for session session_20251031_230246. Remaining connections: 0
WebSocket disconnected for session session_20251031_230246
WebSocket disconnected for session session_20251031_231506. Remaining connections: 0
WebSocket disconnected for session session_20251031_231506
🛑 Shutting down Werewolf Arena API...
[LLM响应] 成功获取响应，长度: 148 字符
[LLM原始响应开始]
{
"reasoning": "当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 148 字符
[JSON解析] 输入文本预览: {
"reasoning": "当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 148 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '当前是游戏的初始阶段，Kimi-72B 提到了昨晚的情况，但没有明确指出谁是狼人。作为村民，我需要谨慎发言以避免过早暴露身份。现在最重要的是倾听其他玩家的发言并观察他们的行为模式，从而更好地判断谁可能是狼人。因此，我选择先观察和聆听。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
WARNING:  WatchFiles detected changes in 'src/api/v1/routes/websocket.py', 'src/core/game/game_master.py', 'src/services/game_manager/session_manager.py'. Reloading...
INFO:     Started server process [38819]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:54979 - "GET /health HTTP/1.1" 200 OK
INFO:     ('127.0.0.1', 55728) - "WebSocket /ws/session_20251031_231506" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 56105) - "WebSocket /ws/session_20251031_231506" [accepted]
INFO:     connection open
WARNING:  WatchFiles detected changes in 'src/api/v1/routes/websocket.py', 'src/core/game/game_master.py', 'src/services/game_manager/session_manager.py'. Reloading...
INFO:     Shutting down
INFO:     connection closed
INFO:     connection closed
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [38819]
WebSocket connected for session session_20251031_231506. Total connections: 1
WebSocket connected for session session_20251031_231506. Total connections: 2
WebSocket disconnected for session session_20251031_231506. Remaining connections: 1
WebSocket disconnected for session session_20251031_231506
WebSocket disconnected for session session_20251031_231506. Remaining connections: 0
WebSocket disconnected for session session_20251031_231506
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [38835]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:56194 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56398 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56461 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56468 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
医生 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
狼人 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:56468 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 56470) - "WebSocket /ws/session_20251031_232732" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 56472) - "WebSocket /ws/session_20251031_232732" [accepted]
INFO:     connection open
STARTING ROUND: 0
[RealtimeLogger] Initialized session session_20251031_232732, log file: logs/session_20251031_232732/realtime_logs.jsonl
[RealtimeLogger] session_20251031_232732 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
狼人正在选择淘汰目标。
WebSocket connected for session session_20251031_232732. Total connections: 1
WebSocket connected for session session_20251031_232732. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 104 字符
[LLM原始响应开始]
{
"reasoning": "我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。",
"remove": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 104 字符
[JSON解析] 输入文本预览: {
"reasoning": "我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。",
"remove": "DeepSeek-V3....
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。",
"remove": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 104 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。', 'remove': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是狼人，现在只剩下我一个狼人了。由于没有可用信息，我需要随机选择一个玩家进行淘汰。我将从剩余的玩家中随机挑选一个。', 'remove': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'remove': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
Kimi-Dev-72B eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
医生正在选择保护目标。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 146 字符
[LLM原始响应开始]
{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。",
"protect": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 146 字符
[JSON解析] 输入文本预览: {
"reasoning": "在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护M...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。",
"protect": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 146 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。', 'protect': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。', 'protect': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。', 'protect': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。', 'protect': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，所有玩家都没有发言或行动记录，因此无法判断谁更可能是狼人。在这种情况下，我作为医生需要随机选择一个玩家进行保护。经过随机选择，我决定保护MiniMax-M1-80k。', 'protect': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'protect': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
Qwen3-32B protected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_protect by Qwen3-32B
预言家正在查验身份。
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:56559 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 154 字符
[LLM原始响应开始]
{
"reasoning": "作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。",
"investigate": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 154 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。",
"investigate": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 154 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。', 'investigate': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第一轮夜晚阶段，没有任何发言或投票记录可供参考，我只能随机选择一名玩家进行调查。考虑到游戏平衡性，我选择Ring-flash-2.0作为首个查验目标。这个选择完全是随机的，旨在为后续轮次积累信息基础。', 'investigate': 'Ring-flash-2.0'}
[LLM结果] 提取键 'investigate': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_investigate by DeepSeek-V3.2

[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Qwen3-32B', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6', 'Ring-flash-2.0']
Player DeepSeek-V3.2 not in current players: ['Qwen3-32B', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6', 'Ring-flash-2.0']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Qwen3-32B', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6', 'Ring-flash-2.0']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Qwen3-32B', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6', 'Ring-flash-2.0']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Qwen3-32B', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6', 'Ring-flash-2.0']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了DeepSeek-V3.2。
[RealtimeLogger] session_20251031_232732 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
夜晚阶段后检查胜负。
玩家开始辩论和投票。
[RealtimeLogger] session_20251031_232732 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 157 字符
[LLM原始响应开始]
{
"reasoning": "目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 157 字符
[JSON解析] 输入文本预览: {
"reasoning": "目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 157 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前是第0轮白天辩论的开始，夜晚阶段已经淘汰了DeepSeek-V3.2，而我保护了MiniMax-M1-80k。作为医生，我需要适当参与讨论，但不宜过早透露太多信息，以免成为狼人的目标。因此，我选择以中等出价参与讨论，分享一些基本想法，同时保持谨慎。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
INFO:     127.0.0.1:56654 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 132 字符
[LLM原始响应开始]
{
"reasoning": "作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 132 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 132 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后一只狼人，我需要尽量减少自己的发言次数以避免被怀疑。但是，如果我不发言，村民可能会认为我在隐藏什么。我应该选择中等的出价，既不显得太积极也不太消极。这样可以保持一定的参与度，同时不引起过多注意。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM响应] 成功获取响应，长度: 88 字符
[LLM原始响应开始]
{
"reasoning": "作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。",
"bid": "0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 88 字符
[JSON解析] 输入文本: {
"reasoning": "作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。",
"bid": "0"
}
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。",
"bid": "0"
}'
[JSON字符串解析] 文本长度: 88 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。', 'bid': '0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。', 'bid': '0'}
[JSON解析] 直接解析结果: {'reasoning': '作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。', 'bid': '0'}
[JSON解析] 最终结果: {'reasoning': '作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。', 'bid': '0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为第一轮讨论，我需要先观察其他玩家的发言模式和行为，收集信息后再做出判断。目前还没有足够的信息让我迫切需要发言。', 'bid': '0'}
[LLM结果] 提取键 'bid': 0
[LLM成功] 返回有效结果: 0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
INFO:     127.0.0.1:56706 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56741 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56833 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56900 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:56955 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57098 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57171 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 2533 字符
[LLM原始响应开始]
{
  "reasoning": "现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。",
  "say": "我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 2533 字符
[JSON解析] 输入文本预览: {
  "reasoning": "现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。",
  "say": "我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。"
}'
[JSON字符串解析] 文本长度: 2533 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
[JSON解析] 直接解析结果: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
[JSON解析] 最终结果: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
[LLM成功] 返回有效结果: {'reasoning': '现在只剩下我一个狼人了，我需要尽量让村民们猜不到我是狼人。我应该낙ас\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad¬as我自己，尽量表现得和村民一样，同时引导村民们往错误的方向怀疑。我可能会找一个不是狼人的玩家，然后公开发言说他们行为可疑，或者制作一些不存在的信息来让村民们产生分歧。这样可以防止村民们发现我是最后一只狼人，增加他们之间的疑虑。同时，我需要避免被认识到我 lobbing 太少或太多，保持中立态度。', 'say': '我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。'}
Kimi-Dev-72B (Werewolf): 我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。
INFO:     127.0.0.1:57227 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251031_232732 [action] Kimi-Dev-72B 发言: 我觉得现在王国的情况很复杂。之前已经被处决了一些人，但是狼人的威胁依然存在。我注意到了Ring-flash-2.0，他们在之前的讨论中表现得有些异常，比如总是快速改变观点或者避免直视别人。我觉得这样的行为可能是为了隐藏他们的身份。我也建议过几个村民一起查证一下，毕竟预言家已经查过一些人了。但是，如果预言家自己就是狼人怎么办？这让我很不安。我觉得我们可能需要重新审视已经发生的事情，看看有没有被狼人误导的情况。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
[RealtimeLogger] session_20251031_232732 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_232732 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:57314 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 304 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 304 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 304 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要仔细分析Kimi-Dev-72B的发言。他提到了Ring-flash-2.0表现异常，这是合理的观察，但他同时也质疑了预言家的身份，这让我感到不安。在游戏初期，预言家是我们识别狼人的重要工具，过早质疑预言家可能会分散我们的注意力。Kimi-Dev-72B的发言既指出了可疑对象，又制造了对预言家的怀疑，这种双重策略可能是狼人试图混淆视听的手段。此外，他提到'之前已经被处决了一些人'，但这是游戏第一轮，这种说法显得不合逻辑。我认为Kimi-Dev-72B可能是狼人，试图通过复杂的言论来转移注意力。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_232732 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:57375 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_232732 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:57460 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 734 字符
[LLM原始响应开始]
{
  "reasoning": "作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 734 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 734 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后一只狼人，我的目标是尽可能地减少村民的数量，同时避免自己被投票淘汰。在当前的剩余玩家中，我需要评估谁对狼人的威胁最大。首先，医生和预言家是村民阵营中最重要的角色。如果医生还活着，他可能会保护目标，使狼人的夜晚攻击失效。而预言家则可以查出狼人的身份，引导村民投票。但是，由于我无法直接知道谁是医生或预言家，我需要根据之前的讨论和行为来推断。在第0轮的辩论中，我提到了Ring-flash-2.0表现异常，这可能是我作为狼人为了引导村民怀疑他们而故意散布的烟雾弹。但是，如果村民们真的开始怀疑Ring-flash-2.0，那么投票淘汰他们可能是安全的。然而，如果Ring-flash-2.0实际上是医生或预言家，那么投票他们出局会削弱村民的防御。另一方面，如果Qwen3-32B、MiniMax-M1-80k或GLM-4.6中有人表现得像医生或预言家，那么他们可能是更危险的。例如，如果某个玩家在讨论中多次提出查证身份，或者对狼人的行为有深入的分析，他们可能是预言家。而医生可能会在夜晚阶段保护自己或关键玩家。由于我无法确定，我需要选择一个在白天讨论中显得最有影响力，或者最有可能是关键村民角色的玩家。假设Qwen3-32B在之前的讨论中表现得非常积极，提出了多个策略，这可能使他们成为村民的领导者，因此投票他们出局可以打乱村民的计划。或者，如果MiniMax-M1-80k在夜晚阶段有被保护的记录，那么他们可能是医生。但是，由于信息有限，我需要根据当前的直觉做出选择。最终，我决定投票淘汰Qwen3-32B，因为他们可能是预言家或有影响力的村民，这样可以增加狼人获胜的机会。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251031_232732 [vote] Kimi-Dev-72B 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Qwen3-32B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:57537 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 245 字符
[LLM原始响应开始]
{
  "reasoning": "根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 245 字符
[JSON解析] 输入文本预览: {
  "reasoning": "根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 245 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '根据Kimi-Dev-72B的发言，他提到Ring-flash-2.0在讨论中表现出异常行为，比如快速改变观点和避免直视别人。这种行为模式可能是在试图隐藏自己的真实身份。此外，主持人在夜晚阶段的公告显示狼人淘汰了DeepSeek-V3.2，但没有提到我保护的目标MiniMax-M1-80k被淘汰，这说明我昨晚的保护是成功的。因此，Ring-flash-2.0更有可能是狼人，我会投票淘汰他。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_232732 [vote] Qwen3-32B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Qwen3-32B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 141 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。",
"bid": "1"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 141 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。",
"bid": "1"
}'
[JSON字符串解析] 文本长度: 141 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。', 'bid': '1'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。', 'bid': '1'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。', 'bid': '1'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。', 'bid': '1'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要保持低调以避免成为狼人攻击的目标。但Kimi-Dev-72B提到了一些值得讨论的观察，比如怀疑Ring-flash-2.0和对预言家身份的担忧。我需要出价参与讨论，以提供对局势的客观分析并保护村民的团结。', 'bid': '1'}
[LLM结果] 提取键 'bid': 1
[LLM成功] 返回有效结果: 1
[LLM响应] 成功获取响应，长度: 157 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。",
"bid": "2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 157 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。",
"bid": "2"
}'
[JSON字符串解析] 文本长度: 157 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。', 'bid': '2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。', 'bid': '2'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。', 'bid': '2'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。', 'bid': '2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析Kimi-Dev-72B的发言。他提到Ring-flash-2.0行为异常，这是重要信息，但我还需要观察其他玩家反应。现在出价过高可能过早暴露自己，出价过低又可能错失关键信息。我选择中等出价，既能表达参与意愿，又能保留观察空间。', 'bid': '2'}
[LLM结果] 提取键 'bid': 2
[LLM成功] 返回有效结果: 2
GLM-4.6 bid: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
INFO:     127.0.0.1:57645 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57682 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57725 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 473 字符
[LLM原始响应开始]
{
  "reasoning": "作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。",
  "say": "大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 473 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。",
  "say": "大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。"
}'
[JSON字符串解析] 文本长度: 473 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
[JSON解析] 直接解析结果: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
[JSON解析] 最终结果: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
[LLM成功] 返回有效结果: {'reasoning': '作为一名村民，我的目标是谨慎收集信息，分析每个玩家的言行，避免被狼人误导。Kimi-Dev-72B对Ring-flash-2.0的指控值得注意，但这还不够作为投票依据。我需要观察更多玩家的反应，尤其是Ring-flash-2.0如何回应。目前游戏刚开始，信息有限，我会保持中立但积极参与，寻找更多线索。', 'say': '大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。'}
GLM-4.6 (Villager): 大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。
[RealtimeLogger] session_20251031_232732 [action] GLM-4.6 发言: 大家好，我是GLM-4.6，一名普通村民。首先，我们对失去DeepSeek-V3.2感到痛心。Kimi-Dev-72B提到了Ring-flash-2.0的行为异常，这确实是值得关注的信息。但我们不能仅凭一次发言就下结论。我想听听Ring-flash-2.0如何回应？同时，我也注意到我们还需要更全面的分析，而不是只关注一个人。作为村民，我提议我们应该系统地回顾每个人的发言，寻找矛盾点和不合逻辑的地方。只有这样，我们才能逐步缩小狼人嫌疑范围。我会密切关注接下来的讨论，特别是那些试图引导我们视线或保持过度沉默的玩家。让我们保持理性，不要过早下结论，但也不能错失任何可能的线索。
[WebSocket] 辩论发言通知已发送: GLM-4.6
[RealtimeLogger] session_20251031_232732 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251031_232732 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:57780 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 249 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 249 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，K...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 249 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析每个人的发言。Kimi-Dev-72B在第一轮就立即指控Ring-flash-2.0行为异常，这种急于指控的行为可能是在转移注意力。同时，Kimi-Dev-72B还质疑预言家的身份，这种制造混乱和怀疑的发言模式很符合狼人试图混淆村民视听的策略。相比之下，其他玩家还没有充分发言，我需要更多信息来判断。基于Kimi-Dev-72B的发言模式和试图制造混乱的行为，我认为他是最可疑的。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251031_232732 [vote] GLM-4.6 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: GLM-4.6 -> Kimi-Dev-72B
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251031_232732 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:57817 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 240 字符
[LLM原始响应开始]
{
  "reasoning": "环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 240 字符
[JSON解析] 输入文本预览: {
  "reasoning": "环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 240 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '环顾四周，我这只孤狼得精打细算。现在局势紧张，村民开始怀疑环flash。我得顺势而为，不能太显眼。如果我投票给环flash，其他村民可能会跟着，就能除掉一个潜在的敌人。或者，如果他们已经对环flash有疑虑，我加入其中，能加速他的出局。但我也得提防医生或预言家可能是这些玩家。不过，目前的信息有限，我得赌一把。环flash在辩论中被点名，我投票他，希望村民也跟风，这样就能安全度过。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_232732 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 238 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 238 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。Mini...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 238 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，Kimi-Dev-72B提到Ring-flash-2.0行为异常，而GLM-4.6作为村民则表现得较为理性，并提议系统性分析每个人的发言。MiniMax-M1-80k是我在夜晚阶段保护的玩家，暂时没有可疑之处。Ring-flash-2.0未主动解释自己的行为，这种沉默可能隐藏了某些问题。因此，我倾向于投票淘汰Ring-flash-2.0，以进一步确认其身份。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251031_232732 [vote] Qwen3-32B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Qwen3-32B -> Ring-flash-2.0
⚠️ 未知的延迟类型: vote
MiniMax-M1-80k 投票淘汰 GLM-4.6
GLM-4.6 投票淘汰 Kimi-Dev-72B
Ring-flash-2.0 投票淘汰 MiniMax-M1-80k
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
Qwen3-32B 投票淘汰 Ring-flash-2.0

没有达到多数票，因此没有人被淘汰。
白天阶段后检查胜负。
玩家开始总结辩论。
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:57929 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57981 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 670 字符
[LLM原始响应开始]
{"reasoning": "本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉", "summary": "从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 670 字符
[JSON解析] 输入文本预览: {"reasoning": "本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉", "summary": "从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。"}'
[JSON字符串解析] 文本长度: 670 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
[JSON解析] 直接解析结果: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
[JSON解析] 最终结果: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
[LLM成功] 返回有效结果: {'reasoning': '本次 debate 中，玩家 GLM-4.6 表示自己是村民，并且没有针对我个人或 allies 的指控。但是，他建议更系统地回顾每个玩家的发言，寻找矛盾和不合逻辑之处。被我之前指过的 Ring-flash-2.0 异常行为的指控，GLM-4.6 认为不能仅凭一次发言就下结论，需要听取_ring 的回应，并建议保持理性。这里的重点是，GLM-4.6 没有直接挑战我，而是建议更全面的分析。我应该注意他可能会在后续轮次中成为支持票的角色。同时， tacos-a （Qwen3-32B？） 没有在这里出现，可能他没有发言，因此在之后的模型中，我需要关注哪些玩家发言了哪些没有。另外，我 narrowed down 潜在的 好人 玩家可能有 GLM-4.6，Ring-flash-2.0，Qwen3-32B 等。 hunter 更加确定的话，可以考虑在晚上攻击某个，然后在白天多余的😉', 'summary': '从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。'}
INFO:     127.0.0.1:58038 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 631 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。",
"summary": "在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 631 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。",
"summary": "在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。"
}'
[JSON字符串解析] 文本长度: 631 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要仔细分析本轮辩论中的各种信息。Kimi-Dev-72B对Ring-flash-2.0提出了指控，声称Ring-flash-2.0在之前的讨论中行为异常，如快速改变观点。但我注意到Kimi-Dev-72B的发言有些模糊，没有提供具体例子来支持他的指控。同时，他对预言家的质疑也有些奇怪，这可能是故意制造混乱的狼人策略。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k都没有发言，他们的沉默也值得关注，特别是Ring-flash-2.0被指控后没有辩护。我在本轮投票给了Kimi-Dev-72B，因为他的发言中带有潜在的误导性，但没有人被淘汰，说明大家对Kimi的怀疑并不一致。这提醒我需要更多具体证据，不能仅凭一次发言就下结论。', 'summary': '在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。'}
GLM-4.6 summary: 在第0轮辩论中，我被Kimi-Dev-72B对Ring-flash-2.0的指控引起注意。Kimi声称Ring-flash行为异常，但缺乏具体证据支持。我对Kimi-Dev-72B的发言持保留态度，尤其是他对预言家的质疑似乎在制造混乱。Ring-flash-2.0、Qwen3-32B和MiniMax-M1-80k的沉默也值得关注，特别是被指控后Ring-flash没有辩解。我在本轮投票给了Kimi-Dev-72B，但无人被淘汰，说明大家意见分歧。我需要继续观察每个人的行为模式，特别是那些试图引导舆论或异常沉默的玩家。
[WebSocket] 玩家总结通知已发送: GLM-4.6
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
Kimi-Dev-72B summary: 从我的角度看，本轮辩论中 GLM-4.6 提出了系统回顾玩家发言的建议，并没有直接针对我。Ring-flash-2.0 在被指控后没有发言回应，可能会令人怀疑。其他玩家如 Qwen3-32B 未发言，这可能使他们成为 Hari 型玩家。 strategic 的角度看，我可能需要在接下来的夜晚行动上攻击 GLM-4.6 以 Sidney 威胁，在白天则尝试引导讨论，转移对我的注意力。同时，如果有人指出我是狼人，我需要准备好辩护，比如表现无辜，调整发言策略以获得其他村民的支持或避免成为主要目标。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
INFO:     127.0.0.1:58096 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58129 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58214 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58321 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58377 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58415 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58450 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58488 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58599 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58639 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58725 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
WebSocket disconnected for session session_20251031_232732. Remaining connections: 1
WebSocket disconnected for session session_20251031_232732
INFO:     127.0.0.1:58770 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58807 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58859 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58959 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
WebSocket disconnected for session session_20251031_232732. Remaining connections: 0
WebSocket disconnected for session session_20251031_232732
INFO:     127.0.0.1:59124 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59187 - "GET /health HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
医生 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
狼人 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
STARTING ROUND: 0
[RealtimeLogger] Initialized session session_20251031_233413, log file: logs/session_20251031_233413/realtime_logs.jsonl
[RealtimeLogger] session_20251031_233413 [phase_change] 进入night阶段
INFO:     127.0.0.1:59217 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 59219) - "WebSocket /ws/session_20251031_233413" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 59221) - "WebSocket /ws/session_20251031_233413" [accepted]
INFO:     connection open
[WebSocket] 阶段变更通知已发送: night (第0轮)
狼人正在选择淘汰目标。
WebSocket connected for session session_20251031_233413. Total connections: 1
WebSocket connected for session session_20251031_233413. Total connections: 2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:59279 - "GET /health HTTP/1.1" 200 OK
