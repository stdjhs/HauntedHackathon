INFO:     Will watch for changes in these directories: ['/Users/admin/Project/HauntedHackathon/werewolf_arena/backend']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [46380] using WatchFiles
INFO:     Started server process [46387]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:58443 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58783 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58813 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
医生 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
狼人 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
村民 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:58813 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 58827) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 58829) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
WebSocket connected for session session_20251101_004444. Total connections: 1
WebSocket connected for session session_20251101_004444. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] Initialized session session_20251101_004444, log file: logs/session_20251101_004444/realtime_logs.jsonl
[RealtimeLogger] session_20251101_004444 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 158 字符
[LLM原始响应开始]
{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。",
"remove": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 158 字符
[JSON解析] 输入文本预览: {
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。",
"remove": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 158 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'remove': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [狼人击杀] 狼人 Qwen3-32B 行动完成: 2.59秒
Qwen3-32B eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Qwen3-32B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 2.59秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:58894 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [医生保护] 医生 MiniMax-M1-80k 行动完成: 1.50秒
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected Ring-flash-2.0
MiniMax-M1-80k protected Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 1.51秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.23秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.23秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了DeepSeek-V3.2。
[RealtimeLogger] session_20251101_004444 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.05秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:59043 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
⏱️ [阶段通知] 阶段通知发送: 0.01秒
本轮发言顺序: Qwen3-32B, GLM-4.6, Ring-flash-2.0, Kimi-Dev-72B, MiniMax-M1-80k
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: Qwen3-32B, GLM-4.6, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 297 字符
[LLM原始响应开始]
{
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。",
  "say": "大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 297 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。",
  "say": "大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！"
}'
[JSON字符串解析] 文本长度: 297 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[LLM成功] 返回有效结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
  ✓ Qwen3-32B 发言生成完成 (146字)
INFO:     127.0.0.1:59106 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59155 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 440 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。",
  "say": "大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 440 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。",
  "say": "大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。"
}'
[JSON字符串解析] 文本长度: 440 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
  ✓ GLM-4.6 发言生成完成 (231字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 20.78秒
[批次 2/2] 并发生成: Kimi-Dev-72B, MiniMax-M1-80k
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
INFO:     127.0.0.1:59198 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 368 字符
[LLM原始响应开始]
{
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。",
  "say": "狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 368 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。",
  "say": "狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。"
}'
[JSON字符串解析] 文本长度: 368 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 直接解析结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 最终结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[LLM成功] 返回有效结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
  ✓ Kimi-Dev-72B 发言生成完成 (119字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
⏱️ [批次2] 批次2完成: 7.92秒
⏱️ [发言生成] 所有发言生成完成: 28.70秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/5] Qwen3-32B (Werewolf): 大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！
[RealtimeLogger] session_20251101_004444 [action] Qwen3-32B 发言: 大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 146字 → 暂停 7.3秒
[2/5] GLM-4.6 (Villager): 大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。
[RealtimeLogger] session_20251101_004444 [action] GLM-4.6 发言: 大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。
[WebSocket] 辩论发言通知已发送: GLM-4.6
⏱️ [发送-GLM-4.6] GLM-4.6发送完成: 0.01秒
⏱️ [展示暂停] 231字 → 暂停 11.6秒
INFO:     127.0.0.1:59243 - "GET /health HTTP/1.1" 200 OK
[3/5] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[4/5] Kimi-Dev-72B (Villager): 狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。
[RealtimeLogger] session_20251101_004444 [action] Kimi-Dev-72B 发言: 狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 119字 → 暂停 6.0秒
INFO:     127.0.0.1:59277 - "GET /health HTTP/1.1" 200 OK
[5/5] MiniMax-M1-80k (Doctor): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.03秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 26.89秒
⏱️ [发言暂停汇总] 总暂停时间: 26.8秒
⏱️ [发言阶段] 发言阶段总耗时: 60.60秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.01秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:59374 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59490 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 285 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 285 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而Mini...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 285 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251101_004444 [vote] GLM-4.6 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: GLM-4.6 -> MiniMax-M1-80k
⏱️ [投票-GLM-4.6] GLM-4.6投票完成: 14.05秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:59524 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59641 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1187 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1187 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 1187 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251101_004444 [vote] Kimi-Dev-72B 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Qwen3-32B
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 23.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 173 字符
[LLM原始响应开始]
{
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 173 字符
[JSON解析] 输入文本预览: {
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 173 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251101_004444 [vote] Qwen3-32B 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Qwen3-32B -> GLM-4.6
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.34秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.23秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:59711 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.17秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 45.07秒
GLM-4.6 投票淘汰 MiniMax-M1-80k
Kimi-Dev-72B 投票淘汰 Qwen3-32B
Qwen3-32B 投票淘汰 GLM-4.6
MiniMax-M1-80k 投票淘汰 GLM-4.6
Ring-flash-2.0 投票淘汰 GLM-4.6
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 110.69秒

⏱️ 【投票后放逐】
⏱️ [放逐] GLM-4.6 被投票放逐
[WebSocket] 玩家放逐通知已发送: GLM-4.6 (第0轮)
[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了GLM-4.6。
⏱️ [放逐处理] 放逐处理完成: 0.01秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 530 字符
[LLM原始响应开始]
{
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。",
"summary": "本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 530 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。",
"summary": "本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。"
}'
[JSON字符串解析] 文本长度: 530 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 直接解析结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 最终结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[LLM成功] 返回有效结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
INFO:     127.0.0.1:59853 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59903 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1183 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。",
"summary": "在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1183 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。",
"summary": "在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。"
}'
[JSON字符串解析] 文本长度: 1183 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
Kimi-Dev-72B summary: 在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
Qwen3-32B summary: 本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
⏱️ [玩家总结] 玩家总结完成: 22.17秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 22.17秒

⏱️ 第0轮结束
⏱️ [第0轮] 第0轮总耗时: 148.31秒

================================================================================
📊 【第 0 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   2.59秒 (  1.7%)
  医生正在选择保护目标。                   :   1.51秒 (  1.0%)
  预言家正在查验身份。                    :   1.23秒 (  0.8%)
  夜晚阶段解决                        :   5.05秒 (  3.4%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    : 110.69秒 ( 74.6%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  22.17秒 ( 14.9%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 148.31秒 (100.0%)
================================================================================

STARTING ROUND: 1

================================================================================
⏱️ 【第 1 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第1轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:59941 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 272 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。",
"remove": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 272 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。",
"remove": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 272 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'remove': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
⏱️ [狼人击杀] 狼人 Qwen3-32B 行动完成: 3.92秒
Qwen3-32B eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by Qwen3-32B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 3.92秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [医生保护] 医生 MiniMax-M1-80k 行动完成: 1.27秒
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected MiniMax-M1-80k
MiniMax-M1-80k protected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 1.28秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.17秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.18秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: Kimi-Dev-72B, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Kimi-Dev-72B。
[RealtimeLogger] session_20251101_004444 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第1轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:59996 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第1轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: MiniMax-M1-80k, Qwen3-32B, Ring-flash-2.0
[并发生成] 使用3线程并发生成发言内容...
[批次 1/1] 并发生成: MiniMax-M1-80k, Qwen3-32B, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 530 字符
[LLM原始响应开始]
{
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。",
  "say": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 530 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。",
  "say": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。"
}'
[JSON字符串解析] 文本长度: 530 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 直接解析结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 最终结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[LLM成功] 返回有效结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
  ✓ Qwen3-32B 发言生成完成 (206字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 5.16秒
⏱️ [发言生成] 所有发言生成完成: 5.16秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/3] MiniMax-M1-80k (Doctor): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
INFO:     127.0.0.1:60162 - "GET /health HTTP/1.1" 200 OK
[2/3] Qwen3-32B (Werewolf): 昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。
[RealtimeLogger] session_20251101_004444 [action] Qwen3-32B 发言: 昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 206字 → 暂停 10.3秒
INFO:     127.0.0.1:60273 - "GET /health HTTP/1.1" 200 OK
[3/3] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 12.34秒
⏱️ [发言暂停汇总] 总暂停时间: 12.3秒
⏱️ [发言阶段] 发言阶段总耗时: 22.50秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 212 字符
[LLM原始响应开始]
{
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 212 字符
[JSON解析] 输入文本预览: {
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 212 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004444 [vote] Qwen3-32B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Qwen3-32B -> Ring-flash-2.0
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.97秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:60337 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.30秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 6.56秒
Qwen3-32B 投票淘汰 Ring-flash-2.0
MiniMax-M1-80k 投票淘汰 Qwen3-32B
Ring-flash-2.0 投票淘汰 Qwen3-32B
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 34.08秒

⏱️ 【投票后放逐】
⏱️ [放逐] Qwen3-32B 被投票放逐
[WebSocket] 玩家放逐通知已发送: Qwen3-32B (第1轮)
[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k']
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Qwen3-32B。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
获胜者是：好人！
[WebSocket] 游戏结束通知已发送: 好人 获胜
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.01秒

⏱️ 第1轮结束（游戏结束）
⏱️ [第1轮] 第1轮总耗时: 50.55秒

================================================================================
📊 【第 1 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   3.92秒 (  7.8%)
  医生正在选择保护目标。                   :   1.28秒 (  2.5%)
  预言家正在查验身份。                    :   1.18秒 (  2.3%)
  夜晚阶段解决                        :   5.01秒 (  9.9%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  34.08秒 ( 67.4%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.01秒 (  0.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  50.55秒 (100.0%)
================================================================================

游戏结束！
WebSocket disconnected for session session_20251101_004444. Remaining connections: 1
WebSocket disconnected for session session_20251101_004444
INFO:     127.0.0.1:60417 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
INFO:     ('127.0.0.1', 60553) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 60555) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
WebSocket disconnected for session session_20251101_004444. Remaining connections: 0
WebSocket disconnected for session session_20251101_004444
WebSocket connected for session session_20251101_004444. Total connections: 1
WebSocket connected for session session_20251101_004444. Total connections: 2
INFO:     127.0.0.1:60581 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60624 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60754 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60834 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60867 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
WebSocket disconnected for session session_20251101_004444. Remaining connections: 1
WebSocket disconnected for session session_20251101_004444
INFO:     127.0.0.1:60956 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61029 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61123 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61210 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61355 - "GET /health HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
医生 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
狼人 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
INFO:     127.0.0.1:61360 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 61362) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 61364) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
WebSocket connected for session session_20251101_004951. Total connections: 1
WebSocket connected for session session_20251101_004951. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] Initialized session session_20251101_004951, log file: logs/session_20251101_004951/realtime_logs.jsonl
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.34秒
Ring-flash-2.0 eliminated GLM-4.6
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.34秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:61452 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 192 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。",
"protect": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 192 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。",
"protect": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 192 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[LLM结果] 提取键 'protect': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
⏱️ [医生保护] 医生 GLM-4.6 行动完成: 9.57秒
GLM-4.6 protected Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_protect by GLM-4.6
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 9.57秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:61489 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 112 字符
[LLM原始响应开始]
{
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 112 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 112 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[LLM结果] 提取键 'investigate': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 3.61秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 3.61秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了GLM-4.6。
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:61573 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: MiniMax-M1-80k, Ring-flash-2.0, Kimi-Dev-72B, Qwen3-32B, DeepSeek-V3.2
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: MiniMax-M1-80k, Ring-flash-2.0, Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
INFO:     127.0.0.1:61689 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1050 字符
[LLM原始响应开始]
{
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。",
  "say": "大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1050 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。",
  "say": "大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。"
}'
[JSON字符串解析] 文本长度: 1050 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 最终结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
  ✓ Kimi-Dev-72B 发言生成完成 (189字)
⏱️ [批次1] 批次1完成: 19.61秒
[批次 2/2] 并发生成: Qwen3-32B, DeepSeek-V3.2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:61727 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 341 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。",
  "say": "大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 341 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。",
  "say": "大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！"
}'
[JSON字符串解析] 文本长度: 341 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
  ✓ Qwen3-32B 发言生成完成 (125字)
INFO:     127.0.0.1:61781 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 293 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。",
  "say": "各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 293 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。",
  "say": "各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。"
}'
[JSON字符串解析] 文本长度: 293 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
  ✓ DeepSeek-V3.2 发言生成完成 (116字)
⏱️ [批次2] 批次2完成: 17.38秒
⏱️ [发言生成] 所有发言生成完成: 36.99秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/5] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.00秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[2/5] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[3/5] Kimi-Dev-72B (Seer): 大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 189字 → 暂停 9.4秒
INFO:     127.0.0.1:61836 - "GET /health HTTP/1.1" 200 OK
[4/5] Qwen3-32B (Villager): 大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！
[RealtimeLogger] session_20251101_004951 [action] Qwen3-32B 发言: 大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 125字 → 暂停 6.2秒
INFO:     127.0.0.1:61910 - "GET /health HTTP/1.1" 200 OK
[5/5] DeepSeek-V3.2 (Villager): 各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。
[RealtimeLogger] session_20251101_004951 [action] DeepSeek-V3.2 发言: 各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
⏱️ [发送-DeepSeek-V3.2] DeepSeek-V3.2发送完成: 0.01秒
⏱️ [展示暂停] 116字 → 暂停 5.8秒
INFO:     127.0.0.1:61944 - "GET /health HTTP/1.1" 200 OK
⏱️ [发言发送] 所有发言发送完成: 23.55秒
⏱️ [发言暂停汇总] 总暂停时间: 23.5秒
⏱️ [发言阶段] 发言阶段总耗时: 65.54秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:61998 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62112 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62165 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62241 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 343 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 343 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 343 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] DeepSeek-V3.2 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Ring-flash-2.0
⏱️ [投票-DeepSeek-V3.2] DeepSeek-V3.2投票完成: 45.06秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:62273 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 258 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 258 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 258 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_004951 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.68秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> DeepSeek-V3.2
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> DeepSeek-V3.2
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.15秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:62352 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 265 字符
[LLM原始响应开始]
{"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。","vote":"Ring-flash-2.0"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 265 字符
[JSON解析] 输入文本预览: {"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。","vote":"Ring-flash-2.0"}'
[JSON字符串解析] 文本长度: 265 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 5.66秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 58.83秒
DeepSeek-V3.2 投票淘汰 Ring-flash-2.0
Qwen3-32B 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 DeepSeek-V3.2
Ring-flash-2.0 投票淘汰 DeepSeek-V3.2
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 129.38秒

⏱️ 【投票后放逐】
⏱️ [放逐] 无人被放逐（未达到多数票）
没有达到多数票，因此没有人被淘汰。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 494 字符
[LLM原始响应开始]
{
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。",
"summary": "我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 494 字符
[JSON解析] 输入文本预览: {
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。",
"summary": "我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。"
}'
[JSON字符串解析] 文本长度: 494 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 直接解析结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 最终结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[LLM成功] 返回有效结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
INFO:     127.0.0.1:62443 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 788 字符
[LLM原始响应开始]
{
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案 的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim ，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。",
"summary": "在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 788 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案 的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim ，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。",
"summary": "在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。"
}'
[JSON字符串解析] 文本长度: 788 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 直接解析结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 最终结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[LLM成功] 返回有效结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
INFO:     127.0.0.1:62591 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 424 字符
[LLM原始响应开始]
{
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。",
"summary": "我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 424 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。",
"summary": "我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。"
}'
[JSON字符串解析] 文本长度: 424 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 直接解析结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 最终结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[LLM成功] 返回有效结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
DeepSeek-V3.2 summary: 我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。
[WebSocket] 玩家总结通知已发送: DeepSeek-V3.2
Qwen3-32B summary: 我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
Kimi-Dev-72B summary: 在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
⏱️ [玩家总结] 玩家总结完成: 20.90秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 20.90秒

⏱️ 第0轮结束
⏱️ [第0轮] 第0轮总耗时: 174.88秒

================================================================================
📊 【第 0 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.34秒 (  0.8%)
  医生正在选择保护目标。                   :   9.57秒 (  5.5%)
  预言家正在查验身份。                    :   3.61秒 (  2.1%)
  夜晚阶段解决                        :   5.01秒 (  2.9%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    : 129.38秒 ( 74.0%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  20.90秒 ( 12.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 174.88秒 (100.0%)
================================================================================

STARTING ROUND: 1

================================================================================
⏱️ 【第 1 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
⏱️ [夜晚切换] 夜晚切换完成: 5.01秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第1轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:62647 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.25秒
Ring-flash-2.0 eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.26秒

⏱️ 【医生正在选择保护目标。】
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 0.00秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 435 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。",
"investigate": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 435 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。",
"investigate": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 435 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'investigate': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 9.31秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 9.31秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了DeepSeek-V3.2。
INFO:     127.0.0.1:62681 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第1轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.02秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第1轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: Qwen3-32B, Kimi-Dev-72B, MiniMax-M1-80k, Ring-flash-2.0
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: Qwen3-32B, Kimi-Dev-72B, MiniMax-M1-80k
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
INFO:     127.0.0.1:62794 - "GET /health HTTP/1.1" 200 OK
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 317 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。",
  "say": "大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 317 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。",
  "say": "大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。"
}'
[JSON字符串解析] 文本长度: 317 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
  ✓ Qwen3-32B 发言生成完成 (123字)
[LLM响应] 成功获取响应，长度: 415 字符
[LLM原始响应开始]
{
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。"
  ,
  "say": "我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 415 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了Dee...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。"
  ,
  "say": "我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。"
}'
[JSON字符串解析] 文本长度: 415 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 直接解析结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 最终结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[LLM成功] 返回有效结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
  ✓ Kimi-Dev-72B 发言生成完成 (122字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 8.17秒
[批次 2/2] 并发生成: Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次2] 批次2完成: 0.16秒
⏱️ [发言生成] 所有发言生成完成: 8.33秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/4] Qwen3-32B (Villager): 大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。
[RealtimeLogger] session_20251101_004951 [action] Qwen3-32B 发言: 大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 123字 → 暂停 6.2秒
INFO:     127.0.0.1:62865 - "GET /health HTTP/1.1" 200 OK
[2/4] Kimi-Dev-72B (Seer): 我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity
作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity
作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 122字 → 暂停 6.1秒
INFO:     127.0.0.1:62927 - "GET /health HTTP/1.1" 200 OK
[3/4] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[4/4] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 14.30秒
⏱️ [发言暂停汇总] 总暂停时间: 14.2秒
⏱️ [发言阶段] 发言阶段总耗时: 27.63秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:63044 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 276 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 276 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 276 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_004951 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 4.04秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.29秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.16秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:63119 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 334 字符
[LLM原始响应开始]
{
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 334 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 334 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 7.19秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 15.69秒
Qwen3-32B 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 Qwen3-32B
Ring-flash-2.0 投票淘汰 Qwen3-32B
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 48.34秒

⏱️ 【投票后放逐】
⏱️ [放逐] 无人被放逐（未达到多数票）
没有达到多数票，因此没有人被淘汰。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:63196 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 533 字符
[LLM原始响应开始]
{
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。",
"summary": "我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 533 字符
[JSON解析] 输入文本预览: {
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。",
"summary": "我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。"
}'
[JSON字符串解析] 文本长度: 533 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 直接解析结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 最终结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[LLM成功] 返回有效结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
Qwen3-32B summary: 我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
[LLM响应] 成功获取响应，长度: 839 字符
[LLM原始响应开始]
{"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。",
"summary": "第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 839 字符
[JSON解析] 输入文本预览: {"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。",
"summary": "第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。"}'
[JSON字符串解析] 文本长度: 839 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 最终结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
Kimi-Dev-72B summary: 第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
⏱️ [玩家总结] 玩家总结完成: 16.97秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 16.97秒

⏱️ 第1轮结束
⏱️ [第1轮] 第1轮总耗时: 85.96秒

================================================================================
📊 【第 1 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.26秒 (  1.5%)
  医生正在选择保护目标。                   :   0.00秒 (  0.0%)
  预言家正在查验身份。                    :   9.31秒 ( 10.8%)
  夜晚阶段解决                        :   5.02秒 (  5.8%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  48.34秒 ( 56.2%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  16.97秒 ( 19.7%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  85.96秒 (100.0%)
================================================================================

STARTING ROUND: 2

================================================================================
⏱️ 【第 2 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
INFO:     127.0.0.1:63229 - "GET /health HTTP/1.1" 200 OK
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第2轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.36秒
Ring-flash-2.0 eliminated Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.37秒

⏱️ 【医生正在选择保护目标。】
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 0.00秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:63301 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 308 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。",
"investigate": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 308 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。",
"investigate": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 308 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'investigate': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 7.76秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 7.76秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Qwen3-32B。
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第2轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:63434 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第2轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: Ring-flash-2.0, MiniMax-M1-80k, Kimi-Dev-72B
[并发生成] 使用3线程并发生成发言内容...
[批次 1/1] 并发生成: Ring-flash-2.0, MiniMax-M1-80k, Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
  ✓ Ring-flash-2.0 发言生成完成 (13字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
INFO:     127.0.0.1:63481 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:63594 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1048 字符
[LLM原始响应开始]
{ 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。",
  "say": "请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1048 字符
[JSON解析] 输入文本预览: { 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{ 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。",
  "say": "请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！"
}'
[JSON字符串解析] 文本长度: 1048 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 直接解析结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 最终结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[LLM成功] 返回有效结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
  ✓ Kimi-Dev-72B 发言生成完成 (370字)
⏱️ [批次1] 批次1完成: 19.52秒
⏱️ [发言生成] 所有发言生成完成: 19.52秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/3] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[2/3] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[3/3] Kimi-Dev-72B (Seer): 请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 370字 → 暂停 18.5秒
INFO:     127.0.0.1:63625 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:63696 - "GET /health HTTP/1.1" 200 OK
⏱️ [发言发送] 所有发言发送完成: 20.54秒
⏱️ [发言暂停汇总] 总暂停时间: 20.5秒
⏱️ [发言阶段] 发言阶段总耗时: 45.06秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第2轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Ring-flash-2.0
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:63789 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 166 字符
[LLM原始响应开始]
{
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 166 字符
[JSON解析] 输入文本预览: {
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 166 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 3.99秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 7.56秒
MiniMax-M1-80k 投票淘汰 Ring-flash-2.0
Ring-flash-2.0 投票淘汰 MiniMax-M1-80k
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 57.64秒

⏱️ 【投票后放逐】
⏱️ [放逐] Ring-flash-2.0 被投票放逐
[WebSocket] 玩家放逐通知已发送: Ring-flash-2.0 (第2轮)
[调试] 成功从current_players中移除玩家: Ring-flash-2.0, 剩余玩家: ['Kimi-Dev-72B', 'MiniMax-M1-80k']
Player Ring-flash-2.0 not in current players: ['Kimi-Dev-72B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Ring-flash-2.0。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
获胜者是：好人！
[WebSocket] 游戏结束通知已发送: 好人 获胜
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.01秒

⏱️ 第2轮结束（游戏结束）
⏱️ [第2轮] 第2轮总耗时: 76.85秒

================================================================================
📊 【第 2 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.37秒 (  1.8%)
  医生正在选择保护目标。                   :   0.00秒 (  0.0%)
  预言家正在查验身份。                    :   7.76秒 ( 10.1%)
  夜晚阶段解决                        :   5.01秒 (  6.5%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  57.64秒 ( 75.0%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.01秒 (  0.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  76.85秒 (100.0%)
================================================================================

游戏结束！
WebSocket disconnected for session session_20251101_004951. Remaining connections: 1
WebSocket disconnected for session session_20251101_004951
INFO:     127.0.0.1:63863 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64065 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64140 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     connection closed
INFO:     connection closed
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [46387]
WebSocket disconnected for session session_20251101_004444. Remaining connections: 0
WebSocket disconnected for session session_20251101_004444
WebSocket disconnected for session session_20251101_004951. Remaining connections: 0
WebSocket disconnected for session session_20251101_004951
🛑 Shutting down Werewolf Arena API...
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Started server process [47664]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47664]
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47668]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64201 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47668]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47679]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47679]
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47685]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64309 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64386 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64449 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64532 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47685]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47750]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64641 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64728 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64780 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64843 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47750]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47795]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64949 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65021 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65086 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65183 - "GET /health HTTP/1.1" 200 OK
INFO:     ('127.0.0.1', 65279) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 65281) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     connection closed
INFO:     connection closed
WebSocket connected for session session_20251101_004951. Total connections: 1
WebSocket connected for session session_20251101_004951. Total connections: 2
WebSocket disconnected for session session_20251101_004951. Remaining connections: 1
WebSocket disconnected for session session_20251101_004951
WebSocket disconnected for session session_20251101_004951. Remaining connections: 0
WebSocket disconnected for session session_20251101_004951
INFO:     127.0.0.1:65299 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65361 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65508 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49226 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
医生 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
狼人 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:49226 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 49232) - "WebSocket /ws/session_20251101_005844" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 49234) - "WebSocket /ws/session_20251101_005844" [accepted]
INFO:     connection open
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停2秒...
WebSocket connected for session session_20251101_005844. Total connections: 1
WebSocket connected for session session_20251101_005844. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 2.00秒
[RealtimeLogger] Initialized session session_20251101_005844, log file: logs/session_20251101_005844/realtime_logs.jsonl
[RealtimeLogger] session_20251101_005844 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:49261 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 179 字符
[LLM原始响应开始]
{
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。",
"remove": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 179 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。",
"remove": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 179 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[LLM结果] 提取键 'remove': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [狼人击杀] 狼人 Kimi-Dev-72B 行动完成: 5.03秒
Kimi-Dev-72B eliminated Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 5.03秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:49319 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 181 字符
[LLM原始响应开始]
{
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。",
"protect": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 181 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。",
"protect": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 181 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[LLM结果] 提取键 'protect': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [医生保护] 医生 DeepSeek-V3.2 行动完成: 12.03秒
DeepSeek-V3.2 protected Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 12.04秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.16秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.17秒

⏱️ 【夜晚阶段解决】
夜晚阶段没有人被淘汰（医生保护成功）。
⏱️ [天亮阶段] 切换暂停2秒...
INFO:     127.0.0.1:49374 - "GET /health HTTP/1.1" 200 OK
