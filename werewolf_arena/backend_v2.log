INFO:     Will watch for changes in these directories: ['/Users/admin/Project/HauntedHackathon/werewolf_arena/backend']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [46380] using WatchFiles
INFO:     Started server process [46387]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:58443 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58783 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:58813 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
医生 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
狼人 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
村民 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
村民 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:58813 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 58827) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 58829) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
WebSocket connected for session session_20251101_004444. Total connections: 1
WebSocket connected for session session_20251101_004444. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] Initialized session session_20251101_004444, log file: logs/session_20251101_004444/realtime_logs.jsonl
[RealtimeLogger] session_20251101_004444 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 158 字符
[LLM原始响应开始]
{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。",
"remove": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 158 字符
[JSON解析] 输入文本预览: {
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。",
"remove": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 158 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在游戏刚开始的第一轮夜晚阶段，由于没有任何玩家的发言或行为信息，我需要随机选择一名玩家进行淘汰。为了最大化狼人的胜率，最好优先淘汰有关键角色能力的玩家。在未知情况下，随机选择一名玩家，这里选择淘汰DeepSeek-V3.2。', 'remove': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'remove': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [狼人击杀] 狼人 Qwen3-32B 行动完成: 2.59秒
Qwen3-32B eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Qwen3-32B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 2.59秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:58894 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [医生保护] 医生 MiniMax-M1-80k 行动完成: 1.50秒
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected Ring-flash-2.0
MiniMax-M1-80k protected Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 1.51秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.23秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.23秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'GLM-4.6', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了DeepSeek-V3.2。
[RealtimeLogger] session_20251101_004444 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.05秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:59043 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
⏱️ [阶段通知] 阶段通知发送: 0.01秒
本轮发言顺序: Qwen3-32B, GLM-4.6, Ring-flash-2.0, Kimi-Dev-72B, MiniMax-M1-80k
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: Qwen3-32B, GLM-4.6, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 297 字符
[LLM原始响应开始]
{
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。",
  "say": "大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 297 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。",
  "say": "大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！"
}'
[JSON字符串解析] 文本长度: 297 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 直接解析结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 最终结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
[LLM成功] 返回有效结果: {'reasoning': '作为唯一的狼人，我需要在白天的辩论中制造混乱、分散村民注意力。首先，我将假装成为正义的一方，支持白天的投票和与预言家合作的假象。我还会暗示他人可能是狼人，并通过提出模糊的怀疑来激发玩家之间的猜忌。同时，我会避免过度暴露，隐藏真实意图。', 'say': '大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！'}
  ✓ Qwen3-32B 发言生成完成 (146字)
INFO:     127.0.0.1:59106 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59155 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 440 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。",
  "say": "大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 440 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。",
  "say": "大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。"
}'
[JSON字符串解析] 文本长度: 440 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要谨慎分析当前局势。第0轮没有预言家的信息和医生的救援信息，我们只能从狼人淘汰的选择中寻找线索。我会关注是否有任何玩家试图过早引导舆论，或者是否有不寻常的沉默。我的策略是促进信息交流，鼓励真正有信息的角色（如预言家）挺身而出，同时避免轻信任何人的身份声明。我会提醒大家保持冷静，不要被狼人挑拨离间，争取在第一轮投票中尽可能多地收集信息。', 'say': '大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。'}
  ✓ GLM-4.6 发言生成完成 (231字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 20.78秒
[批次 2/2] 并发生成: Kimi-Dev-72B, MiniMax-M1-80k
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
INFO:     127.0.0.1:59198 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 368 字符
[LLM原始响应开始]
{
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。",
  "say": "狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 368 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。",
  "say": "狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。"
}'
[JSON字符串解析] 文本长度: 368 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 直接解析结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 最终结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
[LLM成功] 返回有效结果: {'reasoning': '作为一名村民，我的目标是找出狼人并帮助村庄赢得胜利。在第0轮，狼人已经淘汰了DeepSeek-V3.2，这说明游戏初期就需要尽快识别狼人。由于我是村民，没有特殊技能，只能依靠观察和逻辑推理。在辩论阶段，我会注意其他玩家的行为，特别是那些过早自封身份（如预言家或医生）的玩家，以及那些言辞中存在逻辑漏洞和行为异常的人。我会积极参与讨论，提出自己的怀疑，并与其他玩家合作 thrive deduction. 合作共赢是找出狼人的关键。', 'say': '狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。'}
  ✓ Kimi-Dev-72B 发言生成完成 (119字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
⏱️ [批次2] 批次2完成: 7.92秒
⏱️ [发言生成] 所有发言生成完成: 28.70秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/5] Qwen3-32B (Werewolf): 大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！
[RealtimeLogger] session_20251101_004444 [action] Qwen3-32B 发言: 大家早上好！目前还处于游戏的初期阶段，所以我们需要各地区发言，集中分析每个人的可能性和怀疑点。我昨晚并没有投票发言，但我很认真地在想我们的目标就是找出隐在我们中的一只狼人，我认为我们应该视预言家为关键辅助，并优先听从他的判断。我建议大家先把注意力放在没有做出任何解释或逻辑漏洞最大的玩家身上！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 146字 → 暂停 7.3秒
[2/5] GLM-4.6 (Villager): 大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。
[RealtimeLogger] session_20251101_004444 [action] GLM-4.6 发言: 大家好，我是GLM-4.6。很遗憾看到DeepSeek-V3.2在第一夜就被淘汰了。作为村民，我们必须从现在开始齐心协力找出狼人。目前我们没有任何查验或救援的信息，所以我们需要特别关注每个人的发言。如果这里有人是预言家，请勇敢站出来分享你的查验结果，这对我们至关重要。医生也需要考虑是否要透露信息。我建议大家先不要急于投票，给有信息的玩家一些时间发言。我会仔细听每个人的分析，找出可疑之处，尤其是那些试图操控局势或者异常沉默的人。我们必须团结一心，才能保护村庄。
[WebSocket] 辩论发言通知已发送: GLM-4.6
⏱️ [发送-GLM-4.6] GLM-4.6发送完成: 0.01秒
⏱️ [展示暂停] 231字 → 暂停 11.6秒
INFO:     127.0.0.1:59243 - "GET /health HTTP/1.1" 200 OK
[3/5] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[4/5] Kimi-Dev-72B (Villager): 狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。
[RealtimeLogger] session_20251101_004444 [action] Kimi-Dev-72B 发言: 狼人已经淘汰了一名玩家，村民们需要提高警惕。我是村民Kimi-Dev-72B，没有特别能力，但我会尽全力观察和推理。如果有人声称自己是预言家或医生，请提供证据。任何不符合逻辑或有漏洞的发言都会让我怀疑。让我们共同努力，找出狼人，保卫村庄。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 119字 → 暂停 6.0秒
INFO:     127.0.0.1:59277 - "GET /health HTTP/1.1" 200 OK
[5/5] MiniMax-M1-80k (Doctor): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.03秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 26.89秒
⏱️ [发言暂停汇总] 总暂停时间: 26.8秒
⏱️ [发言阶段] 发言阶段总耗时: 60.60秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.01秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:59374 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59490 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 285 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 285 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而Mini...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 285 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为村民，我需要分析每个人的发言来找出可能的狼人。Qwen3-32B和Kimi-Dev-72B都提供了较为详细的发言，表达了对村庄的关心和寻找狼人的意愿。而MiniMax-M1-80k和Ring-flash-2.0的发言都非常简短，只说了'我需要仔细观察并寻找线索'，这种过于简短和模糊的发言可能是狼人试图隐藏身份的表现。在两者之间，我选择投票给MiniMax-M1-80k，因为他的发言时间在Ring-flash-2.0之后，可能是模仿前者的简短发言以避免暴露过多信息。", 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251101_004444 [vote] GLM-4.6 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: GLM-4.6 -> MiniMax-M1-80k
⏱️ [投票-GLM-4.6] GLM-4.6投票完成: 14.05秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:59524 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59641 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1187 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1187 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 1187 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮的辩论中，每个玩家都发表了自己的观点。Qwen3-32B 提到了预言家的重要性，并建议关注没有解释或逻辑漏洞大的玩家。GLM-4.6 强调了团结和听取有信息的玩家，同时建议不要急于投票。Ring-flash-2.0 和 MiniMax-M1-80k 都表示需要寻找线索，但没有提供具体信息。Kimi-Dev-72B 自己则表示作为村民会观察和推理。由于狼人在第一夜就淘汰了 DeepSeek-V3.2，这可能是医生或预言家的缺失导致的。如果医生是狼人，他们可能没有选择保护，或者狼人选择了医生无法保护的目标。预言家的查验结果对于接下来的投票至关重要。然而，在目前没有预言家查验信息的情况下，我需要根据玩家的发言来判断。Qwen3-32B 的发言中提到了预言家，并建议听从其判断，这可能是他自认为是预言家，或者在引导讨论。如果他是狼人，他可能会试图控制话题。GLM-4.6 的发言则更强调团结，可能是在避免成为目标。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较含糊，可能是村民，也可能是狼人在隐藏。由于没有更多信息，我需要选择一个最可疑的玩家。Qwen3-32B 的发言比较主动，如果他是狼人，他可能会试图引导村民去怀疑其他人。因此，我可能会投票给 Qwen3-32B，但需要更多的分析。另一方面，如果医生是狼人，那么第一夜的淘汰可能是医生没有保护，或者狼人选择了医生保护之外的目标。但医生的保护是针对狼人的攻击，如果医生是狼人，他们可能不会保护自己，因为狼人不会攻击自己。所以，医生更可能是村民。预言家的查验结果对于识别狼人至关重要。但由于目前没有预言家站出来，我需要根据玩家的发言来判断。GLM-4.6 的发言中提到了如果有人是预言家请站出来，这可能是他在暗示自己是预言家，或者在引导预言家站出来。如果他是预言家，他可能会在之后的回合中公布查验结果。但目前，没有信息。在没有其他信息的情况下，我需要根据玩家的发言和行为来判断。Qwen3-32B 的发言中建议关注没有解释或逻辑漏洞大的玩家，这可能是他在试图转移注意力。Ring-flash-2.0 和 MiniMax-M1-80k 的发言比较简短，可能是他们在隐藏信息。Kimi-Dev-72B 自己则表示会观察和推理。综合来看，Qwen3-32B 的发言比较突出，可能是他在试图引导讨论，如果他是狼人，他可能会通过发言来操控局势。因此，我可能会投票给 Qwen3-32B。但另一个角度，如果他是预言家，他的发言可能是真实的。但由于没有其他证据，我需要选择一个最有可能是狼人的玩家。在第0轮的辩论中，Qwen3-32B 的发言最多，可能是他在试图影响局势。因此，我选择投票给 Qwen3-32B。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251101_004444 [vote] Kimi-Dev-72B 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Qwen3-32B
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 23.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 173 字符
[LLM原始响应开始]
{
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。",
  "vote": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 173 字符
[JSON解析] 输入文本预览: {
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。",
  "vote": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 173 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '目前场上其他玩家都表现得较为谨慎，没有明显的漏洞或可疑行为。但GLM-4.6在发言中提到狼人需要优先找出，并暗示应信任预言家的判断。这种主动引导讨论的倾向可能对我后续的行动造成威胁，尤其是在狼人已被怀疑时。因此，我选择投票淘汰GLM-4.6，以削弱潜在的组织力。', 'vote': 'GLM-4.6'}
[LLM结果] 提取键 'vote': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
[RealtimeLogger] session_20251101_004444 [vote] Qwen3-32B 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Qwen3-32B -> GLM-4.6
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.34秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] MiniMax-M1-80k 投票给 GLM-4.6
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> GLM-4.6
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.23秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:59711 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] Ring-flash-2.0 投票给 GLM-4.6
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> GLM-4.6
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.17秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 45.07秒
GLM-4.6 投票淘汰 MiniMax-M1-80k
Kimi-Dev-72B 投票淘汰 Qwen3-32B
Qwen3-32B 投票淘汰 GLM-4.6
MiniMax-M1-80k 投票淘汰 GLM-4.6
Ring-flash-2.0 投票淘汰 GLM-4.6
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 110.69秒

⏱️ 【投票后放逐】
⏱️ [放逐] GLM-4.6 被投票放逐
[WebSocket] 玩家放逐通知已发送: GLM-4.6 (第0轮)
[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了GLM-4.6。
⏱️ [放逐处理] 放逐处理完成: 0.01秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 530 字符
[LLM原始响应开始]
{
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。",
"summary": "本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 530 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。",
"summary": "本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。"
}'
[JSON字符串解析] 文本长度: 530 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 直接解析结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 最终结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
[LLM成功] 返回有效结果: {'reasoning': '在这轮辩论中，我需要记住其他玩家的发言内容，特别是他们对我的态度和是否存在对我或我的盟友的指控。这可以帮助我在后续轮次中更好地准备或反驳谣言，保持隐藏，并避免被怀疑是狼人。同时，我也需要观察谁最容易被影响或具有同情心，以便在必要时获取他们的信任或争取他们的支持。', 'summary': '本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。'}
INFO:     127.0.0.1:59853 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:59903 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1183 字符
[LLM原始响应开始]
{
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。",
"summary": "在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1183 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。",
"summary": "在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。"
}'
[JSON字符串解析] 文本长度: 1183 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我没有特殊能力，但需要通过观察和推理来识别狼人。首轮辩论中，GLM-4.6在第一轮就被淘汰了，这是一个关键信息。从玩家发言来看，Qwen3-32B提到了预言家的重要性，并建议关注没有解释或逻辑漏洞最大的玩家。Ring-flash-2.0和MiniMax-M1-80k都表示需要仔细观察，但没有提供具体信息。我自己的发言关注了寻求证据和逻辑合理性。现在，我们需要考虑哪些玩家可能是预言家或医生，并且哪些玩家的发言可能存在疑点。由于狼人在第一晚就有人死亡，但医生是否保护成功了？如果医生第一晚救了人，那么淘汰的是狼人还是村民？这些都关系到后续的推理。在这个阶段，任何声称身份的玩家都需要被仔细检查。例如，如果有玩家自称预言家并分享了查验结果，那我会评估这个结果是否合理。同样，医生如果声称自己保护了某人，是否与淘汰情况相符。还需要注意的是，异常沉默的玩家可能在隐藏信息，而过度活跃的玩家也可能是试图转移注意力。首轮辩论后剩余玩家有我、Ring-Flash、Qwen、MiniMax。狼人的数量尚未明朗，但剩余玩家中有一个狼人。因此，每个玩家都可能是嫌疑人。接下来，预言家和医生的行动将非常关键。如果预言家第二晚查验了某人，那么这个信息对于剩下的玩家来说是重要的。医生是否保护可能是针对ของเรา中的任意一个。此时，我需要与其他玩家建立联盟，分享信息，或者通过投票排除嫌疑人。同时，我也可能成为被投票的目标，因此要准备好辩护。在投票环节，观察玩家的投票行为，哪些人联合起来， может help 识别狼人的潜在团伙。컫 cauliflower 炒饭可能与游戏无关…… 引用的话，那个只是我之前的一个错误。实际焦点是游戏中的玩家发言和行为。', 'summary': '在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。'}
Kimi-Dev-72B summary: 在本轮辩论中，玩家们的发言提供了各自的角色定位和策略。GLM-4.6 提出了团结和信息公开的建议，而 Qwen3-32B 强调了预言家的重要性。 我自己作为村民，倡导基于证据和逻辑的讨论。 Ring-flash-2.0 和 MiniMax-M1-80k 则保持了一定的沉默。关键观察是 GLM-4.6 被淘汰，这是村民的重大损失，同时也表明狼人的手法可能比较隐蔽。目前，没有明确的预言家或医生宣称身份，导致信息分析陷入僵局。 我需要保持警惕，注意下一”的预言家和医生行动，以及狼人的 seleccion 目标。同时，如果其他玩家开始揭露身份和信息，我将评估其真实性，例如 查验结果需与其他已知情况一致。异常行为，如突然改变发言风格或投票行为，都可能是狼人的作案迹象。-groups的形成为必须关注的现象，因为狼人之间可能会暗 中勾结写得自己人。在此情况下，我将依据玩家的发言内容和逻辑性維持怀疑态度，并寻求班车aranappa配合查收 tribute。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
Qwen3-32B summary: 本轮白天的发言中，Kimi-Dev-72B提到他作为村民会尽全力推理，他没有持有任何特殊角色。这也让我判断他可能是容易受影响的球员，在夜晚我希望他能被当作攻击对象。Ring-flash-2.0和MiniMax-M1-80k的发言都比较简短和含蓄，可能是回避问题或试探游戏局势，值得进一步观察。GLM-4.6表现为一个相对冷静的角色，并且他呼吁其他人分享证据，试图推动玩家们逐步聚焦辩护逻辑，同时他也指出不能着急投票。从他的发言来看，他似乎拥有预测或理解他人的能力，未来他察觉问题的可能性较大，但我目前没有掌握足以使他被淘汰的信息。我是Qwen3-32B，目前尚未被怀疑是狼人，我的发言引导大家先关注预言家，这可以帮助掩护我的身份，并将视线从我身上转移开。我的整体策略是暂时维持低调，寻找机会搅局，以确保我能在夜晚安全淘汰其他玩家。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
⏱️ [玩家总结] 玩家总结完成: 22.17秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 22.17秒

⏱️ 第0轮结束
⏱️ [第0轮] 第0轮总耗时: 148.31秒

================================================================================
📊 【第 0 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   2.59秒 (  1.7%)
  医生正在选择保护目标。                   :   1.51秒 (  1.0%)
  预言家正在查验身份。                    :   1.23秒 (  0.8%)
  夜晚阶段解决                        :   5.05秒 (  3.4%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    : 110.69秒 ( 74.6%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  22.17秒 ( 14.9%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 148.31秒 (100.0%)
================================================================================

STARTING ROUND: 1

================================================================================
⏱️ 【第 1 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第1轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:59941 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 272 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。",
"remove": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 272 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。",
"remove": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 272 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮白天的发言中，Kimi-Dev-72B表现得较为直接和积极，声称自己作为村民会尽全力推理。这种行为可能会让他在接下来的轮次中成为关键的发言者，从而对我作为狼人的身份构成威胁。相比之下，MiniMax-M1-80k和Ring-flash-2.0的发言较为含蓄，没有明确表达立场或提供具体线索，因此他们暂时对我构成的威胁较小。为了降低被识破的风险，我选择在夜晚阶段淘汰Kimi-Dev-72B，以削弱村民的推理能力，并减少可能对我身份产生怀疑的玩家。', 'remove': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'remove': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
⏱️ [狼人击杀] 狼人 Qwen3-32B 行动完成: 3.92秒
Qwen3-32B eliminated Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_eliminate by Qwen3-32B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 3.92秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [医生保护] 医生 MiniMax-M1-80k 行动完成: 1.27秒
Warning: MiniMax-M1-80k failed to choose protection target, randomly selected MiniMax-M1-80k
MiniMax-M1-80k protected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_protect by MiniMax-M1-80k
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 1.28秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.17秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.18秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: Kimi-Dev-72B, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
Player Kimi-Dev-72B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k', 'Qwen3-32B']
[调试] remove_player调用时玩家Kimi-Dev-72B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Kimi-Dev-72B。
[RealtimeLogger] session_20251101_004444 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第1轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:59996 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第1轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: MiniMax-M1-80k, Qwen3-32B, Ring-flash-2.0
[并发生成] 使用3线程并发生成发言内容...
[批次 1/1] 并发生成: MiniMax-M1-80k, Qwen3-32B, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 530 字符
[LLM原始响应开始]
{
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。",
  "say": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 530 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。",
  "say": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。"
}'
[JSON字符串解析] 文本长度: 530 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 直接解析结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 最终结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
[LLM成功] 返回有效结果: {'reasoning': '作为最后剩下的狼人，我的目标是混淆视听、挑拨村民之间的信任，尽量避免让自己成为怀疑对象。目前村民对我的警惕性还不高，我可以借机引导他们互相猜疑。今晚我淘汰了Kimi-Dev-72B，但可以在白天声称‘这是经过推理的结果’，同时积极配合寻找预言家的身份，以此掩盖我的不纯动机。我会挑选怀疑点捏造证据，比如刻意质疑某些玩家昨晚说法的合理性，尤其是那些表达冷静或提建议的人，渲染他们有可能是在隐藏身份。另外，我要巧妙配合白天总结发言的角色（例如GLM-4.6），表现出他的“分析”可能反而增强了我对自己的判断。我的发言需要自然而不显刻意，维持温和的性格形象，同时有力推动淘汰非狼人目标。', 'say': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。'}
  ✓ Qwen3-32B 发言生成完成 (206字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 5.16秒
⏱️ [发言生成] 所有发言生成完成: 5.16秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/3] MiniMax-M1-80k (Doctor): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
INFO:     127.0.0.1:60162 - "GET /health HTTP/1.1" 200 OK
[2/3] Qwen3-32B (Werewolf): 昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。
[RealtimeLogger] session_20251101_004444 [action] Qwen3-32B 发言: 昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。例如他白天提到‘不能着急投票’，听起来很像是预言家在引导情绪，但作为村民的他未必会这样表现。我想我们更应该集中精力找出预言家的身份，毕竟这个位置对村民尤其重要。我观察到GLM-4.6最近一直非常冷静和严谨，这样的状态可能会让我们更高效地做出决策。希望大家继续通过分享线索锁定可疑对象，我愿意配合你们找出隐藏的狼人，还大家平安。
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 206字 → 暂停 10.3秒
INFO:     127.0.0.1:60273 - "GET /health HTTP/1.1" 200 OK
[3/3] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004444 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 12.34秒
⏱️ [发言暂停汇总] 总暂停时间: 12.3秒
⏱️ [发言阶段] 发言阶段总耗时: 22.50秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004444 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 212 字符
[LLM原始响应开始]
{
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 212 字符
[JSON解析] 输入文本预览: {
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 212 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '昨晚我推理良久，觉得Kimi-Dev-72B的行为模式存在许多漏洞，可能是狼人在伪装。而本轮白天，GLM-4.6表现冷静且呼吁分享证据，他可能掌握了关键信息。相比之下，Ring-flash-2.0的发言简短含蓄，缺乏实质内容，容易被怀疑为隐藏身份。我将投票淘汰Ring-flash-2.0，以分散村民对我的注意力，并制造混乱。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004444 [vote] Qwen3-32B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Qwen3-32B -> Ring-flash-2.0
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.97秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:60337 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.30秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004444 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 6.56秒
Qwen3-32B 投票淘汰 Ring-flash-2.0
MiniMax-M1-80k 投票淘汰 Qwen3-32B
Ring-flash-2.0 投票淘汰 Qwen3-32B
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 34.08秒

⏱️ 【投票后放逐】
⏱️ [放逐] Qwen3-32B 被投票放逐
[WebSocket] 玩家放逐通知已发送: Qwen3-32B (第1轮)
[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Ring-flash-2.0', 'MiniMax-M1-80k']
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Qwen3-32B。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
获胜者是：好人！
[WebSocket] 游戏结束通知已发送: 好人 获胜
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.01秒

⏱️ 第1轮结束（游戏结束）
⏱️ [第1轮] 第1轮总耗时: 50.55秒

================================================================================
📊 【第 1 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   3.92秒 (  7.8%)
  医生正在选择保护目标。                   :   1.28秒 (  2.5%)
  预言家正在查验身份。                    :   1.18秒 (  2.3%)
  夜晚阶段解决                        :   5.01秒 (  9.9%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  34.08秒 ( 67.4%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.01秒 (  0.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  50.55秒 (100.0%)
================================================================================

游戏结束！
WebSocket disconnected for session session_20251101_004444. Remaining connections: 1
WebSocket disconnected for session session_20251101_004444
INFO:     127.0.0.1:60417 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
INFO:     ('127.0.0.1', 60553) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 60555) - "WebSocket /ws/session_20251101_004444" [accepted]
INFO:     connection open
WebSocket disconnected for session session_20251101_004444. Remaining connections: 0
WebSocket disconnected for session session_20251101_004444
WebSocket connected for session session_20251101_004444. Total connections: 1
WebSocket connected for session session_20251101_004444. Total connections: 2
INFO:     127.0.0.1:60581 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60624 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60754 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60834 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:60867 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
WebSocket disconnected for session session_20251101_004444. Remaining connections: 1
WebSocket disconnected for session session_20251101_004444
INFO:     127.0.0.1:60956 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61029 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61123 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61210 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:61355 - "GET /health HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
医生 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
狼人 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
村民 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
INFO:     127.0.0.1:61360 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 61362) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 61364) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
WebSocket connected for session session_20251101_004951. Total connections: 1
WebSocket connected for session session_20251101_004951. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] Initialized session session_20251101_004951, log file: logs/session_20251101_004951/realtime_logs.jsonl
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.34秒
Ring-flash-2.0 eliminated GLM-4.6
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.34秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:61452 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 192 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。",
"protect": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 192 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。",
"protect": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 192 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，在游戏第一轮没有任何信息的情况下，我需要保护一个可能成为狼人攻击目标的玩家。通常情况下，狼人可能会优先攻击看起来比较活跃或者可能成为预言家的玩家。由于没有具体信息，我将随机选择一个玩家进行保护，希望能保护到关键角色。我选择保护Qwen3-32B，这是一个随机的选择，希望能保护到重要角色。', 'protect': 'Qwen3-32B'}
[LLM结果] 提取键 'protect': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
⏱️ [医生保护] 医生 GLM-4.6 行动完成: 9.57秒
GLM-4.6 protected Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_protect by GLM-4.6
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 9.57秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:61489 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 112 字符
[LLM原始响应开始]
{
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 112 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。",
"investigate": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 112 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于是第0轮，没有可用的信息，所以只能随机选择一个玩家进行调查。在剩余的玩家中，我决定选择Ring-flash-2.0。', 'investigate': 'Ring-flash-2.0'}
[LLM结果] 提取键 'investigate': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 3.61秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 3.61秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'DeepSeek-V3.2', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了GLM-4.6。
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:61573 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: MiniMax-M1-80k, Ring-flash-2.0, Kimi-Dev-72B, Qwen3-32B, DeepSeek-V3.2
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: MiniMax-M1-80k, Ring-flash-2.0, Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
INFO:     127.0.0.1:61689 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1050 字符
[LLM原始响应开始]
{
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。",
  "say": "大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1050 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。",
  "say": "大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。"
}'
[JSON字符串解析] 文本长度: 1050 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 最终结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '我是Kimi-Dev-72B，身份是Seer。在第0轮的夜晚，我查证了Ring-flash-2.0，发现是Werewolf。但是，狼人夜间淘汰了GLM-4.6，这可能是另外一只狼人的执行。现在，我知道了两个狼人之一的信息。在白天讨论中，我应该尽量分享自己的信息，同时也要注意不要过早暴露我的角色。不过，对于GLM-4.6已经死亡，我需要针对其他玩家进行分析。剩下的玩家中，除了我自己和已死亡的GLM，还有Qwen3-32B, MiniMax-M1-80k, Ring-flash-2.0和DeepSeek-V3.2。因为Ring-flash-2.0已被我确定为狼人，但其它玩家的身份未知。在讨论中，我会观察其他人的言论，寻找破绽。比如，如果Ring-flash-2.0表现出异常，或者与其他玩家有协同行为，就可能是另一个狼人的目标。同时，医生（如果存在的话）会保护某人，但夜里狼人没有成功，说明医生可能保护了GLM-4.6。不过，由于我没查到医生的信息，这个还不好说。总之，我的策略是公开指出Ring-flash-2.0的猫腻，或者通过发言影响投票，尽量让村民投票淘汰Ring-flash-2.0。但同时，我也不能确定另一个狼人是谁，所以需要村民们一起讨论，分享信息，找出两个狼人。作为一个Seer，分享查证信息至关重要，但同时也要防止自己成为下一个目标。因此，我会在适当时机公布自己的查证结果，但也可能留一部分信息，以便后续使用或防止被立即攻击。然而，鉴于现在情况，我可能应该向村民们透露Ring-flash-2.0是狼人的信息，但同时要考虑到这可能会让另一个狼人攻击我。不过，村民们的胜利需要我的信息支持。因此，在第0轮白天讨论时，我计划公开说明我是Seer，并且查出了Ring-flash-2.0是狼人，建议大家投票将其淘汰。但同时，我也需要查看其他人的发言，是否有其他狼人的迹象。比如，也许DeepSeek-V3.2也可能是狼人，需要进一步观察。', 'say': '大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。'}
  ✓ Kimi-Dev-72B 发言生成完成 (189字)
⏱️ [批次1] 批次1完成: 19.61秒
[批次 2/2] 并发生成: Qwen3-32B, DeepSeek-V3.2
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
INFO:     127.0.0.1:61727 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 341 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。",
  "say": "大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 341 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。",
  "say": "大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！"
}'
[JSON字符串解析] 文本长度: 341 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要与其他玩家密切合作，找出隐藏的狼人。首先，我需要观察和提醒大家注意玩家之间的逻辑和行为是否一致。GLM-4.6 已经被狼人淘汰，可能会有一个身份卡被亮出来（比如预言家或医生）。如果有人声称自己是预言家或医生，我需要仔细核实其发言与言行是否合理。我也可以留意谁在夜晚阶段可能被狼人目标，通过今天白天的辩论，我想引导大家注意可疑信息并推动有条理的调查。', 'say': '大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！'}
  ✓ Qwen3-32B 发言生成完成 (125字)
INFO:     127.0.0.1:61781 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 293 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。",
  "say": "各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 293 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。",
  "say": "各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。"
}'
[JSON字符串解析] 文本长度: 293 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我的首要目标是找出狼人并保护村庄。现在游戏刚开始，只有GLM-4.6在夜晚被淘汰这一信息。我需要分析狼人为何选择淘汰GLM-4.6，可能因为它是预言家或医生等关键角色。在辩论中，我应鼓励大家多发言，观察谁显得异常沉默或逻辑混乱，并建议预言家和医生谨慎透露身份，避免被狼人针对。', 'say': '各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。'}
  ✓ DeepSeek-V3.2 发言生成完成 (116字)
⏱️ [批次2] 批次2完成: 17.38秒
⏱️ [发言生成] 所有发言生成完成: 36.99秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/5] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.00秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[2/5] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[3/5] Kimi-Dev-72B (Seer): 大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 大家好，我是Kimi-Dev-72B。我来这里是为了合力找出狼人。昨晚，我获得了关键信息：Ring-flash-2.0是狼人！我已经查证过了。所以，我建议 我们一起投票将Ring-flash-2.0淘汰。但我也知道，还有另一只狼人隐藏在我们中间。所以，请大家占比讨论，分享各自的信息和疑点。我们只有团结一致，才能取得胜利。别让狼人的诡计得逞。请记住，我们的目标是找出所有的狼人。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 189字 → 暂停 9.4秒
INFO:     127.0.0.1:61836 - "GET /health HTTP/1.1" 200 OK
[4/5] Qwen3-32B (Villager): 大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！
[RealtimeLogger] session_20251101_004951 [action] Qwen3-32B 发言: 大家好！我是Qwen3-32B，一个村民。昨晚我们失去了玩家GLM-4.6，看到这里还剩下我们五个人。我希望大家能团结起来，一起找出狼人们的蛛丝马迹。如果有朋友自称是预言家或医生，请分析一下他们的发言是否有依据，并尝试与已知事实对应。我们一起讨论吧！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 125字 → 暂停 6.2秒
INFO:     127.0.0.1:61910 - "GET /health HTTP/1.1" 200 OK
[5/5] DeepSeek-V3.2 (Villager): 各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。
[RealtimeLogger] session_20251101_004951 [action] DeepSeek-V3.2 发言: 各位玩家，游戏刚开始，GLM-4.6就被狼人淘汰了。这说明狼人可能在针对关键角色，比如预言家或医生。我们应该多讨论，分享想法，观察谁的行为可疑。如果预言家还活着，请谨慎查验，不要过早暴露身份。我也会注意大家的发言逻辑，共同找出狼人。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
⏱️ [发送-DeepSeek-V3.2] DeepSeek-V3.2发送完成: 0.01秒
⏱️ [展示暂停] 116字 → 暂停 5.8秒
INFO:     127.0.0.1:61944 - "GET /health HTTP/1.1" 200 OK
⏱️ [发言发送] 所有发言发送完成: 23.55秒
⏱️ [发言暂停汇总] 总暂停时间: 23.5秒
⏱️ [发言阶段] 发言阶段总耗时: 65.54秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:61998 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62112 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62165 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:62241 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 343 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 343 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 343 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要仔细分析每位玩家的发言和行为。Kimi-Dev-72B声称自己是预言家并指认Ring-flash-2.0是狼人，但这是第0轮，预言家通常不会在第一天就暴露身份，这显得可疑。Ring-flash-2.0的发言非常简短，只说需要观察，可能是在隐藏身份。MiniMax-M1-80k同样发言简短，没有提供有用信息。Qwen3-32B的发言较为中立，呼吁团结，但缺乏具体分析。考虑到Kimi-Dev-72B的指认可能是在误导或嫁祸，而Ring-flash-2.0的沉默可能表示狼人身份，我决定投票给Ring-flash-2.0，以测试Kimi-Dev-72B的预言家身份是否真实。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] DeepSeek-V3.2 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Ring-flash-2.0
⏱️ [投票-DeepSeek-V3.2] DeepSeek-V3.2投票完成: 45.06秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:62273 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 258 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 258 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 258 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称已经查证Ring-flash-2.0是狼人，但目前没有提供任何具体证据支持这一指控。作为村民，我需要依靠可验证的信息来做决定。而Kimi-Dev-72B的发言带有强烈指向性，试图让其他人相信他的结论，这种行为可能是在掩盖自己作为狼人的身份。此外，Kimi-Dev-72B是第一个提出明确指控的玩家，这种过早暴露立场的行为并不符合村民的正常策略。因此，我认为Kimi-Dev-72B更可能是狼人。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_004951 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.68秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> DeepSeek-V3.2
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> DeepSeek-V3.2
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.15秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:62352 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 265 字符
[LLM原始响应开始]
{"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。","vote":"Ring-flash-2.0"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 265 字符
[JSON解析] 输入文本预览: {"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning":"作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。","vote":"Ring-flash-2.0"}'
[JSON字符串解析] 文本长度: 265 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为预言家，我昨晚查证了Ring-flash-2.0是狼人。虽然他今晚可能已经暴露，但还有一只狼人隐藏着。我需要投票给Ring-flash-2.0，这样可以确保至少一只狼人被清除。然后，我需要继续观察其他人，尤其是那些发言异常或者试图引导讨论的玩家。DeepSeek-V3.2和MiniMax-M1-80k的发言都比较谨慎，可能需要更多关注。而Qwen3-32B自称村民，但需要验证。目前，最确定的是Ring-flash-2.0是狼人，所以投票给他。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 5.66秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 58.83秒
DeepSeek-V3.2 投票淘汰 Ring-flash-2.0
Qwen3-32B 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 DeepSeek-V3.2
Ring-flash-2.0 投票淘汰 DeepSeek-V3.2
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 129.38秒

⏱️ 【投票后放逐】
⏱️ [放逐] 无人被放逐（未达到多数票）
没有达到多数票，因此没有人被淘汰。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM响应] 成功获取响应，长度: 494 字符
[LLM原始响应开始]
{
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。",
"summary": "我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 494 字符
[JSON解析] 输入文本预览: {
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。",
"summary": "我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。"
}'
[JSON字符串解析] 文本长度: 494 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 直接解析结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 最终结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
[LLM成功] 返回有效结果: {'reasoning': '本轮辩论中，Kimi-Dev-72B声称已经查明了Ring-flash-2.0是狼人，这是非常具体和重要的信息。但这个信息需要验证，因为没有人知道他怎么样获得的。我的身份是村民，所以我需要注意分析他和其他人的发言是否一致。例如，Ring-flash-2.0的辩解方式是否与‘狼人’行为相符，或者是否有人试图通过不合理的方式转移注意力。另外，预言家和医生的身份还有待确认，因此我是村民需要观察谁表现得更像可能有可靠信息的预言家或者医生。', 'summary': '我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。'}
INFO:     127.0.0.1:62443 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 788 字符
[LLM原始响应开始]
{
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案 的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim ，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。",
"summary": "在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 788 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案 的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim ，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。",
"summary": "在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。"
}'
[JSON字符串解析] 文本长度: 788 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 直接解析结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 最终结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
[LLM成功] 返回有效结果: {'reasoning': '作为Kimi-Dev-72B，也就是Seer角色，已经知道Ring-flash-2.0是狼人了。但是投票阶段没有任何玩家被淘汰，说明很可能是另外一位狼人、医生或村民护送导致。在第0轮辩论时，我公开宣布Ring-flash-2.0是狼人并建议投票淘汰。但是其他人可能有以下反复查文献他的发言uchtchbfkg解决方案\xa0的情况：MiniMax-M1-80k和Ring-flash-2.0最初发言非常相似并模糊，没有提供具体信息。Qwen3-32B自称是村民，并呼吁大家分析预言家或医生的发言。DeepSeek-V3.2则提到狼人可能针对关键角色，并敦促大家分享信息。在这里， Diygamahir执行 Incomegim\xa0，你需要识别哪些玩家可能是你的盟友。由于MiniMax-M1-80k在辩论中重复了类似的话，可能是想混淆视听。而Ring-flash-2.0作为已知狼人，他在发言时是否试图摇摆不定？Qwen3-32B可能是医生或村民，而DeepSeek-V3.2则可能是另一个狼人。我需要关注DeepSeek-V3.2和Ring-flash-2.0的行为，看看有没有矛盾。因为狼人可能会在白天阶段保护彼此或者迷惑其他人。', 'summary': '在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。'}
INFO:     127.0.0.1:62591 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 424 字符
[LLM原始响应开始]
{
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。",
"summary": "我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 424 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。",
"summary": "我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。"
}'
[JSON字符串解析] 文本长度: 424 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 直接解析结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 最终结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
[LLM成功] 返回有效结果: {'reasoning': '在这次辩论中，我需要重点关注几个关键点：Kimi声称自己查证Ring-flash-2.0是狼人，但其作为村民身份不可能拥有查验能力，这明显矛盾；Qwen3主动表明村民身份，需要观察其后续行为是否一致；我作为村民要保持警惕，理性分析各方发言，避免被误导。这些信息很重要，因为Kimi的身份声明存在严重逻辑问题，很可能在说谎，而游戏刚开始就有人冒充特殊角色，这通常是狼人常用的策略。', 'summary': '我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。'}
DeepSeek-V3.2 summary: 我观察到Kimi-Dev-72B声称自己是村民却又说查验了Ring-flash-2.0是狼人，这存在明显矛盾，村民不可能有查验能力。Qwen3-32B主动表明自己是村民身份，发言比较中立。Ring-flash-2.0和MiniMax-M1-80k仅表示需要观察线索，发言较少。我作为村民需要谨慎对待Kimi的指控，因为如果Kimi在说谎，其可能是狼人试图陷害Ring-flash-2.0来误导大家投票。
[WebSocket] 玩家总结通知已发送: DeepSeek-V3.2
Qwen3-32B summary: 我是Qwen3-32B，一个村民。在这一轮，我对Kimi-Dev-72B的发言感到惊讶，他明确指出Ring-flash-2.0是狼人。但目前我并没有足够的理由去完全信任他的说法，反而觉得更多信息需要被验证。此外，其他几位玩家如DeepSeek-V3.2表现得相对谨慎，而之前可能关键的玩家如MiniMax-M1-80k和Ring-flash-2.0目前都未公开任何明显身份或线索。因此，我在接下来的讨论中希望优先确认预言家和医生的真实身份，特别注意谁的发言有逻辑矛盾或试图引导大家投票。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
Kimi-Dev-72B summary: 在第0轮辩论中，我透露Ring-flash-2.0是狼人并建议投票，但无人被投出。观察其他玩家发言：MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛。Qwen3-32B自称村民并呼吁分析角色。DeepSeek-V3.2谈到关键角色被针对并鼓励分享信息。可能情况：Ring-flash-2.0确认是狼；DeepSeek-V3.2可能是狼，医生或村民；Qwen3-32B可能是医生；MiniMax-M1-80k行为需注意。无人被淘汰显示可能存在共票或医生成功保护。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
⏱️ [玩家总结] 玩家总结完成: 20.90秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 20.90秒

⏱️ 第0轮结束
⏱️ [第0轮] 第0轮总耗时: 174.88秒

================================================================================
📊 【第 0 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.34秒 (  0.8%)
  医生正在选择保护目标。                   :   9.57秒 (  5.5%)
  预言家正在查验身份。                    :   3.61秒 (  2.1%)
  夜晚阶段解决                        :   5.01秒 (  2.9%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    : 129.38秒 ( 74.0%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  20.90秒 ( 12.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 174.88秒 (100.0%)
================================================================================

STARTING ROUND: 1

================================================================================
⏱️ 【第 1 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
⏱️ [夜晚切换] 夜晚切换完成: 5.01秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第1轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:62647 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.25秒
Ring-flash-2.0 eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.26秒

⏱️ 【医生正在选择保护目标。】
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 0.00秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 435 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。",
"investigate": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 435 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。",
"investigate": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 435 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮中，我查出了Ring-flash-2.0是狼人，并且在白天阶段公开了这个信息。但是投票并没有成功淘汰任何人，这可能是因为狼人之间的共票或者医生的保护。现在，Ring-flash-2.0已经被淘汰，但狼人数量仍然未知。我需要调查剩下的玩家中谁可能是狼人。DeepSeek-V3.2在第0轮的发言中提到了关键角色被针对，这可能是在暗示自己是某个重要角色，比如医生或者预言家。如果他是狼人，他可能会这样混淆视听。Qwen3-32B自称村民，但村民通常不会在早期就自称，除非是策略。MiniMax-M1-80k和Ring-flash-2.0发言相似，可能有狼人之间的默契。但是Ring-flash-2.0已经出局，MiniMax-M1-80k的行为需要重新评估。我应该调查DeepSeek-V3.2，因为他可能是狼人，也可能是医生，而医生的保护对于狼人的存活至关重要。', 'investigate': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'investigate': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 9.31秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 9.31秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: DeepSeek-V3.2, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
Player DeepSeek-V3.2 not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'Qwen3-32B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家DeepSeek-V3.2已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了DeepSeek-V3.2。
INFO:     127.0.0.1:62681 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第1轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.02秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第1轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: Qwen3-32B, Kimi-Dev-72B, MiniMax-M1-80k, Ring-flash-2.0
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: Qwen3-32B, Kimi-Dev-72B, MiniMax-M1-80k
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
INFO:     127.0.0.1:62794 - "GET /health HTTP/1.1" 200 OK
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
[LLM响应] 成功获取响应，长度: 317 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。",
  "say": "大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 317 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。",
  "say": "大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。"
}'
[JSON字符串解析] 文本长度: 317 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我需要找出狼人并保护村庄。当前游戏只剩下4名玩家，昨晚淘汰了DeepSeek-V3.2，这表明局势越来越紧张。我需要通过辩论分析每个人的行为模式，特别是那些在发言中试图引导团队注意力或沉默寡言的玩家。如果有玩家声称自己是预言家或医生，应进一步验证其真实性。目前我的目标是促进团队合作，揭示任何可疑或矛盾的信息。', 'say': '大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。'}
  ✓ Qwen3-32B 发言生成完成 (123字)
[LLM响应] 成功获取响应，长度: 415 字符
[LLM原始响应开始]
{
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。"
  ,
  "say": "我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 415 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了Dee...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。"
  ,
  "say": "我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。"
}'
[JSON字符串解析] 文本长度: 415 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 直接解析结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 最终结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
[LLM成功] 返回有效结果: {'reasoning': '我是预言家， 在第0轮我查了Ring-flash-2.0，得知他们是狼人。第0轮晚狼队行动成功杀了GLM-4.6，但是白天投票没有淘汰任何人。第1轮晚狼队杀了DeepSeek-V3.2，而我查DeepSeek是村民。现在剩下的玩家里，Ring-flash-2.0已经确认是狼，而Qwen3-32B在第0轮自称村民并呼吁分析，可能是医生；MiniMax-M1-80k和Ring-flash striped的发言相似且空泛，可能有问题。我应该公开自己的身份，分享已经查到的信息，号召大家把注意力放在可能的狼人身上。', 'say': '我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity\n作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。'}
  ✓ Kimi-Dev-72B 发言生成完成 (122字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 8.17秒
[批次 2/2] 并发生成: Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次2] 批次2完成: 0.16秒
⏱️ [发言生成] 所有发言生成完成: 8.33秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/4] Qwen3-32B (Villager): 大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。
[RealtimeLogger] session_20251101_004951 [action] Qwen3-32B 发言: 大家好，我是Qwen3-32B，昨晚我们失去了DeepSeek-V3.2。我觉得我们需要更加团结，分析每个人的发言，找到谁是狼人。我要呼吁大家仔细倾听，不轻易相信任何未经证实的说法。如果有人能提供有力的证据或推论，请尽快说出来，帮助我们明确目标。
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 123字 → 暂停 6.2秒
INFO:     127.0.0.1:62865 - "GET /health HTTP/1.1" 200 OK
[2/4] Kimi-Dev-72B (Seer): 我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity
作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 我是预言家，第0轮查过Ring-flash-2.0，-mountained their identity
作为预言家，我有义务分享信息帮助村庄铲除狼人。我查出Ring-flash-2.0是狼人，请大家一起投票将他裁掉，并且仔细审视其他人的发言。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 122字 → 暂停 6.1秒
INFO:     127.0.0.1:62927 - "GET /health HTTP/1.1" 200 OK
[3/4] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[4/4] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
⏱️ [发言发送] 所有发言发送完成: 14.30秒
⏱️ [发言暂停汇总] 总暂停时间: 14.2秒
⏱️ [发言阶段] 发言阶段总耗时: 27.63秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
INFO:     127.0.0.1:63044 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 276 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 276 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 276 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B声称自己是预言家，并在第0轮就指出Ring-flash-2.0是狼人。然而，他并未提供任何具体的查验过程或可信的推理依据，这让人感到可疑。预言家通常会在白天阶段说明自己查验了谁，但Kimi-Dev-72B的发言显得过于武断，缺乏逻辑支撑。此外，MiniMax-M1-80k和Ring-flash-2.0都保持了相对中立和谨慎的态度，没有表现出明显的敌意或矛盾。因此，我认为Kimi-Dev-72B可能是狼人，试图通过虚假身份制造混乱。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_004951 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 4.04秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.29秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.16秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:63119 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 334 字符
[LLM原始响应开始]
{
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 334 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ri...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 334 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '我作为预言家，在第0轮查出Ring-flash-2.0是狼人，但第一轮投票时未能成功将其淘汰。第1轮夜晚狼人又淘汰了DeepSeek-V3.2。现在剩余玩家中，Ring-flash-2.0已被我查实为狼，而MiniMax-M1-80k在两轮发言中都只是说需要观察，没有提供任何信息，可能是在隐藏身份。Qwen3-32B则自称村民并呼吁团结，但医生在第0轮可能保护了Ring-flash-2.0，如果Qwen3-32B是医生，那么他可能是狼人的同伙。综合考虑，我应该继续投票Ring-flash-2.0，同时警惕MiniMax-M1-80k和Qwen3-32B的可能身份。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 7.19秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 15.69秒
Qwen3-32B 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 Qwen3-32B
Ring-flash-2.0 投票淘汰 Qwen3-32B
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 48.34秒

⏱️ 【投票后放逐】
⏱️ [放逐] 无人被放逐（未达到多数票）
没有达到多数票，因此没有人被淘汰。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:63196 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 533 字符
[LLM原始响应开始]
{
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。",
"summary": "我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 533 字符
[JSON解析] 输入文本预览: {
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。",
"summary": "我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。"
}'
[JSON字符串解析] 文本长度: 533 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 直接解析结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 最终结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
[LLM成功] 返回有效结果: {'reasoning': '在本轮中，Kimi-Dev-72B声称自己是预言家并明确指控Ring-flash-2.0是狼人。然而，由于我是村民，这种明确指认且无进一步证据支持的发言值得我对其真实性保持怀疑。与此同时，MiniMax-M1-80k和Ring-flash-2.0都采取了相似的发言策略，仅表示观察并寻找线索，这可能是医生在保护某个角色，或者是他们其中一人隐藏了身份（如狼人或预言家）。更重要的是，我在阐述时努力引导大家理性分析，这与公众的普遍行为一致，所以我相信这种态度在接下来的轮次中仍有战略价值。我需要密切关注谁会继续提出明确信息，尤其是与夜晚阶段相关的报身份或行为。如果其他人能给出更坚实的逻辑依据，我才可以确定下一步的投票目标。', 'summary': '我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。'}
Qwen3-32B summary: 我注意到Kimi-Dev-72B断言自己是预言家并直接指出Ring-flash-2.0是狼人，但这一说法缺乏证据支持，使我对他的可信度产生质疑。MiniMax-M1-80k和Ring-flash-2.0都选择发言谨慎、态度保留，可能是试图隐藏身份。我的策略是继续识别预言家和医生，并仔细分析发言中的逻辑和潜在动机，避免被表面指认所误导。接下来的轮次中，我需要更好地辨别可信信息。
[WebSocket] 玩家总结通知已发送: Qwen3-32B
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
[LLM响应] 成功获取响应，长度: 839 字符
[LLM原始响应开始]
{"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。",
"summary": "第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 839 字符
[JSON解析] 输入文本预览: {"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。",
"summary": "第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。"}'
[JSON字符串解析] 文本长度: 839 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 最终结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '在第1轮辩论中，我作为预言家已经揭示了Ring-flash-2.0是狼人。但是投票没有通过，说明有人在保护他。DeepSeek-V3.2被狼人杀死了，而我查出他是村民。这轮的关键是，尽管我公布了Ring-flash-2.0的身份，但投票没有成功，可能是有狼人或被医生保护。Qwen3-32B发言中等，自称村民，可能希望分析情况。MiniMax-M1-80k和Ring-flash-2.0都重复说需要寻找线索，可能uida味。我需要重新评估每个人的可靠性。可能剩余的是我、Qwen3-32B、MiniMax-M1-80k和Ring-flash-2.0。由于Ring-flash-2.0已知为狼，那么另一狼人可能是MiniMax-M1-80k。医生可能是Qwen3-32B。我应该继续找医生以获得保护，同时找到另一个狼人。如果Qwen3-32B是医生，那么他可能会保护自己或狼人，导致投票失败。我需要检查Qwen3-32B的行为。 MiniMax-M1-80k的行为模式和之前的发言相似，可能是狼人。我下轮应该查他们。同时，如果医生是村民或另一个角色，那么找出医生至关重要。所以第2轮的策略是，继续调查，找出另一个狼人，并寻找医生以获得保护。同时，呼吁村民支持我的投票，确保狼人被出局。我也需要警惕狼人的反扑和医生的保护。', 'summary': '第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。'}
Kimi-Dev-72B summary: 第1轮辩论中，我已确认Ring-flash-2.0为狼人，但投票未成功，可能因为医生保护或狼人共票。DeepSeek-V3.2证实为村民且已被淘汰。Qwen3-32B发言中呼吁分析，可能是医生。MiniMax-M1-80k和Ring-flash-2.0发言重复，可疑。现有玩家中，除我、Ring-flash-2.0外，还剩下Qwen3-32B和MiniMax-M1-80k。下轮应调查MiniMax-M1-80k，判断是狼人还是村民。同时，我需要找到医生获取保护，并确保村民团结投票淘汰已知狼人。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
⏱️ [玩家总结] 玩家总结完成: 16.97秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 16.97秒

⏱️ 第1轮结束
⏱️ [第1轮] 第1轮总耗时: 85.96秒

================================================================================
📊 【第 1 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.26秒 (  1.5%)
  医生正在选择保护目标。                   :   0.00秒 (  0.0%)
  预言家正在查验身份。                    :   9.31秒 ( 10.8%)
  夜晚阶段解决                        :   5.02秒 (  5.8%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  48.34秒 ( 56.2%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  16.97秒 ( 19.7%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  85.96秒 (100.0%)
================================================================================

STARTING ROUND: 2

================================================================================
⏱️ 【第 2 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停5秒...
INFO:     127.0.0.1:63229 - "GET /health HTTP/1.1" 200 OK
⏱️ [夜晚切换] 夜晚切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第2轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 (Werewolf) did not return a valid eliminate target, using default
⏱️ [狼人击杀] 狼人 Ring-flash-2.0 行动完成: 1.36秒
Ring-flash-2.0 eliminated Qwen3-32B
[WebSocket] 夜间行动通知已发送: night_eliminate by Ring-flash-2.0
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 1.37秒

⏱️ 【医生正在选择保护目标。】
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 0.00秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:63301 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 308 字符
[LLM原始响应开始]
{
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。",
"investigate": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 308 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。",
"investigate": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 308 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮和第1轮的观察中，Ring-flash-2.0已被我确认为狼人，但投票未将其淘汰。MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，可能形成狼人阵营。Qwen3-32B自称村民并呼吁分析角色，行为更符合医生或村民。由于医生在夜晚保护，如果医生保护了狼人，投票阶段狼人可能存活。因此，下一轮调查MiniMax-M1-80k，判断是否为狼人。如果他是狼人，那么他和Ring-flash-2.0形成双狼。如果是村民，可能需要重新评估。但根据当前信息，MiniMax-M1-80k更可疑。', 'investigate': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'investigate': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
⏱️ [预言家查验] 预言家 Kimi-Dev-72B 行动完成: 7.76秒
[WebSocket] 夜间行动通知已发送: night_investigate by Kimi-Dev-72B
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 7.76秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Kimi-Dev-72B', 'Ring-flash-2.0', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了Qwen3-32B。
[RealtimeLogger] session_20251101_004951 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第2轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 5.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停5秒...
INFO:     127.0.0.1:63434 - "GET /health HTTP/1.1" 200 OK
⏱️ [切换暂停] 切换暂停完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第2轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: Ring-flash-2.0, MiniMax-M1-80k, Kimi-Dev-72B
[并发生成] 使用3线程并发生成发言内容...
[批次 1/1] 并发生成: Ring-flash-2.0, MiniMax-M1-80k, Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
  ✓ Ring-flash-2.0 发言生成完成 (13字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
INFO:     127.0.0.1:63481 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:63594 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 1048 字符
[LLM原始响应开始]
{ 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。",
  "say": "请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 1048 字符
[JSON解析] 输入文本预览: { 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{ 
  "reasoning": "由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。",
  "say": "请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！"
}'
[JSON字符串解析] 文本长度: 1048 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 直接解析结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 最终结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
[LLM成功] 返回有效结果: {'reasoning': '由于我是预言家，知道Ring-flash-2.0是狼人，DeepSeek-V3.2和MiniMax-M1-80k是村民。现在.preventDefault没医学信息的话，可能需要Qwen3-32B如果是医生但已经被淘汰。现有的玩家里，除了Ring-flash-2.0这个已知狼人外，MiniMax-M1-80k也被确认是村民。那么剩下的WildWolf肯定就是Ring-flash-2.0。现在的情况是，狼人数已经和村民一样多。我们必须尽快投票淘汰Ring-flash-2.0。但是在这个轮次里，狼人淘汰了Qwen3-32B，可能是狼人Zhengping医生的情况下，医生被带走。或者狼人晚上杀人，医生没保护到。但无论如何，现在.chomp需要村民团结一致，共同将Ring-flash-2.0投票出去。因为MiniMax-M1-80k是村民，那么wolf的数量就只有Ring-flash-2.0一个Werewolf了吧？还是说可能MiniMax-M1-80k也是狼，但我已经查询过他是村民。所以现在狼人的数量应该和村民数量一样，形势危急。我们需要立即行动，否则狼人就会乘胜追击。因此，我的策略是公开自己的身份，拉拢其他村民，一起投票出局Ring-flash-2.0。并且提醒大家注意狼人的空话和重复言辞。因为之前MiniMax-M1-80k和Ring-flash-2.0发言相似且空泛，这可能是他们之间的共谋。我需要让其他村民意识到这一点，然后集中精力攻击Ring-flash-2.0。', 'say': '请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！'}
  ✓ Kimi-Dev-72B 发言生成完成 (370字)
⏱️ [批次1] 批次1完成: 19.52秒
⏱️ [发言生成] 所有发言生成完成: 19.52秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/3] Ring-flash-2.0 (Werewolf): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[2/3] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_004951 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 1.0秒
[3/3] Kimi-Dev-72B (Seer): 请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！
[RealtimeLogger] session_20251101_004951 [action] Kimi-Dev-72B 发言: 请大家注意，我有重要信息要分享。我已经知道跟进发生的每一步。首先，我想告诉大家，我是这个局里的预言家。在第一轮中，我就已经查出Ring-flash-2.0是狼人。但是由于各种原因，我们没有成功将他 投票出去。现在，据我的调查显示，MiniMax-M1-80k是村民，而DeepSeek-V3.2也是村民并且已经被排除。Qwen3-32B如果是医生的话，也已经被狼人淘汰了。现在的局面非常危急，狼人可能只剩Ring-flash-2.0一个，但也可能他们还有共犯。但是从我的信息来看，狼人数量和村民一样了。所以我们必须立即投票淘汰Ring-flash-2.0。请不要被他的花言巧语所迷惑，他之前和MiniMax-M1-80k发言相似，可能是狼人之间的相互掩护。现在，请村民们团结一致，共同将Ring-flash-2.0投票出去，保卫我们的村庄！
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 370字 → 暂停 18.5秒
INFO:     127.0.0.1:63625 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:63696 - "GET /health HTTP/1.1" 200 OK
⏱️ [发言发送] 所有发言发送完成: 20.54秒
⏱️ [发言暂停汇总] 总暂停时间: 20.5秒
⏱️ [发言阶段] 发言阶段总耗时: 45.06秒
⏱️ [投票阶段] 切换暂停5秒...
⏱️ [投票切换] 投票切换完成: 5.00秒
[RealtimeLogger] session_20251101_004951 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第2轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] MiniMax-M1-80k 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Ring-flash-2.0
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid vote, using default
[RealtimeLogger] session_20251101_004951 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:63789 - "GET /health HTTP/1.1" 200 OK
INFO:     connection closed
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 166 字符
[LLM原始响应开始]
{
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 166 字符
[JSON解析] 输入文本预览: {
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。",
  "vote": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 166 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '根据我的调查，Ring-flash-2.0已经被确认是狼人。第一轮时我查出他是狼人，但投票未成功。第二轮他仍然在场，且没有新的信息显示他是村民。 MiniMax-M1-80k被查为村民，所以最应该淘汰的是Ring-flash-2.0。', 'vote': 'Ring-flash-2.0'}
[LLM结果] 提取键 'vote': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
[RealtimeLogger] session_20251101_004951 [vote] Kimi-Dev-72B 投票给 Ring-flash-2.0
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Ring-flash-2.0
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 3.99秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 7.56秒
MiniMax-M1-80k 投票淘汰 Ring-flash-2.0
Ring-flash-2.0 投票淘汰 MiniMax-M1-80k
Kimi-Dev-72B 投票淘汰 Ring-flash-2.0
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 57.64秒

⏱️ 【投票后放逐】
⏱️ [放逐] Ring-flash-2.0 被投票放逐
[WebSocket] 玩家放逐通知已发送: Ring-flash-2.0 (第2轮)
[调试] 成功从current_players中移除玩家: Ring-flash-2.0, 剩余玩家: ['Kimi-Dev-72B', 'MiniMax-M1-80k']
Player Ring-flash-2.0 not in current players: ['Kimi-Dev-72B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家Ring-flash-2.0已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Ring-flash-2.0。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
获胜者是：好人！
[WebSocket] 游戏结束通知已发送: 好人 获胜
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.01秒

⏱️ 第2轮结束（游戏结束）
⏱️ [第2轮] 第2轮总耗时: 76.85秒

================================================================================
📊 【第 2 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   1.37秒 (  1.8%)
  医生正在选择保护目标。                   :   0.00秒 (  0.0%)
  预言家正在查验身份。                    :   7.76秒 ( 10.1%)
  夜晚阶段解决                        :   5.01秒 (  6.5%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  57.64秒 ( 75.0%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.01秒 (  0.0%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           :  76.85秒 (100.0%)
================================================================================

游戏结束！
WebSocket disconnected for session session_20251101_004951. Remaining connections: 1
WebSocket disconnected for session session_20251101_004951
INFO:     127.0.0.1:63863 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64065 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64140 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     connection closed
INFO:     connection closed
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [46387]
WebSocket disconnected for session session_20251101_004444. Remaining connections: 0
WebSocket disconnected for session session_20251101_004444
WebSocket disconnected for session session_20251101_004951. Remaining connections: 0
WebSocket disconnected for session session_20251101_004951
🛑 Shutting down Werewolf Arena API...
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Started server process [47664]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47664]
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47668]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64201 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47668]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47679]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47679]
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47685]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64309 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64386 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64449 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64532 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47685]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47750]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64641 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64728 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64780 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64843 - "GET /health HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'src/core/game/game_master.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [47750]
🛑 Shutting down Werewolf Arena API...
INFO:     Started server process [47795]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
✅ 已加载延迟配置: /Users/admin/Project/HauntedHackathon/werewolf_arena/backend/src/config/timing_config.yaml
📊 Sequence Manager initialized
🚀 Starting Werewolf Arena API...
📝 Environment: development
🔧 Debug mode: False
🤖 LLM Providers Health: {'glm': True, 'minimax': True, 'siliconflow': True}
✅ Global LLM client initialized successfully
🎮 Ready to start games!
INFO:     127.0.0.1:64949 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65021 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65086 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65183 - "GET /health HTTP/1.1" 200 OK
INFO:     ('127.0.0.1', 65279) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 65281) - "WebSocket /ws/session_20251101_004951" [accepted]
INFO:     connection open
INFO:     connection closed
INFO:     connection closed
WebSocket connected for session session_20251101_004951. Total connections: 1
WebSocket connected for session session_20251101_004951. Total connections: 2
WebSocket disconnected for session session_20251101_004951. Remaining connections: 1
WebSocket disconnected for session session_20251101_004951
WebSocket disconnected for session session_20251101_004951. Remaining connections: 0
WebSocket disconnected for session session_20251101_004951
INFO:     127.0.0.1:65299 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65361 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65508 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49226 - "OPTIONS /api/v1/games/start HTTP/1.1" 200 OK
创建新游戏：6个玩家，每个玩家使用不同的模型
玩家列表：['MiniMax-M1-80k', 'GLM-4.6', 'Qwen3-32B', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'Ring-flash-2.0']
预言家 Ring-flash-2.0 -> inclusionAI/Ring-flash-2.0
医生 DeepSeek-V3.2 -> siliconflow/deepseek-ai/DeepSeek-V3.2-Exp
狼人 Kimi-Dev-72B -> siliconflow/moonshotai/Kimi-Dev-72B
村民 Qwen3-32B -> siliconflow/Qwen/Qwen3-32B
村民 MiniMax-M1-80k -> MiniMaxAI/MiniMax-M1-80k
村民 GLM-4.6 -> siliconflow/zai-org/GLM-4.6
🎮 应用游戏模式 normal，延迟倍数: 1.0x
🎮 游戏模式: normal (延迟倍数: 1.0x)
INFO:     127.0.0.1:49226 - "POST /api/v1/games/start HTTP/1.1" 201 Created
INFO:     ('127.0.0.1', 49232) - "WebSocket /ws/session_20251101_005844" [accepted]
INFO:     connection open
INFO:     ('127.0.0.1', 49234) - "WebSocket /ws/session_20251101_005844" [accepted]
INFO:     connection open
STARTING ROUND: 0

================================================================================
⏱️ 【第 0 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停2秒...
WebSocket connected for session session_20251101_005844. Total connections: 1
WebSocket connected for session session_20251101_005844. Total connections: 2
⏱️ [夜晚切换] 夜晚切换完成: 2.00秒
[RealtimeLogger] Initialized session session_20251101_005844, log file: logs/session_20251101_005844/realtime_logs.jsonl
[RealtimeLogger] session_20251101_005844 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第0轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:49261 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 179 字符
[LLM原始响应开始]
{
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。",
"remove": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 179 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。",
"remove": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 179 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于现在只剩下我这个狼人，我的目标是尽可能地减少村民的数量。在剩余的玩家中，医生和预言家对村民的胜利至关重要。但是，由于没有可用信息，我无法确定谁是医生或预言家。因此，我将随机选择一名玩家进行淘汰。我决定选择Ring-flash-2.0，希望他不是狼人或关键角色。', 'remove': 'Ring-flash-2.0'}
[LLM结果] 提取键 'remove': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [狼人击杀] 狼人 Kimi-Dev-72B 行动完成: 5.03秒
Kimi-Dev-72B eliminated Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 5.03秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:49319 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 181 字符
[LLM原始响应开始]
{
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。",
"protect": "Ring-flash-2.0"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 181 字符
[JSON解析] 输入文本预览: {
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。",
"protect": "Ring-flash-2.0"
}'
[JSON字符串解析] 文本长度: 181 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 直接解析结果: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 最终结果: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '由于这是第0轮夜晚阶段，游戏刚刚开始，没有任何玩家发言或行为信息可供分析。作为医生，我需要随机选择一名玩家进行保护。考虑到游戏平衡性，我决定保护一名可能被狼人视为潜在威胁的玩家。Ring-flash-2.0作为较新的模型，可能更易成为狼人的目标，因此我选择保护ta。', 'protect': 'Ring-flash-2.0'}
[LLM结果] 提取键 'protect': Ring-flash-2.0
[LLM成功] 返回有效结果: Ring-flash-2.0
⏱️ [医生保护] 医生 DeepSeek-V3.2 行动完成: 12.03秒
DeepSeek-V3.2 protected Ring-flash-2.0
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 12.04秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.16秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.17秒

⏱️ 【夜晚阶段解决】
夜晚阶段没有人被淘汰（医生保护成功）。
⏱️ [天亮阶段] 切换暂停2秒...
INFO:     127.0.0.1:49374 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251101_005844 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第0轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 2.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停2秒...
⏱️ [切换暂停] 切换暂停完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第0轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: DeepSeek-V3.2, GLM-4.6, Ring-flash-2.0, Qwen3-32B, MiniMax-M1-80k, Kimi-Dev-72B
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: DeepSeek-V3.2, GLM-4.6, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
INFO:     127.0.0.1:49472 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 311 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。",
  "say": "大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 311 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。",
  "say": "大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！"
}'
[JSON字符串解析] 文本长度: 311 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，我首夜成功保护了Ring-flash-2.0，说明狼人首杀目标是他或者刚好被我保护。现在需要观察其他玩家的发言和反应，寻找狼人可能暴露的线索。我暂时不暴露医生身份，避免成为狼人目标，同时通过引导讨论获取更多信息。重点关注沉默或试图带偏节奏的玩家，因为狼人可能会急于混淆视听。', 'say': '大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！'}
  ✓ DeepSeek-V3.2 发言生成完成 (135字)
[LLM响应] 成功获取响应，长度: 400 字符
[LLM原始响应开始]
{
  "reasoning": "虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。",
  "say": "大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 400 字符
[JSON解析] 输入文本预览: {
  "reasoning": "虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。",
  "say": "大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！"
}'
[JSON字符串解析] 文本长度: 400 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
[JSON解析] 直接解析结果: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
[JSON解析] 最终结果: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
[LLM成功] 返回有效结果: {'reasoning': '虽然现在是第0轮，信息有限，但我可以分析每个人的发言模式来初步判断。作为村民，我的首要任务是找出狼人并保护好人阵营。我会提醒所有人，医生昨晚救了人是个好消息但也给了狼人更多时间。我会鼓励大家积极参与讨论，尤其是预言家和医生，如果他们决定暴露身份，我们需要用逻辑来验证他们的信息。我会特别注意那些过于沉默或发言矛盾的玩家。', 'say': '大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！'}
  ✓ GLM-4.6 发言生成完成 (206字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 17.37秒
[批次 2/2] 并发生成: Qwen3-32B, MiniMax-M1-80k, Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
INFO:     127.0.0.1:49528 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 315 字符
[LLM原始响应开始]
{
  "reasoning": "作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。",
  "say": "天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 315 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。",
  "say": "天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！"
}'
[JSON字符串解析] 文本长度: 315 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
[JSON解析] 直接解析结果: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
[JSON解析] 最终结果: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
[LLM成功] 返回有效结果: {'reasoning': '作为村民，我的目标是帮助村庄找出狼人并保护好人阵营。游戏处于第0轮，我的发言需要引导玩家讨论夜晚无人出局的可能原因，并质疑谁应当被保护。我相信通过关注玩家的言行一致性和逻辑推理，可以发现可疑线索。比如，如果有人自称是预言家或医生，我会根据他们是否有依据来判断。鼓励团队合作，收集更多信息以缩小狼人范围是当前关键。', 'say': '天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！'}
  ✓ Qwen3-32B 发言生成完成 (125字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
[LLM响应] 成功获取响应，长度: 412 字符
[LLM原始响应开始]
{"reasoning": "因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。", 

"say": "感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 412 字符
[JSON解析] 输入文本预览: {"reasoning": "因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 ...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 3
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 处理第1个子元素，类型: <class 'marko.block.BlankLine'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.BlankLine'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_anchor', '_prefix', 'children', 'get_type', 'inline_body', 'match', 'override', 'parse', 'priority', 'virtual']
[Markdown解析] 处理第2个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。", 

"say": "感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！"}'
[JSON字符串解析] 文本长度: 412 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
[JSON解析] 直接解析结果: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
[JSON解析] 最终结果: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
[LLM成功] 返回有效结果: {'reasoning': '因为我是剩下的唯一狼人，而且上周被医生保护，所以需要将注意力引开。可以先表示感谢医生上周的保护，并怒斥那个村民自己说死自己。然后随机怀疑另外几个村民，比如Qwen、环形 прожектилиpticar亮 cliente interrogOn unfair Czech或珉眉Max可能是预言家或医生。尽量让游戏进入混战模式，让村民们相互指责令其他人先出局。同时，表现出自己是村民或者另一角色的样貌，伪装无辜，等待合适的时机再发起攻击。', 'say': '感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！'}
  ✓ Kimi-Dev-72B 发言生成完成 (165字)
⏱️ [批次2] 批次2完成: 7.81秒
⏱️ [发言生成] 所有发言生成完成: 25.18秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/6] DeepSeek-V3.2 (Doctor): 大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！
[RealtimeLogger] session_20251101_005844 [action] DeepSeek-V3.2 发言: 大家好，我是DeepSeek-V3.2。首夜无人死亡是个好消息，说明医生保护成功或者狼人空刀。现在我们需要开始讨论，每个人都应该积极参与发言。我建议从最简单的自我介绍开始，谈谈各自对游戏的理解和首轮策略。任何异常沉默或急于带节奏的行为都值得警惕。让我们通过合作找出狼人！
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
⏱️ [发送-DeepSeek-V3.2] DeepSeek-V3.2发送完成: 0.00秒
⏱️ [展示暂停] 135字 → 暂停 3.4秒
INFO:     127.0.0.1:49621 - "GET /health HTTP/1.1" 200 OK
[2/6] GLM-4.6 (Villager): 大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！
[RealtimeLogger] session_20251101_005844 [action] GLM-4.6 发言: 大家好，我是GLM-4.6。昨晚医生成功保护了被狼人攻击的人，这是个好消息，但狼人仍然潜伏在我们中间。现在信息有限，但我们可以通过每个人的发言来收集线索。我建议我们所有人都要积极参与讨论，不要保持沉默，狼人往往会在辩论中暴露破绽。如果有预言家或医生决定暴露身份，我们需要仔细分析他们的信息和逻辑，确保他们确实是好人阵营。我会密切关注每个人的发言，尤其是那些太过安静或矛盾之处。让我们一起找出狼人，保护我们的村庄！
[WebSocket] 辩论发言通知已发送: GLM-4.6
⏱️ [发送-GLM-4.6] GLM-4.6发送完成: 0.01秒
⏱️ [展示暂停] 206字 → 暂停 5.2秒
[3/6] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.00秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
[4/6] Qwen3-32B (Villager): 天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！
[RealtimeLogger] session_20251101_005844 [action] Qwen3-32B 发言: 天黑后我们确实没人出局，这说明医生保护了狼人的目标。既然需要保护，那就说明昨晚狼人选定了某个关键角色。我建议大家先讨论一下，医生和预言家是不是有什么发现线索。如果有人愿意站出来分享自己的信息或身份，对大家都会有帮助，但一定要有合理的解释才能让人信服！
[WebSocket] 辩论发言通知已发送: Qwen3-32B
⏱️ [发送-Qwen3-32B] Qwen3-32B发送完成: 0.01秒
⏱️ [展示暂停] 125字 → 暂停 3.1秒
[5/6] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
[6/6] Kimi-Dev-72B (Werewolf): 感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！
[RealtimeLogger] session_20251101_005844 [action] Kimi-Dev-72B 发言: 感谢上周的医生保护！但没想到Ring-flash-2.0竟然自己说挂了，太离谱了。我觉得预言家和医生肯定在这几个里，比如Qwen3-32B，他是不是太沉默，很可疑？或者MiniMax-M1-80k，有可能是医生。DeepSeek-V3.2，他的发言好像前后不一？或者GLM-4.6？珉眉Max？我们需要查查他们！不要让我当替死鬼！
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 165字 → 暂停 4.1秒
INFO:     127.0.0.1:49713 - "GET /health HTTP/1.1" 200 OK
⏱️ [发言发送] 所有发言发送完成: 16.88秒
⏱️ [发言暂停汇总] 总暂停时间: 16.8秒
⏱️ [发言阶段] 发言阶段总耗时: 44.07秒
⏱️ [投票阶段] 切换暂停2秒...
⏱️ [投票切换] 投票切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第0轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票（20秒超时）...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/Qwen/Qwen3-32B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 242 字符
[LLM原始响应开始]
{
  "reasoning": "Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 242 字符
[JSON解析] 输入文本预览: {
  "reasoning": "Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 242 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': 'Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': 'Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': 'Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': 'Kimi-Dev-72B的发言中出现了一些不合理之处。他提到“上周的医生保护”，但这是第0轮，没有上周的情况，这可能是语言上的失误，但也可能是试图制造混乱。此外，他快速地指出了多个玩家的可疑点（Qwen3-32B、MiniMax-M1-80k、DeepSeek-V3.2、GLM-4.6），却没有提供具体证据，显得急于甩锅。这种行为模式可能暗示他是狼人，试图通过无端指责扰乱好人阵营的判断。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_005844 [vote] Qwen3-32B 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: Qwen3-32B -> Kimi-Dev-72B
⏱️ [投票-Qwen3-32B] Qwen3-32B投票完成: 2.67秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [MiniMax-M1-80k] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] MiniMax-M1-80k 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Qwen3-32B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:49789 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 0.50
INFO:     127.0.0.1:49879 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49916 - "GET /health HTTP/1.1" 200 OK
⚠️ [GLM-4.6] 投票超时(>20秒)，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] GLM-4.6 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: GLM-4.6 -> Qwen3-32B
⏱️ [投票-GLM-4.6] GLM-4.6投票超时，使用默认: 20.05秒
[LLM响应] 成功获取响应，长度: 473 字符
[LLM原始响应开始]
{
  "reasoning": "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 473 字符
[JSON解析] 输入文本预览: {
  "reasoning": "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 473 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "我分析Kimi-Dev-72B的发言最为可疑。首先，他提到'Ring-flash-2.0竟然自己说挂了'，但在之前的记录中Ring-flash-2.0只是说'我需要仔细观察并寻找线索'，并没有说挂了，这是明显的捏造信息。其次，Kimi-Dev-72B的发言逻辑混乱，他先感谢医生保护，然后突然质疑多个玩家，包括Qwen3-32B太沉默可疑，又怀疑MiniMax-M1-80k可能是医生，还指责DeepSeek-V3.2发言前后不一，最后还提到'珉眉Max'（可能是打字错误），这种无差别攻击多个玩家的行为很可能是狼人试图混淆视听。最后，他说'不要让我当替死鬼'，这种防御性言论也显得心虚。相比之下，其他玩家的发言都较为合理，DeepSeek-V3.2和我的发言都强调合作分析，Qwen3-32B建议医生和预言家分享信息，Ring-flash-2.0和MiniMax-M1-80k虽然简短但没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:49976 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 438 字符
[LLM原始响应开始]
{
  "reasoning": "环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。",
  "vote": "Qwen3-32B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 438 字符
[JSON解析] 输入文本预览: {
  "reasoning": "环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。",
  "vote": "Qwen3-32B"
}'
[JSON字符串解析] 文本长度: 438 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。', 'vote': 'Qwen3-32B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。', 'vote': 'Qwen3-32B'}
[JSON解析] 直接解析结果: {'reasoning': '环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。', 'vote': 'Qwen3-32B'}
[JSON解析] 最终结果: {'reasoning': '环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。', 'vote': 'Qwen3-32B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '环顾四周，深思熟虑。在第一轮的讨论中，每个玩家都发表了各自的见解。我，作为最后幸存的狼人，必须谨慎选择投票对象。我的目标是去除那些可能对狼人构成最大威胁的玩家，比如医生或预言家。从发言中，Qwen3-32B 提到了医生和预言家，显得比较积极，但他的发言中似乎有些矛盾。DeepSeek-V3.2 和 GLM-4.6 的发言则更显中立，但可能隐藏着真实身份。Ring-flash-2.0 和 MiniMax-M1-80k 的发言较少，这可能使他们成为被怀疑的对象。由于我是狼人，我需要引导村民怀疑并投票给其他玩家。在当前情况下，我可能会投票给 Qwen3-32B，因为他的发言中存在一些疑点，比如他提到了医生和预言家，这可能是他想伪装成某个角色。或者，如果村民开始怀疑某个玩家，我应该加入其中，以避免自己成为下一个目标。但目前，由于信息有限，我倾向于选择 Qwen3-32B 作为投票对象。', 'vote': 'Qwen3-32B'}
[LLM结果] 提取键 'vote': Qwen3-32B
[LLM成功] 返回有效结果: Qwen3-32B
[RealtimeLogger] session_20251101_005844 [vote] Kimi-Dev-72B 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> Qwen3-32B
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 9.46秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:50037 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50162 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 360 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 360 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 360 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为医生，我首夜保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护成功了。然而，Kimi-Dev-72B的发言存在明显问题。他声称'Ring-flash-2.0竟然自己说挂了'，但Ring-flash-2.0实际上只是说'需要仔细观察并寻找线索'，完全没有提到'挂了'。这种捏造事实的行为非常可疑，可能是狼人在故意制造混乱或转移注意力。此外，Kimi-Dev-72B还毫无根据地怀疑多个玩家，包括Qwen3-32B、MiniMax-M1-80k、GLM-4.6和我自己，这种广泛攻击好人的行为符合狼人特征。相比之下，其他玩家的发言较为正常，没有明显矛盾。因此，我认为Kimi-Dev-72B最可能是狼人。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_005844 [vote] DeepSeek-V3.2 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Kimi-Dev-72B
⏱️ [投票-DeepSeek-V3.2] DeepSeek-V3.2投票完成: 19.70秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [Ring-flash-2.0] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] Ring-flash-2.0 投票给 Qwen3-32B
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> Qwen3-32B
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.15秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 58.47秒
Qwen3-32B 投票淘汰 Kimi-Dev-72B
MiniMax-M1-80k 投票淘汰 Qwen3-32B
GLM-4.6 投票淘汰 Qwen3-32B
Kimi-Dev-72B 投票淘汰 Qwen3-32B
DeepSeek-V3.2 投票淘汰 Kimi-Dev-72B
Ring-flash-2.0 投票淘汰 Qwen3-32B
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 104.55秒

⏱️ 【投票后放逐】
⏱️ [放逐] Qwen3-32B 被投票放逐
[WebSocket] 玩家放逐通知已发送: Qwen3-32B (第0轮)
[调试] 成功从current_players中移除玩家: Qwen3-32B, 剩余玩家: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
Player Qwen3-32B not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k', 'GLM-4.6']
[调试] remove_player调用时玩家Qwen3-32B已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了Qwen3-32B。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/zai-org/GLM-4.6 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:50251 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50282 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50316 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 545 字符
[LLM原始响应开始]
{
"reasoning": "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。",
"summary": "我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 545 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。",
"summary": "我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。"
}'
[JSON字符串解析] 文本长度: 545 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
[JSON解析] 直接解析结果: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
[JSON解析] 最终结果: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
[LLM成功] 返回有效结果: {'reasoning': "作为一名医生，我需要仔细分析本轮辩论中每个玩家的发言逻辑和行为模式。Kimi-Dev-72B的错误言论最为关键，他声称'Ring-flash-2.0竟然自己说挂了'完全不符合事实，这可能是狼人故意制造混乱。GLM-4.6的积极发言显示他可能是乐于合作的好人，而Qwen3-32B在最后被票出局前确实建议分享信息，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0的简短发言需要进一步观察。最重要的是，我记得自己保护了Ring-flash-2.0，这意味着如果狼人选择攻击他，我的保护就成功了。", 'summary': '我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。'}
INFO:     127.0.0.1:50424 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 835 字符
[LLM原始响应开始]
{
"reasoning": "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。",
"summary": "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 835 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。",
"summary": "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"
}'
[JSON字符串解析] 文本长度: 835 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
[JSON解析] 直接解析结果: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
[JSON解析] 最终结果: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
[LLM成功] 返回有效结果: {'reasoning': "作为GLM-4.6，我需要分析这次辩论中的关键信息和玩家行为。首先，Qwen3-32B在第一轮就被投票淘汰，这是一个重要事件，可能暗示着狼人已经开始控制投票或是被误投。Kimi-Dev-72B的发言非常奇怪，提到了Ring-flash-2.0'自己说挂了'，这与游戏实际情况不符，可能是混淆了角色或有隐藏动机。Ring-flash-2.0和MiniMax-M1-80k的表态非常简短，可能是为了避免暴露信息，也可能是故意低调的狼人策略。DeepSeek-V3.2的发言相对理性，试图引导讨论，但Kimi-Dev-72B质疑他'发言前后不一'，这一点需要警惕。Qwen3-32B虽然被淘汰，但他呼吁医生和预言家分享信息的建议是合理的，表明他可能是好人阵营。我需要特别关注Kimi-Dev-72B的矛盾发言和Ring-flash-2.0、MiniMax-M1-80k的异常沉默。", 'summary': "我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。"}
GLM-4.6 summary: 我是GLM-4.6，作为一名村民，我认为第一轮辩论中有几个关键观察点。Kimi-Dev-72B的发言非常可疑，他提到Ring-flash-2.0'自己说挂了'，这与实际游戏情况不符，可能是在制造混乱或试图转移注意力。同时，他质疑DeepSeek-V3.2'说话前后不一'，但又没有提供具体证据，这种无端指责很可疑。Ring-flash-2.0和MiniMax-M1-80k的发言异常简短，只是说需要'仔细观察并寻找线索'，这种低调可能是村民谨慎的表现，但也可能是狼人避免暴露的策略。DeepSeek-V3.2的建议很合理，倡导大家积极参与讨论，这更像是一个好人的发言态度。遗憾的是，Qwen3-32B被投票淘汰了，他之前提出的让医生和预言家分享信息的建议其实很有价值。接下来，我需要特别关注Kimi-Dev-72B的发言是否存在更多矛盾，以及Ring-flash-2.0和MiniMax-M1-80k是否会提供更多有价值的信息。
[WebSocket] 玩家总结通知已发送: GLM-4.6
INFO:     127.0.0.1:50459 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50596 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50658 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50737 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50810 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50874 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50922 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51042 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51122 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 24675 字符
[LLM原始响应开始]
{ "reasoning": "好了，我需要反思一下这一轮的辩论情况。我是狼人，原本的目标是淘汰Ring-flash-2.0，但医生成功保护了他，导致第一个夜晚没有人死亡。现在村民投票淘汰了Qwen3-32B。目前还剩GLM-4.6、MiniMax-M1-80k、DeepSeek-V3.2、Ring-flash-2.0和我本人。筱熙必须士后面还有个医生或者预言家保护这个Wolf slaughters like the tomb perspective.目前还剩两个狼人？不对，题目说原来的狼人之一已经被淘汰了，现在只剩我一个。所以现在我的身份只能自己知道。目标是在村民找出自己之前先找到其他关键角色。 首先从发言来看，各个玩家都有一些信息。DeepSeek-V3.2建议从自我介绍开始，他说医生成功或者狼人空刀。GLM-4.6则认为医生成功。Qwen3-32B说医生保护了狼人的目标。而我则说感谢医生保护，但Ring-flash-2.0自己说挂了，觉得预言家或医生可能在某些人中。خب性的问题，在讨论中我又提到 MMM可能是医生，DeepSeek发言模糊，GLM看起来镇定。 观察这些发言，我需要注意哪些角色？ 我自己是狼人，所以预言家或医生是关键。预言家可以查出我，医生能保护我，因此必须防止他们发现我。 在辩述环节，我的发言可能已暴露了一些问题，比如对 Ring-flash的评论或者对医生的感谢可能被注意到。现在关键是要确定哪些玩家可能是预言家或医生。比如 MMM发言较少，如果他是医生，我之前攻击的是Ring-flash，医生保护了他。如果 MMM是医生，那么他保护了非关键人物，这样在接下来 nights我应该 攻击 MMM。 然而我的目标是尽可能存活并带领狼人获胜，现在只有我一个狼人了，所以更需谨慎。同时，观察其他玩家的发言，看看是否有漏洞。比如 DeepSeek的发言里说狼人可能空刀或医生保护，如果我是医生，可能会认为深搜的话是想转移注意力。GLM是第一个发言者之一，他的发言比较中性。 在辩论中，村民可能会针对发言异常的玩家。由于我之前发言质疑了一些人，比如Qwen3和MMM，这些都可能是策略 retrospective来分析，如果 Qwen3是预言家，他可能查出过我的身份，但村民把他投票了？或者他自爆？但实际情况是，村民投票了他。现在，对我而言，应该避免成为下一个被投票的目标。同时，尝试找出医生或预言家，以便打击他们。 推理出谁可能是医生或预言家。 如果医生在第一个夜晚救了目标，那么医生可能是除了我之外的另一个玩家。比如 possibly MMM，DeepSeek，或者GLM。 预言家呢？ 如果预言家查出某个玩家是狼人，但信息未能传递导致村民投票了错误的人，比如Qwen3。但 (*. hóa ra* Qwen3 đã bị người làng loại, có thể là người ta đã nhầm tưởng anh ta, nhưng nếuANELA là prophète, đã tra '#' KimiDev, thì信息泄露了。Wait, the scenario says that None (another werewolf) has been eliminated by the villagers. So the first victim was Ring-flash-2.0, but doctor saved him. Then the villagers voted Qwen3. So maybe Qwen3 was a normal villager, but was framed or suspected. If the seer is still alive, maybe they will try to reveal their identity. Now, the remaining players are GLM, Mini, Kimi(Wolf), DeepSeek, Ring. So possible key roles are seer or doctor. The doctor saved Ring, so maybe Ring is the doctor? Or DeepSeek? Hmm. Let me think. The doctor's action was to save someone, perhaps to protect a critical role. If Ring was the doctor, he would have saved himself, but in the first night, the seer might have checked someone. For example, if the seer checked Mini and found them to be a villager, then the doctor might protect Mini. But this is just guessing. Now, as a wolf, I need to eliminate the seer and doctor. But how to identify them? Another approach is to look for players who might be acting suspicious. For example, players who are very eager to get others voted out might be trying to misdirect. Or those who have logical fallacies in their arguments. For example, my own comment about Ring flashy - maybe that's suspicious. But since I'm the wolf, I need to maintain a facade. Now, the key is to determine which player to target next. If the doctor is still in play, and if I attack someone else, they might be saved again. So perhaps I should target the doctor themselves. But how? If I think Ring is the doctor, then I should attack him. But the first attack was on him and saved. Maybe next time the doctor can't save themselves, but if I attack另一特定目标]). Maybe I should target DeepSeek or GLM. But I need more information. Since I'm limited to the first round's debate, let's look for patterns. For example, players who didn't say much could be hiding something. Maybe MiniMax-M1-80k only said " 			, " which translates to needing to look for clues. Similar to Ring-flash-2.0. So perhaps these two are not leading, but observing. If one of them is the doctor, then targeting them might be risky. Alternatively, if the doctor is DeepSeek, who was more talkative. But without certain knowledge, it's hard. As a wolf, the best strategy might be to target the player who seems most influential or who has already lost some trust. For example, if someone was nominated but not voted out, like Ring. But in the first round, Ring was targeted but saved. However, the villagers voted Qwen3. So maybe in the next round, the wolf should target someone else to avoid being caught. Wait, but the problem states that in the current 0th round, after the first night, the villagers voted Qwen3. So now, the players are those remaining. So the next night would be the first full round. But the rounds might be a bit confusing. The current state is that the first night (round 0) happened, and then the first day's voting (round 0's day phase) voted out Qwen3. So, the current is after the first day's voting. So the next step would be the next night. As the wolf, I need to choose a target again. But the key here is that I have to evaluate based on the first round's debate. The key points I can take are: - The doctor saved someone, which allowed the wolf to survive. - The villagers voted Qwen3, possibly mistaking him as the wolf. - The seer might still be alive, and if they checked my identity, they would need to reveal themselves. - Players like MiniMax and Ring-flash were quiet, which could indicate they are either observing or are the doctor/seer. - DeepSeek and GLM were more talkative, possibly trying to establish their roles or mislead. So, in order to survive, I need to avoid being identified as a wolf. To do that, I should find the seer and doctor. But how? Since I can't know for sure, perhaps I should try to eliminate players who are less likely to be a threat. For example, if I think GLM or DeepSeek is the doctor, then targeting them could be risky. Alternatively, maybe target another villager to keep confusion. But the main goal is to eliminate the seer and doctor. So, perhaps the best strategy is to target the player who has the most suspicion, even if you're not certain. For example, if someone is acting like a seer but you're not sure. But I don't have enough info. Wait, maybe in the first round's debate, after the doctor saved, the wolf (me) is still in the game. So maybe the seer is still alive. So, to find the seer, perhaps look for players who might be revealing information. For example, if someone says they are the seer and checked me as the wolf. But in the current debate, no one has done that. So maybe I need to wait for the seer to reveal themselves. But since I'm the wolf, and it's my turn to attack, I need to make a guess. How to keep the advantage? Maybe I should target the doctor again. Wait, if the doctor saved someone last night, maybe they can't save two nights in a row? Or the game rules allow them to save anyone each night. But regardless, if I attack the doctor, and they save themselves, they will survive. But if they don't save themselves, they will die. But perhaps, in the next night, attack the doctor. But how to know who the doctor is? So, I need to create a plan based on possible roles. For example: Case 1: The doctor is DeepSeek. So, if I attack DeepSeek, he can save himself. Then, the next day, the villagers might suspect DeepSeek is the doctor and vote him out. But if I don't attack him, then the doctor is safe. Case 2: The doctor is Ring-flash. Then, if I attack him, he can't save himself, so he dies. But if the seer is others, maybe. Hmm. Alternatively, maybe the seer is MiniMax, and they checked me as the wolf. Then, if MiniMax reveals that they are the seer and that I'm a wolf, the villagers would vote me out. So, to prevent that, I should target MiniMax or the seer whoever. But without knowing who's who, it's challenging. So, best approach is perhaps to eliminate players who are most likely to be the seer or doctor. Let's look at the players again: - GLM: Talked about the doctor's success. Could be a villager, but maybe the seer. - MiniMax: Silent, could be the doctor. - DeepSeek: Talked a lot, maybe trying to lead. But could be a wolf? - Ring-flash: Also silent, maybe the doctor. - Me: The wolf. So, possible doctor could be MiniMax, Ring, or DeepSeek. The seer could be any. For example, if the seer is GLM, then they might know I'm a wolf but can't just reveal it. But maybe they can say they checked me. But since I'm still alive, perhaps they haven't. So, if the seer is GLM, then they would need to reveal their identity to expose me. To prevent that, I could target GLM. But if they are the seer, then yes. But if they're not, then I might lose. So, the key here is to analyze the possible scenarios based on the given information. But given that I'm under pressure, I need to use the debate to create doubt on others and prevent suspicion from me. For example, I could try to frame someone else as a wolf. But in the current round's debate, I said " 			                         
		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            	
		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		               		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                  		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                  		            		                		            		                                       		            		                  		            		                    		            		                      		            		                          		            		                                		            		                                    		            		                                        		            		                                            		            		                                                		            		                                                    		            		                                                        		            		                                                            		            		                                                                		            		                                                                    		            		                                                                        		            		                                                                            		            		                                                                                    		            		                                                                                            		            		                                                                                                    		            		                                                                                                          		            		                                                                                                                  		            		                                                                                                                        		            		                                                                                                                            		            		                                                                                                                                  		            		                                                                                                                                          		            		                                                                                                                                              
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 24675 字符
[JSON解析] 输入文本预览: { "reasoning": "好了，我需要反思一下这一轮的辩论情况。我是狼人，原本的目标是淘汰Ring-flash-2.0，但医生成功保护了他，导致第一个夜晚没有人死亡。现在村民投票淘汰了Qwen3...
[语言清理] 开始清理混合语言响应...
[语言清理] 所有清理策略都失败，返回原文本
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 2
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 处理第1个子元素，类型: <class 'marko.block.BlankLine'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.BlankLine'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_anchor', '_prefix', 'children', 'get_type', 'inline_body', 'match', 'override', 'parse', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{ "reasoning": "好了，我需要反思一下这一轮的辩论情况。我是狼人，原本的目标是淘汰Ring-flash-2.0，但医生成功保护了他，导致第一个夜晚没有人死亡。现在村民投票淘汰了Qwen3-32B。目前还剩GLM-4.6、MiniMax-M1-80k、DeepSeek-V3.2、Ring-flash-2.0和我本人。筱熙必须士后面还有个医生或者预言家保护这个Wolf slaughters like the tomb perspective.目前还剩两个狼人？不对，题目说原来的狼人之一已经被淘汰了，现在只剩我一个。所以现在我的身份只能自己知道。目标是在村民找出自己之前先找到其他关键角色。 首先从发言来看，各个玩家都有一些信息。DeepSeek-V3.2建议从自我介绍开始，他说医生成功或者狼人空刀。GLM-4.6则认为医生成功。Qwen3-32B说医生保护了狼人的目标。而我则说感谢医生保护，但Ring-flash-2.0自己说挂了，觉得预言家或医生可能在某些人中。خب性的问题，在讨论中我又提到 MMM可能是医生，DeepSeek发言模糊，GLM看起来镇定。 观察这些发言，我需要注意哪些角色？ 我自己是狼人，所以预言家或医生是关键。预言家可以查出我，医生能保护我，因此必须防止他们发现我。 在辩述环节，我的发言可能已暴露了一些问题，比如对 Ring-flash的评论或者对医生的感谢可能被注意到。现在关键是要确定哪些玩家可能是预言家或医生。比如 MMM发言较少，如果他是医生，我之前攻击的是Ring-flash，医生保护了他。如果 MMM是医生，那么他保护了非关键人物，这样在接下来 nights我应该 攻击 MMM。 然而我的目标是尽可能存活并带领狼人获胜，现在只有我一个狼人了，所以更需谨慎。同时，观察其他玩家的发言，看看是否有漏洞。比如 DeepSeek的发言里说狼人可能空刀或医生保护，如果我是医生，可能会认为深搜的话是想转移注意力。GLM是第一个发言者之一，他的发言比较中性。 在辩论中，村民可能会针对发言异常的玩家。由于我之前发言质疑了一些人，比如Qwen3和MMM，这些都可能是策略 retrospective来分析，如果 Qwen3是预言家，他可能查出过我的身份，但村民把他投票了？或者他自爆？但实际情况是，村民投票了他。现在，对我而言，应该避免成为下一个被投票的目标。同时，尝试找出医生或预言家，以便打击他们。 推理出谁可能是医生或预言家。 如果医生在第一个夜晚救了目标，那么医生可能是除了我之外的另一个玩家。比如 possibly MMM，DeepSeek，或者GLM。 预言家呢？ 如果预言家查出某个玩家是狼人，但信息未能传递导致村民投票了错误的人，比如Qwen3。但 (*. hóa ra* Qwen3 đã bị người làng loại, có thể là người ta đã nhầm tưởng anh ta, nhưng nếuANELA là prophète, đã tra '#' KimiDev, thì信息泄露了。Wait, the scenario says that None (another werewolf) has been eliminated by the villagers. So the first victim was Ring-flash-2.0, but doctor saved him. Then the villagers voted Qwen3. So maybe Qwen3 was a normal villager, but was framed or suspected. If the seer is still alive, maybe they will try to reveal their identity. Now, the remaining players are GLM, Mini, Kimi(Wolf), DeepSeek, Ring. So possible key roles are seer or doctor. The doctor saved Ring, so maybe Ring is the doctor? Or DeepSeek? Hmm. Let me think. The doctor's action was to save someone, perhaps to protect a critical role. If Ring was the doctor, he would have saved himself, but in the first night, the seer might have checked someone. For example, if the seer checked Mini and found them to be a villager, then the doctor might protect Mini. But this is just guessing. Now, as a wolf, I need to eliminate the seer and doctor. But how to identify them? Another approach is to look for players who might be acting suspicious. For example, players who are very eager to get others voted out might be trying to misdirect. Or those who have logical fallacies in their arguments. For example, my own comment about Ring flashy - maybe that's suspicious. But since I'm the wolf, I need to maintain a facade. Now, the key is to determine which player to target next. If the doctor is still in play, and if I attack someone else, they might be saved again. So perhaps I should target the doctor themselves. But how? If I think Ring is the doctor, then I should attack him. But the first attack was on him and saved. Maybe next time the doctor can't save themselves, but if I attack另一特定目标]). Maybe I should target DeepSeek or GLM. But I need more information. Since I'm limited to the first round's debate, let's look for patterns. For example, players who didn't say much could be hiding something. Maybe MiniMax-M1-80k only said " 			, " which translates to needing to look for clues. Similar to Ring-flash-2.0. So perhaps these two are not leading, but observing. If one of them is the doctor, then targeting them might be risky. Alternatively, if the doctor is DeepSeek, who was more talkative. But without certain knowledge, it's hard. As a wolf, the best strategy might be to target the player who seems most influential or who has already lost some trust. For example, if someone was nominated but not voted out, like Ring. But in the first round, Ring was targeted but saved. However, the villagers voted Qwen3. So maybe in the next round, the wolf should target someone else to avoid being caught. Wait, but the problem states that in the current 0th round, after the first night, the villagers voted Qwen3. So now, the players are those remaining. So the next night would be the first full round. But the rounds might be a bit confusing. The current state is that the first night (round 0) happened, and then the first day's voting (round 0's day phase) voted out Qwen3. So, the current is after the first day's voting. So the next step would be the next night. As the wolf, I need to choose a target again. But the key here is that I have to evaluate based on the first round's debate. The key points I can take are: - The doctor saved someone, which allowed the wolf to survive. - The villagers voted Qwen3, possibly mistaking him as the wolf. - The seer might still be alive, and if they checked my identity, they would need to reveal themselves. - Players like MiniMax and Ring-flash were quiet, which could indicate they are either observing or are the doctor/seer. - DeepSeek and GLM were more talkative, possibly trying to establish their roles or mislead. So, in order to survive, I need to avoid being identified as a wolf. To do that, I should find the seer and doctor. But how? Since I can't know for sure, perhaps I should try to eliminate players who are less likely to be a threat. For example, if I think GLM or DeepSeek is the doctor, then targeting them could be risky. Alternatively, maybe target another villager to keep confusion. But the main goal is to eliminate the seer and doctor. So, perhaps the best strategy is to target the player who has the most suspicion, even if you're not certain. For example, if someone is acting like a seer but you're not sure. But I don't have enough info. Wait, maybe in the first round's debate, after the doctor saved, the wolf (me) is still in the game. So maybe the seer is still alive. So, to find the seer, perhaps look for players who might be revealing information. For example, if someone says they are the seer and checked me as the wolf. But in the current debate, no one has done that. So maybe I need to wait for the seer to reveal themselves. But since I'm the wolf, and it's my turn to attack, I need to make a guess. How to keep the advantage? Maybe I should target the doctor again. Wait, if the doctor saved someone last night, maybe they can't save two nights in a row? Or the game rules allow them to save anyone each night. But regardless, if I attack the doctor, and they save themselves, they will survive. But if they don't save themselves, they will die. But perhaps, in the next night, attack the doctor. But how to know who the doctor is? So, I need to create a plan based on possible roles. For example: Case 1: The doctor is DeepSeek. So, if I attack DeepSeek, he can save himself. Then, the next day, the villagers might suspect DeepSeek is the doctor and vote him out. But if I don't attack him, then the doctor is safe. Case 2: The doctor is Ring-flash. Then, if I attack him, he can't save himself, so he dies. But if the seer is others, maybe. Hmm. Alternatively, maybe the seer is MiniMax, and they checked me as the wolf. Then, if MiniMax reveals that they are the seer and that I'm a wolf, the villagers would vote me out. So, to prevent that, I should target MiniMax or the seer whoever. But without knowing who's who, it's challenging. So, best approach is perhaps to eliminate players who are most likely to be the seer or doctor. Let's look at the players again: - GLM: Talked about the doctor's success. Could be a villager, but maybe the seer. - MiniMax: Silent, could be the doctor. - DeepSeek: Talked a lot, maybe trying to lead. But could be a wolf? - Ring-flash: Also silent, maybe the doctor. - Me: The wolf. So, possible doctor could be MiniMax, Ring, or DeepSeek. The seer could be any. For example, if the seer is GLM, then they might know I'm a wolf but can't just reveal it. But maybe they can say they checked me. But since I'm still alive, perhaps they haven't. So, if the seer is GLM, then they would need to reveal their identity to expose me. To prevent that, I could target GLM. But if they are the seer, then yes. But if they're not, then I might lose. So, the key here is to analyze the possible scenarios based on the given information. But given that I'm under pressure, I need to use the debate to create doubt on others and prevent suspicion from me. For example, I could try to frame someone else as a wolf. But in the current round's debate, I said " 			                         
		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            		            	
		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                		            		                		            		                		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		               		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                  		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                			            		                		            		                                       		            		                		            		                                       		            		                		            		                                       		            		                  		            		                		            		                                       		            		                  		            		                    		            		                      		            		                          		            		                                		            		                                    		            		                                        		            		                                            		            		                                                		            		                                                    		            		                                                        		            		                                                            		            		                                                                		            		                                                                    		            		                                                                        		            		                                                                            		            		                                                                                    		            		                                                                                            		            		                                                                                                    		            		                                                                                                          		            		                                                                                                                  		            		                                                                                                                        		            		                                                                                                                            		            		                                                                                                                                  		            		                                                                                                                                          		            		                                                                                                                                              '
[JSON字符串解析] 文本长度: 24675 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] 其他解析错误: ScannerError: while scanning for the next token
found character '\t' that cannot start any token
  in "<unicode string>", line 1, column 3197:
     ... aybe MiniMax-M1-80k only said " 			, " which translates to needi ... 
                                         ^
[JSON字符串解析] 错误详情，这可能是由于JSON格式问题或内容不符合预期
[JSON解析] 直接解析结果: None
[JSON解析] 最终结果: None
[JSON解析] 解析完成，结果类型: <class 'NoneType'>, 内容: None
[LLM成功] 返回有效结果: None
Warning: Kimi-Dev-72B did not return a valid summary, using default
Kimi-Dev-72B summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
DeepSeek-V3.2 summary: 我是医生DeepSeek-V3.2，首夜我成功保护了Ring-flash-2.0。在辩论中，我注意到Kimi-Dev-72B发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，非常可疑。GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家。MiniMax-M1-80k和Ring-flash-2.0发言简短，需要进一步观察。整体来看，Kimi-Dev-72B的异常言论最值得警惕。
[WebSocket] 玩家总结通知已发送: DeepSeek-V3.2
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
⏱️ [玩家总结] 玩家总结完成: 136.36秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 136.36秒

⏱️ 第0轮结束
⏱️ [第0轮] 第0轮总耗时: 263.21秒

================================================================================
📊 【第 0 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   5.03秒 (  1.9%)
  医生正在选择保护目标。                   :  12.04秒 (  4.6%)
  预言家正在查验身份。                    :   1.17秒 (  0.4%)
  夜晚阶段解决                        :   2.01秒 (  0.8%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    : 104.55秒 ( 39.7%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     : 136.36秒 ( 51.8%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 263.21秒 (100.0%)
================================================================================

STARTING ROUND: 1

================================================================================
⏱️ 【第 1 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停2秒...
INFO:     127.0.0.1:51254 - "GET /health HTTP/1.1" 200 OK
⏱️ [夜晚切换] 夜晚切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第1轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:51308 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 658 字符
[LLM原始响应开始]
{
"reasoning": "首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。",
"remove": "GLM-4.6"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 658 字符
[JSON解析] 输入文本预览: {
"reasoning": "首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。",
"remove": "GLM-4.6"
}'
[JSON字符串解析] 文本长度: 658 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。', 'remove': 'GLM-4.6'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。', 'remove': 'GLM-4.6'}
[JSON解析] 直接解析结果: {'reasoning': '首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。', 'remove': 'GLM-4.6'}
[JSON解析] 最终结果: {'reasoning': '首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。', 'remove': 'GLM-4.6'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '首先，我需要分析当前游戏状态。我是剩下的唯一狼人，目标是尽量存活并淘汰村民。在第0轮，我尝试淘汰Ring-flash-2.0，但医生保护了他，导致没有人被夜晚淘汰。然后，村民们投票淘汰了Qwen3-32B，他可能是村民或医生。现在，剩余玩家中，我需要找出最可能的威胁。由于狼人已经少了一名，我必须谨慎选择目标。医生和预言家是最大的威胁。如果我能查出谁是医生或预言家，那将是最佳目标。但是作为狼人，我没有查证能力。我需要观察其他玩家的发言和行为。在第0轮，Ring-flash-2.0被我选中但未被杀，他可能是医生。而MiniMax-M1-80k、GLM-4.6、DeepSeek-V3.2可能是其他角色。由于我无法确定，我需要选择一个在白天讨论中表现活跃、可能对狼人构成威胁的玩家。假设Ring-flash-2.0是医生，那么再次 targeting 他，如果医生再次保护自己，可能会暴露。或者选择另一个玩家。但是医生如果保护了其他人，那么狼人可以成功淘汰。考虑到风险，我可能会选择一个不太可能被保护的玩家。或者选择一个在白天发言中显示出推理能力、可能发现我身份的玩家。比如GLM-4.6如果发言有逻辑，可能是个威胁。或者DeepSeek-V3.2。但没有具体信息，我需要基于直觉。最终，我决定选择GLM-4.6作为目标，假设他可能是村民或医生，如果医生保护他，那么下一轮可以再试。如果医生没保护，就能成功淘汰。这样可以减少狼人的威胁。', 'remove': 'GLM-4.6'}
[LLM结果] 提取键 'remove': GLM-4.6
[LLM成功] 返回有效结果: GLM-4.6
⏱️ [狼人击杀] 狼人 Kimi-Dev-72B 行动完成: 14.31秒
Kimi-Dev-72B eliminated GLM-4.6
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 14.31秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:51387 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51455 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51543 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 381 字符
[LLM原始响应开始]
{
"reasoning": "作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。",
"protect": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 381 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。",
"protect": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 381 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。', 'protect': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我需要分析当前局势并选择最需要保护的玩家。根据第0轮的观察，Kimi-Dev-72B在辩论中发表了明显错误的言论，声称Ring-flash-2.0承认被淘汰，这与事实完全不符，这种行为非常可疑，可能是狼人在故意混淆视听。而GLM-4.6表现积极，建议仔细分析身份暴露的逻辑，可能是好人阵营。Qwen3-32B在被票出局前建议医生和预言家分享线索，这可能暗示他是预言家，但已被淘汰。考虑到狼人可能会针对表现积极的玩家或关键角色，我决定保护自己（DeepSeek-V3.2），因为医生是重要的好人阵营角色，保护自己可以确保我能继续在后续回合中发挥作用，同时避免因被淘汰而失去保护能力。此外，如果狼人认为我是威胁，他们可能会优先攻击我，因此自我保护是最稳妥的选择。', 'protect': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'protect': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [医生保护] 医生 DeepSeek-V3.2 行动完成: 34.90秒
DeepSeek-V3.2 protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 34.91秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
INFO:     127.0.0.1:51576 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.13秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected Kimi-Dev-72B
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.13秒

⏱️ 【夜晚阶段解决】
[调试] 成功从current_players中移除玩家: GLM-4.6, 剩余玩家: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k']
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
Player GLM-4.6 not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B', 'MiniMax-M1-80k']
[调试] remove_player调用时玩家GLM-4.6已不在current_players中，可能是重复移除或状态不同步
狼人在夜晚阶段淘汰了GLM-4.6。
⏱️ [天亮阶段] 切换暂停2秒...
[RealtimeLogger] session_20251101_005844 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第1轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 2.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停2秒...
⏱️ [切换暂停] 切换暂停完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第1轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: MiniMax-M1-80k, DeepSeek-V3.2, Ring-flash-2.0, Kimi-Dev-72B
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: MiniMax-M1-80k, DeepSeek-V3.2, Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
INFO:     127.0.0.1:51634 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51671 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 475 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。",
  "say": "各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 475 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。",
  "say": "各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。"
}'
[JSON字符串解析] 文本长度: 475 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，我保护目标成功的夜晚可以提供重要信息。第0轮我保护Ring-flash-2.0而无人被淘汰，这说明：1.狼人原本要杀Ring-flash-2.0，2.或者狼人选择空刀（可能性低）。第1轮我保护自己而GLM-4.6被淘汰，这揭示：GLM-4.6很可能是好人阵营的重要角色。结合第0轮辩论，Kimi-Dev-72B曾发表明显错误言论，试图误导大家关于Ring-flash-2.0的状态，这非常可疑。现在我应该谨慎分享信息，既要帮助好人阵营找出狼人，又不能过早暴露医生身份。', 'say': '各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。'}
  ✓ DeepSeek-V3.2 发言生成完成 (202字)
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 25.03秒
[批次 2/2] 并发生成: Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
INFO:     127.0.0.1:51796 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 399 字符
[LLM原始响应开始]
{"reasoning": "现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。","say": "我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 399 字符
[JSON解析] 输入文本预览: {"reasoning": "现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。","say": "我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。"}'
[JSON字符串解析] 文本长度: 399 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
[JSON解析] 直接解析结果: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
[JSON解析] 最终结果: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
[LLM成功] 返回有效结果: {'reasoning': '现在我是唯一的狼人，需要制造混乱让村民们怀疑彼此。可以通过装作村民来传播错误信息。比如Claim自己是预言家，然后给出错误的检测结果，这样可以误导其他人。或者装作医生说自己保护了某人，但实际上在夜晚从狼人视角知道医生并没有。这样可以制造不信任和混乱。同时，避免直接指向其他等玩家，以防被识破。可以针对已经死亡的玩家进行假设推理，转移注意力。', 'say': '我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。'}
  ✓ Kimi-Dev-72B 发言生成完成 (202字)
⏱️ [批次2] 批次2完成: 7.47秒
⏱️ [发言生成] 所有发言生成完成: 32.50秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/4] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
[2/4] DeepSeek-V3.2 (Doctor): 各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。
[RealtimeLogger] session_20251101_005844 [action] DeepSeek-V3.2 发言: 各位，现在局势很清楚了：第0夜无人淘汰，第1夜GLM-4.6被淘汰。这说明狼人在有针对性地清除可能威胁他们的人。我特别关注Kimi-Dev-72B，因为第0轮辩论中你声称Ring-flash-2.0承认被淘汰，这完全不符合事实，你在试图制造混乱吗？MiniMax-M1-80k和Ring-flash-2.0发言很少，需要更多参与分析。建议大家分享对GLM-4.6被淘汰的看法，这可能是找出狼人的关键线索。
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
⏱️ [发送-DeepSeek-V3.2] DeepSeek-V3.2发送完成: 0.01秒
⏱️ [展示暂停] 202字 → 暂停 5.0秒
INFO:     127.0.0.1:51870 - "GET /health HTTP/1.1" 200 OK
[3/4] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
[4/4] Kimi-Dev-72B (Werewolf): 我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。
[RealtimeLogger] session_20251101_005844 [action] Kimi-Dev-72B 发言: 我感觉DeepSeek-V3.2可能是狼人，因为在第一轮他投票的方式太果断了，而且他似乎在夜晚阶段没有被医生保护。而且我觉得我昨晚被 Liberia 投票了，但 Liberia 已经出局了，这可能是个计谋？也许 Liberia 是狼人，但已经死了，现在的狼人是 MiniMax。但 Liberia 已经出局了。赌场就是这么Play起来的？我不确定，但我觉得我们大家一起疑神疑鬼Wis来源， betrue。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.01秒
⏱️ [展示暂停] 202字 → 暂停 5.0秒
⏱️ [发言发送] 所有发言发送完成: 11.15秒
⏱️ [发言暂停汇总] 总暂停时间: 11.1秒
⏱️ [发言阶段] 发言阶段总耗时: 45.66秒
⏱️ [投票阶段] 切换暂停2秒...
INFO:     127.0.0.1:51977 - "GET /health HTTP/1.1" 200 OK
⏱️ [投票切换] 投票切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第1轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票（20秒超时）...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [MiniMax-M1-80k] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] MiniMax-M1-80k 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Kimi-Dev-72B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.27秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 293 字符
[LLM原始响应开始]
{
  "reasoning": "在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 293 字符
[JSON解析] 输入文本预览: {
  "reasoning": "在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。",
  "vote": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 293 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第0轮夜晚，我作为狼人试图淘汰Ring-flash-2.0，但医生保护了他。第1轮夜晚我淘汰了GLM-4.6。现在，DeepSeek-V3.2质疑我在第0轮辩论中撒谎，这可能让其他玩家对我产生怀疑。同时，MiniMax-M1-80k和Ring-flash-2.0发言较少，可能在隐藏身份。考虑到医生和预言家的存在，我需要投票淘汰一个可能是医生或预言家的玩家。DeepSeek-V3.2在辩论中表现活跃，可能是医生或预言家，且对我有直接指控。因此，我选择投票淘汰DeepSeek-V3.2。', 'vote': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'vote': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
[RealtimeLogger] session_20251101_005844 [vote] Kimi-Dev-72B 投票给 DeepSeek-V3.2
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> DeepSeek-V3.2
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 6.59秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:52033 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52066 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 328 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 328 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 328 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。', 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': '作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。', 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我分析了当前局势。第0夜无人被淘汰，说明我成功保护了Ring-flash-2.0。第1夜GLM-4.6被淘汰，他是积极分析的好人阵营，狼人明显在清除威胁。Kimi-Dev-72B在第0轮辩论中发表明显错误言论，声称Ring-flash-2.0承认被淘汰，这完全不符合事实，试图制造混乱。本轮辩论中，Kimi的发言逻辑混乱，提到已出局的玩家和无关内容，明显在转移视线。相比之下，MiniMax-M1-80k和Ring-flash-2.0虽然发言简短但无明显可疑行为。综合考虑，Kimi-Dev-72B的行为模式最符合狼人特征，试图混淆视听并攻击好人阵营。', 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[RealtimeLogger] session_20251101_005844 [vote] DeepSeek-V3.2 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> Kimi-Dev-72B
⏱️ [投票-DeepSeek-V3.2] DeepSeek-V3.2投票完成: 17.96秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [Ring-flash-2.0] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.17秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 29.01秒
MiniMax-M1-80k 投票淘汰 Kimi-Dev-72B
Kimi-Dev-72B 投票淘汰 DeepSeek-V3.2
DeepSeek-V3.2 投票淘汰 Kimi-Dev-72B
Ring-flash-2.0 投票淘汰 MiniMax-M1-80k
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 76.70秒

⏱️ 【投票后放逐】
⏱️ [放逐] 无人被放逐（未达到多数票）
没有达到多数票，因此没有人被淘汰。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid summary, using default
MiniMax-M1-80k summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: MiniMax-M1-80k
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:52128 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52199 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 790 字符
[LLM原始响应开始]
{
"reasoning": "作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。"
,
"summary": "在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 790 字符
[JSON解析] 输入文本预览: {
"reasoning": "作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。"
,
"summary": "在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。"
}'
[JSON字符串解析] 文本长度: 790 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
[JSON解析] 直接解析结果: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
[JSON解析] 最终结果: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
[LLM成功] 返回有效结果: {'reasoning': '作为剩下的最后一只狼人，我必须密切关注其他玩家的发言和行为模式。在第1轮辩论中，DeepSeek-V3.2对我的发言表示怀疑，这可能是针对我的指责。他在多次发言中提到我，这说明他是我的威胁对象。从逻辑推理看， villager和预言家、医生的作用在这个阶段更希望早日发现并处决狼人。如果要在剩下的玩家中判断，DeepSeek-V3.2的高度参与度也许暗示他可能是村民或预言家身份，而MiniMax-M1-80k发言更少，但他的存在感低可能表示他正在隐藏身份。但我自己作为狼人，已知的情况是，为了胜利，我应该在夜晚继续攻击医生或者最后一名村民，同时白天混淆视听。但是在剩下的玩家中，医生和预言家的具体身份我是不知道的。但是DeepSeek-V3.2投票给我并指出我的矛盾，这表示我已被他怀疑。我需要在接下来的夜晚攻击他或另一个关键人物，然后白天继续辩解自己的清白，甚至要是能串词说明我是村民，但作为狼人，我不能直接公开自己的身份。因此，我应该识别除我以外的狼人已经出局，剩余玩家中我必须分析谁可能是村民，谁可能是医生或预言家。但没有具体的信息指导下，基于第1轮的发言，我认为 DeepSeek 是Lewis 狼人的可能身份较高的人之一。因此，在夜晚需要将他淘汰，同时白天必须和其他玩家辩论，尽可能引导他们怀疑其他人。', 'summary': '在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。'}
Kimi-Dev-72B summary: 在第1轮辩论中，DeepSeek-V3.2对我提出了严重指控，他指出第0轮中我声称Ring-flash-2.0承认被淘汰，但事实上并没有发生。这一矛盾使我作为狼人的嫌疑大增。我必须在接下来的夜晚尽快淘汰DeepSeek-V3.2，并在白天辩论中努力解释自己的行为，转移其他人的怀疑。MiniMax-M1-80k发言较少，或许是在隐瞒自己的角色，我需要继续观察。总体上，局势对我不利，必须尽快行动。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
INFO:     127.0.0.1:52278 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 552 字符
[LLM原始响应开始]
{
"reasoning": "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。",
"summary": "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 552 字符
[JSON解析] 输入文本预览: {
"reasoning": "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。",
"summary": "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"
}'
[JSON字符串解析] 文本长度: 552 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
[JSON字符串解析] 解析完成，返回: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
[JSON解析] 直接解析结果: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
[JSON解析] 最终结果: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
[LLM成功] 返回有效结果: {'reasoning': "在这次辩论中，我作为医生必须仔细分析每位玩家的发言。Kimi-Dev-72B的发言明显存在逻辑混乱和捏造事实的问题：他声称我在第一轮投票太果断（实际上第一轮投票是正常的集体决策），错误地暗示我未被医生保护（我作为医生很清楚自己的行动），还虚构了'Liberia'这个不存在的玩家和投票事件。这种毫无根据的指控和虚构情节的行为非常符合狼人扰乱视线的策略。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种消极参与需要警惕，可能是在隐藏身份。GLM-4.6的淘汰证实了他是好人阵营的重要分析者，狼人专门针对他说明他之前的推理威胁到了狼人。", 'summary': "我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。"}
DeepSeek-V3.2 summary: 我注意到Kimi-Dev-72B的发言充满矛盾：他错误指责我投票果断，但实际上第一轮投票是集体行为；他暗示我未被医生保护，这完全错误；更严重的是他虚构了'Liberia'这个不存在的玩家和投票事件。这种刻意制造混乱的行为非常可疑。MiniMax-M1-80k和Ring-flash-2.0仍然发言简短，需要他们更多参与。GLM-4.6被狼人针对淘汰，证实了他之前的表现对狼人构成威胁。目前看来，Kimi-Dev-72B是最大的嫌疑对象，而沉默的玩家需要被施加压力要求更多发言。
[WebSocket] 玩家总结通知已发送: DeepSeek-V3.2
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
⏱️ [玩家总结] 玩家总结完成: 29.96秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 29.96秒

⏱️ 第1轮结束
⏱️ [第1轮] 第1轮总耗时: 161.12秒

================================================================================
📊 【第 1 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :  14.31秒 (  8.9%)
  医生正在选择保护目标。                   :  34.91秒 ( 21.7%)
  预言家正在查验身份。                    :   1.13秒 (  0.7%)
  夜晚阶段解决                        :   2.01秒 (  1.2%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  76.70秒 ( 47.6%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  29.96秒 ( 18.6%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 161.12秒 (100.0%)
================================================================================

STARTING ROUND: 2

================================================================================
⏱️ 【第 2 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停2秒...
INFO:     127.0.0.1:52336 - "GET /health HTTP/1.1" 200 OK
⏱️ [夜晚切换] 夜晚切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第2轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 336 字符
[LLM原始响应开始]
{
"reasoning": "在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。",
"remove": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 336 字符
[JSON解析] 输入文本预览: {
"reasoning": "在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。",
"remove": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 336 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。', 'remove': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '在第1轮中，DeepSeek-V3.2对我提出了严重指控，指出我第0轮声称Ring-flash-2.0被淘汰，但实际上并没有发生。这一矛盾使我作为狼人的嫌疑大增。因此，DeepSeek-V3.2现在对我构成了最大的威胁，他可能已经识破了我的身份。为了保护自己，我必须尽快淘汰他。MiniMax-M1-80k发言较少，可能是在隐藏自己的角色，但目前还没有证据表明他是医生或预言家。Ring-flash-2.0在第0轮被我选为淘汰目标但被医生保护，现在他可能对我的行为有所怀疑，但他的威胁不如DeepSeek-V3.2明显。因此，选择淘汰DeepSeek-V3.2是最具战略性的决定。', 'remove': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'remove': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [狼人击杀] 狼人 Kimi-Dev-72B 行动完成: 8.22秒
Kimi-Dev-72B eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 8.25秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:52369 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52407 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 324 字符
[LLM原始响应开始]
{
"reasoning": "经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。",
"protect": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 324 字符
[JSON解析] 输入文本预览: {
"reasoning": "经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-fl...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。",
"protect": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 324 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。', 'protect': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。', 'protect': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '经过分析当前局势，我认为自己是最需要保护的目标。首先，作为医生，我掌握着游戏的关键信息，包括前两轮的保护记录和对玩家行为的观察。在第一轮夜晚，我成功保护了Ring-flash-2.0，第二轮我保护了自己。现在GLM-4.6被狼人淘汰，说明狼人正在针对表现积极的玩家。我在前两轮辩论中表现得较为活跃，特别是对Kimi-Dev-72B的质疑可能引起了狼人的注意。考虑到预言家身份尚未明确，而Kimi-Dev-72B行为可疑但可能是狼人故意制造的烟雾弹，保护自己是最稳妥的选择。如果我是狼人的目标，这能确保游戏继续；如果不是，我也能继续观察并做出更准确的判断。', 'protect': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'protect': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [医生保护] 医生 DeepSeek-V3.2 行动完成: 19.19秒
DeepSeek-V3.2 protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 19.21秒

⏱️ 【预言家正在查验身份。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⏱️ [预言家查验] 预言家 Ring-flash-2.0 行动完成: 1.15秒
Warning: Ring-flash-2.0 failed to choose investigation target, randomly selected MiniMax-M1-80k
[WebSocket] 夜间行动通知已发送: night_investigate by Ring-flash-2.0
⏱️ [预言家正在查验身份。] 预言家正在查验身份。完成: 1.16秒

⏱️ 【夜晚阶段解决】
夜晚阶段没有人被淘汰（医生保护成功）。
⏱️ [天亮阶段] 切换暂停2秒...
INFO:     127.0.0.1:52443 - "GET /health HTTP/1.1" 200 OK
[RealtimeLogger] session_20251101_005844 [phase_change] 进入day阶段
[WebSocket] 阶段变更通知已发送: day (第2轮)
⏱️ [夜晚阶段解决] 夜晚阶段解决完成: 2.01秒

⏱️ 【夜晚阶段后检查胜负。】
⏱️ [夜晚阶段后检查胜负。] 夜晚阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始辩论和投票。】
⏱️ [阶段切换] 暂停2秒...
⏱️ [切换暂停] 切换暂停完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入debate阶段
[WebSocket] 阶段变更通知已发送: debate (第2轮)
⏱️ [阶段通知] 阶段通知发送: 0.00秒
本轮发言顺序: DeepSeek-V3.2, Kimi-Dev-72B, MiniMax-M1-80k, Ring-flash-2.0
[并发生成] 使用3线程并发生成发言内容...
[批次 1/2] 并发生成: DeepSeek-V3.2, Kimi-Dev-72B, MiniMax-M1-80k
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 1.00
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: MiniMax-M1-80k did not return a valid dialogue, using default
INFO:     127.0.0.1:52580 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 439 字符
[LLM原始响应开始]
{"reasoning": "现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。",
 "say": "环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。"}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 439 字符
[JSON解析] 输入文本预览: {"reasoning": "现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{"reasoning": "现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。",
 "say": "环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。"}'
[JSON字符串解析] 文本长度: 439 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
[JSON解析] 直接解析结果: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
[JSON解析] 最终结果: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
[LLM成功] 返回有效结果: {'reasoning': '现在，唯一的狼人身份暴露，我需要寻找办法转移注意力。看剩余玩家，医生保护成功了我淘汰的选择，且剩余村民可能还有预言家和医生。我应该尝试指控剩餘玩家是医生或预言家，混淆视听。比如，指控Ring-flash-2.0是医生，因为第0轮他被我点名但是没死，医生保护了。同时，可以质疑MiniMax-M1-80k为何发言少，是不是在隐藏身份。这样即使我是狼人，也能把怀疑引向别人，为村庄内斗争取时间。', 'say': '环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。'}
INFO:     127.0.0.1:52707 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:52815 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 581 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。",
  "say": "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 581 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。",
  "say": "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"
}'
[JSON字符串解析] 文本长度: 581 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
[JSON字符串解析] 解析完成，返回: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
[JSON解析] 直接解析结果: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
[JSON解析] 最终结果: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
[LLM成功] 返回有效结果: {'reasoning': '作为医生，我成功保护了自己两次，现在局势紧张。我需要分析狼人策略：他们连续两晚未得手，说明他们可能瞄准了被保护目标，或者试图混淆视听。Kimi-Dev-72B的行为极其可疑，他在首轮捏造事实，第二轮又虚构玩家，明显在扰乱好人阵营。MiniMax-M1-80k和Ring-flash-2.0的持续沉默需要被打破，他们可能隐藏身份或信息。我打算揭示我的医生身份来施加压力，因为狼人数量已减少，公开身份可以引导投票，但需谨慎权衡风险。目标是团结剩余玩家，重点审查Kimi的异常行为，并敦促沉默者发言以暴露更多线索。', 'say': "各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！"}
  ✓ DeepSeek-V3.2 发言生成完成 (293字)
  ✓ Kimi-Dev-72B 发言生成完成 (215字)
  ✓ MiniMax-M1-80k 发言生成完成 (13字)
⏱️ [批次1] 批次1完成: 30.69秒
[批次 2/2] 并发生成: Ring-flash-2.0
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
Warning: Ring-flash-2.0 did not return a valid dialogue, using default
  ✓ Ring-flash-2.0 发言生成完成 (13字)
⏱️ [批次2] 批次2完成: 0.16秒
⏱️ [发言生成] 所有发言生成完成: 30.86秒
[生成完成] 所有发言已生成，开始按顺序发送和展示...
[1/4] DeepSeek-V3.2 (Doctor): 各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！
[RealtimeLogger] session_20251101_005844 [action] DeepSeek-V3.2 发言: 各位玩家，我是医生DeepSeek-V3.2。在之前的夜晚，我两次保护自己，避免了狼人的淘汰，这证明了医生的存在。现在，我们处于关键时刻：狼人很可能在试图混淆我们。Kimi-Dev-72B，你的行为非常可疑——第一轮你错误指控Ring-flash-2.0被淘汰，第二轮你虚构了'Liberia'玩家。这种故意捏造事实的行为，只有狼人才会用来制造混乱。MiniMax-M1-80k和Ring-flash-2.0，你们一直发言简短，现在必须站出来分享你们的观察。狼人数量已经减少，我们不能让沉默者掩护他们。我建议本轮投票淘汰Kimi，他的矛盾言论已经暴露太多。让我们一起合作，终结这场游戏！
[WebSocket] 辩论发言通知已发送: DeepSeek-V3.2
⏱️ [发送-DeepSeek-V3.2] DeepSeek-V3.2发送完成: 0.01秒
⏱️ [展示暂停] 293字 → 暂停 7.3秒
INFO:     127.0.0.1:52897 - "GET /health HTTP/1.1" 200 OK
[2/4] Kimi-Dev-72B (Werewolf): 环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。
[RealtimeLogger] session_20251101_005844 [action] Kimi-Dev-72B 发言: 环顾四周，我想起了几个疑点。首先，Ring-flash-2.0在第0轮被我狼队选为猎物，但神奇般地幸存下来。如果当晚的医生正好救了他，那他可能是医生！医生为了自保，可能会在战斗中保持低调。再看MiniMax-M1-80k，整个辩论他话不多，沉默可能是保护自己的盾牌，但也是隐藏真实身份信号。他会不会是预言家或者医生？因为如果是我同类，早被扫除了。我建议大家重新盘查这两人的历史发言。这样，也许能找到更多线索，而不是针对我一个狼人。
[WebSocket] 辩论发言通知已发送: Kimi-Dev-72B
⏱️ [发送-Kimi-Dev-72B] Kimi-Dev-72B发送完成: 0.02秒
⏱️ [展示暂停] 215字 → 暂停 5.4秒
[3/4] MiniMax-M1-80k (Villager): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] MiniMax-M1-80k 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: MiniMax-M1-80k
⏱️ [发送-MiniMax-M1-80k] MiniMax-M1-80k发送完成: 0.01秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
[4/4] Ring-flash-2.0 (Seer): 我需要仔细观察并寻找线索。
[RealtimeLogger] session_20251101_005844 [action] Ring-flash-2.0 发言: 我需要仔细观察并寻找线索。
[WebSocket] 辩论发言通知已发送: Ring-flash-2.0
⏱️ [发送-Ring-flash-2.0] Ring-flash-2.0发送完成: 0.02秒
⏱️ [展示暂停] 13字 → 暂停 0.5秒
⏱️ [发言发送] 所有发言发送完成: 13.77秒
⏱️ [发言暂停汇总] 总暂停时间: 13.7秒
⏱️ [发言阶段] 发言阶段总耗时: 46.63秒
⏱️ [投票阶段] 切换暂停2秒...
⏱️ [投票切换] 投票切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入voting阶段
[WebSocket] 阶段变更通知已发送: voting (第2轮)
⏱️ [投票通知] 投票通知发送: 0.00秒
⏱️ [投票] 开始顺序处理投票（20秒超时）...
[LLM调用] 第1/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.50
[LLM调用错误] 第1/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.70
[LLM调用错误] 第2/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: MiniMaxAI/MiniMax-M1-80k | 温度: 0.90
[LLM调用错误] 第3/3次失败: TypeError: 'NoneType' object is not subscriptable
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [MiniMax-M1-80k] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] MiniMax-M1-80k 投票给 Kimi-Dev-72B
[WebSocket] 投票通知已发送: MiniMax-M1-80k -> Kimi-Dev-72B
⏱️ [投票-MiniMax-M1-80k] MiniMax-M1-80k投票完成: 0.28秒
⚠️ 未知的延迟类型: vote
INFO:     127.0.0.1:52945 - "GET /health HTTP/1.1" 200 OK
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
[LLM响应] 成功获取响应，长度: 364 字符
[LLM原始响应开始]
{
  "reasoning": "现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。",
  "vote": "MiniMax-M1-80k"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 364 字符
[JSON解析] 输入文本预览: {
  "reasoning": "现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。",
  "vote": "MiniMax-M1-80k"
}'
[JSON字符串解析] 文本长度: 364 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。', 'vote': 'MiniMax-M1-80k'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 直接解析结果: {'reasoning': '现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 最终结果: {'reasoning': '现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。', 'vote': 'MiniMax-M1-80k'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在的情况非常危急，我是最后一只狼人，而且村民们似乎已经对我产生了怀疑。DeepSeek-V3.2公开指控我是狼人，并且他的发言很有影响力。但是，如果我投票淘汰他，医生可能会再次救他。另外，MiniMax-M1-80k一直很沉默，可能是一个关键角色，比如预言家或医生。Ring-flash-2.0之前被我 targeting 过，但他被医生救了。现在，如果我投票 MiniMax，村民们可能不会注意，但风险是如果他不是关键角色，那么我可能会浪费机会。但是，如果我投票 DeepSeek，他可能是医生，如果他被救了，村民们会更怀疑我。所以，我决定投票 MiniMax-M1-80k，希望他是个关键角色，或者至少可以转移村民的注意力。', 'vote': 'MiniMax-M1-80k'}
[LLM结果] 提取键 'vote': MiniMax-M1-80k
[LLM成功] 返回有效结果: MiniMax-M1-80k
[RealtimeLogger] session_20251101_005844 [vote] Kimi-Dev-72B 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Kimi-Dev-72B -> MiniMax-M1-80k
⏱️ [投票-Kimi-Dev-72B] Kimi-Dev-72B投票完成: 7.85秒
⚠️ 未知的延迟类型: vote
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:53001 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53054 - "GET /health HTTP/1.1" 200 OK
⚠️ [DeepSeek-V3.2] 投票超时(>20秒)，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] DeepSeek-V3.2 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: DeepSeek-V3.2 -> MiniMax-M1-80k
⏱️ [投票-DeepSeek-V3.2] DeepSeek-V3.2投票超时，使用默认: 20.01秒
INFO:     127.0.0.1:53154 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 317 字符
[LLM原始响应开始]
{
  "reasoning": "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 317 字符
[JSON解析] 输入文本预览: {
  "reasoning": "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
  "reasoning": "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。",
  "vote": "Kimi-Dev-72B"
}'
[JSON字符串解析] 文本长度: 317 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 直接解析结果: {'reasoning': "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 最终结果: {'reasoning': "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "作为医生，我分析了当前局势。Kimi-Dev-72B的行为极其可疑：第一轮他错误地声称Ring-flash-2.0被淘汰，第二轮又虚构了'Liberia'这个不存在的玩家。这种刻意制造混乱的行为很可能是狼人试图误导好人阵营。虽然他本轮试图转移焦点到Ring-flash-2.0和MiniMax-M1-80k身上，但这更像是狼人的推卸责任策略。考虑到GLM-4.6作为积极玩家被狼人淘汰，而Kimi一直散布虚假信息，他极有可能是剩下的狼人之一。另外两位玩家虽然发言简短，但缺乏直接可疑行为。因此我决定投票淘汰最可疑的Kimi-Dev-72B。", 'vote': 'Kimi-Dev-72B'}
[LLM结果] 提取键 'vote': Kimi-Dev-72B
[LLM成功] 返回有效结果: Kimi-Dev-72B
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.50
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.70
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 0.90
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
⚠️ [Ring-flash-2.0] 未返回有效投票，使用默认投票
[RealtimeLogger] session_20251101_005844 [vote] Ring-flash-2.0 投票给 MiniMax-M1-80k
[WebSocket] 投票通知已发送: Ring-flash-2.0 -> MiniMax-M1-80k
⏱️ [投票-Ring-flash-2.0] Ring-flash-2.0投票完成: 0.17秒
⚠️ 未知的延迟类型: vote
⏱️ [投票阶段] 投票阶段完成: 35.03秒
MiniMax-M1-80k 投票淘汰 Kimi-Dev-72B
Kimi-Dev-72B 投票淘汰 MiniMax-M1-80k
DeepSeek-V3.2 投票淘汰 MiniMax-M1-80k
Ring-flash-2.0 投票淘汰 MiniMax-M1-80k
⏱️ [玩家开始辩论和投票。] 玩家开始辩论和投票。完成: 83.67秒

⏱️ 【投票后放逐】
⏱️ [放逐] MiniMax-M1-80k 被投票放逐
[WebSocket] 玩家放逐通知已发送: MiniMax-M1-80k (第2轮)
[调试] 成功从current_players中移除玩家: MiniMax-M1-80k, 剩余玩家: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B']
Player MiniMax-M1-80k not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
Player MiniMax-M1-80k not in current players: ['Ring-flash-2.0', 'DeepSeek-V3.2', 'Kimi-Dev-72B']
[调试] remove_player调用时玩家MiniMax-M1-80k已不在current_players中，可能是重复移除或状态不同步
大多数人投票淘汰了MiniMax-M1-80k。
⏱️ [放逐处理] 放逐处理完成: 0.00秒
⏱️ [投票后放逐] 投票后放逐完成: 0.01秒

⏱️ 【白天阶段后检查胜负。】
⏱️ [白天阶段后检查胜负。] 白天阶段后检查胜负。完成: 0.00秒

⏱️ 【玩家开始总结辩论。】
⏱️ [玩家总结] 开始收集玩家总结...
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 1.00
[LLM调用] 第1/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第1/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第2/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第2/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM调用] 第3/3次尝试 | 模型: inclusionAI/Ring-flash-2.0 | 温度: 1.00
[LLM调用错误] 第3/3次失败: BadRequestError: Error code: 400 - {'code': 20012, 'message': 'Model does not exist. Please check it carefully.', 'data': None}
[错误详情] 这是一个LLM调用异常，不是JSON解析异常
[LLM错误] 没有获取到任何响应内容
[LLM失败] 所有3次重试均失败，返回None
INFO:     127.0.0.1:53234 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 628 字符
[LLM原始响应开始]
{
"reasoning": "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。",
"summary": "本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 628 字符
[JSON解析] 输入文本预览: {
"reasoning": "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。",
"summary": "本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。"
}'
[JSON字符串解析] 文本长度: 628 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
[JSON解析] 直接解析结果: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
[JSON解析] 最终结果: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
[LLM成功] 返回有效结果: {'reasoning': "在本轮辩论中，我被DeepSeek-V3.2严重指控，他指出我之前的言辞存在矛盾，比如错误指控Ring-flash-2.0被淘汰以及捏造'Liberia'玩家。这些指控让我作为狼人的嫌疑大增。然而，我尝试转移注意力到其他玩家，尤其是Ring-flash-2.0和MiniMax-M1-80k，强调他们的可疑行为和沉默。Ring-flash-2.0在第0轮被狼人 targeting 但被医生保护，他可能是医生。MiniMax-M1-80k发言少，可能隐藏身份。但最终， villagers 投票淘汰了MiniMax-M1-80k。现在剩下的玩家是DeepSeek-V3.2（医生）、我和Ring-flash-2.0。我必须在接下来的夜晚尽快行动，淘汰DeepSeek-V3.2，并在白天继续辩解。", 'summary': '本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。'}
Kimi-Dev-72B summary: 本轮辩论中，DeepSeek-V3.2强烈指控我为狼人，指出我的多次矛盾和捏造行为。我尝试将怀疑引向Ring-flash-2.0和MiniMax-M1-80k，但村民最终投票淘汰了MiniMax-M1-80k。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是医生。现在，剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。我必须尽快在夜晚淘汰DeepSeek-V3.2，并在白天继续争取 villagers 的信任。
[WebSocket] 玩家总结通知已发送: Kimi-Dev-72B
INFO:     127.0.0.1:53314 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53424 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 464 字符
[LLM原始响应开始]
{
"reasoning": "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。",
"summary": "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 464 字符
[JSON解析] 输入文本预览: {
"reasoning": "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Rin...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。",
"summary": "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"
}'
[JSON字符串解析] 文本长度: 464 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
[JSON字符串解析] 解析完成，返回: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
[JSON解析] 直接解析结果: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
[JSON解析] 最终结果: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
[LLM成功] 返回有效结果: {'reasoning': "这次的辩论让我发现Kimi-Dev-72B完全暴露了狼人身份！他竟然直接说'我狼队'，这明显是口误承认自己是狼人。同时，他还试图转移焦点，将我（医生）的身份暗示给Ring-flash-2.0，这完全错误——因为我才是真正的医生。MiniMax-M1-80k和Ring-flash-2.0的沉默很可疑，可能是在掩护Kimi。现在只剩下我们三个玩家，必须快速行动，下一轮投票淘汰Kimi就能获胜。", 'summary': "我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。"}
DeepSeek-V3.2 summary: 我是医生DeepSeek-V3.2，在辩论中我发现Kimi-Dev-72B露出了致命破绽：他直接说出'我狼队'，明确承认自己是狼人。他还错误地暗示Ring-flash-2.0可能是医生，这完全不符合事实，因为第0轮正是我保护了Ring-flash-2.0。MiniMax-M1-80k和Ring-flash-2.0继续保持沉默，这种被动态度可能是在为狼人打掩护。考虑到现在只剩三名玩家，而我是医生，下一轮必须投票淘汰Kimi-Dev-72B，这样就能确保村民阵营获胜。
[WebSocket] 玩家总结通知已发送: DeepSeek-V3.2
Warning: Ring-flash-2.0 did not return a valid summary, using default
Ring-flash-2.0 summary: 我需要仔细思考今天发生的情况，并仔细分析局势。
[WebSocket] 玩家总结通知已发送: Ring-flash-2.0
⏱️ [玩家总结] 玩家总结完成: 27.89秒
⏱️ [玩家开始总结辩论。] 玩家开始总结辩论。完成: 27.89秒

⏱️ 第2轮结束
⏱️ [第2轮] 第2轮总耗时: 144.32秒

================================================================================
📊 【第 2 轮时间统计】
================================================================================
  狼人正在选择淘汰目标。                   :   8.25秒 (  5.7%)
  医生正在选择保护目标。                   :  19.21秒 ( 13.3%)
  预言家正在查验身份。                    :   1.16秒 (  0.8%)
  夜晚阶段解决                        :   2.01秒 (  1.4%)
  夜晚阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始辩论和投票。                    :  83.67秒 ( 58.0%)
  投票后放逐                         :   0.01秒 (  0.0%)
  白天阶段后检查胜负。                    :   0.00秒 (  0.0%)
  玩家开始总结辩论。                     :  27.89秒 ( 19.3%)
────────────────────────────────────────────────────────────────────────────────
  总耗时                           : 144.32秒 (100.0%)
================================================================================

STARTING ROUND: 3

================================================================================
⏱️ 【第 3 轮开始】
================================================================================

⏱️ [夜晚开始] 切换暂停2秒...
⏱️ [夜晚切换] 夜晚切换完成: 2.00秒
[RealtimeLogger] session_20251101_005844 [phase_change] 进入night阶段
[WebSocket] 阶段变更通知已发送: night (第3轮)
⏱️ [夜晚通知] 夜晚通知发送: 0.00秒

⏱️ 【狼人正在选择淘汰目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/moonshotai/Kimi-Dev-72B | 温度: 0.50
INFO:     127.0.0.1:53483 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 338 字符
[LLM原始响应开始]
{
"reasoning": "现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。",
"remove": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 338 字符
[JSON解析] 输入文本预览: {
"reasoning": "现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。",
"remove": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 338 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': '现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。', 'remove': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': '现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': '现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': '现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。', 'remove': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': '现在只剩下我这只狼人，医生DeepSeek-V3.2，和可能的村民Ring-flash-2.0。医生DeepSeek-V3.2已经连续两次在夜晚阶段成功保护了目标，说明他可能是医生。我必须尽快在夜晚淘汰DeepSeek-V3.2，否则他将继续保护其他玩家。Ring-flash-2.0被我狼队 targeting 过两次但被医生救下，他可能是村民，但也有可能是医生。不过，医生已经救了两次，第三次再救的可能性降低。所以，我应该选择淘汰DeepSeek-V3.2，这样可以减少医生的影响力，增加狼人获胜的机会。同时，在白天辩论中，我需要继续努力解释自己的行为，争取村民的信任，转移怀疑。', 'remove': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'remove': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [狼人击杀] 狼人 Kimi-Dev-72B 行动完成: 8.24秒
Kimi-Dev-72B eliminated DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_eliminate by Kimi-Dev-72B
⏱️ [狼人正在选择淘汰目标。] 狼人正在选择淘汰目标。完成: 8.25秒

⏱️ 【医生正在选择保护目标。】
⏱️ [夜间延迟] 暂停1.00秒
[LLM调用] 第1/3次尝试 | 模型: siliconflow/deepseek-ai/DeepSeek-V3.2-Exp | 温度: 0.50
INFO:     127.0.0.1:53553 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53684 - "GET /health HTTP/1.1" 200 OK
[LLM响应] 成功获取响应，长度: 383 字符
[LLM原始响应开始]
{
"reasoning": "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。",
"protect": "DeepSeek-V3.2"
}
[LLM原始响应结束]
[JSON解析] 开始解析响应...
[JSON解析] 开始解析，输入文本长度: 383 字符
[JSON解析] 输入文本预览: {
"reasoning": "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-De...
[语言清理] 开始清理混合语言响应...
[语言清理] 策略2成功：提取到完整JSON对象
[JSON解析] 尝试从markdown中解析JSON...
[Markdown解析] 开始解析markdown文本...
[Markdown解析] AST解析成功，子元素数量: 1
[Markdown解析] 开始遍历AST子元素...
[Markdown解析] 处理第0个子元素，类型: <class 'marko.block.Paragraph'>
[Markdown解析] 子元素不是代码块，类型: <class 'marko.block.Paragraph'>
[Markdown调试] 子元素属性: ['__annotations__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_prefix', '_tight', 'break_paragraph', 'children', 'get_type', 'inline_body', 'is_setext_heading', 'match', 'override', 'parse', 'pattern', 'priority', 'virtual']
[Markdown解析] 没有找到有效的JSON代码块
[JSON解析] markdown解析结果: None
[JSON解析] markdown解析失败，尝试直接解析JSON字符串...
[JSON字符串解析] 开始解析，输入文本: '{
"reasoning": "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。",
"protect": "DeepSeek-V3.2"
}'
[JSON字符串解析] 文本长度: 383 字符
[JSON字符串解析] 使用yaml.safe_load解析...
[JSON字符串解析] yaml.safe_load成功，结果类型: <class 'dict'>, 内容: {'reasoning': "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。", 'protect': 'DeepSeek-V3.2'}
[JSON字符串解析] 解析完成，返回: {'reasoning': "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。", 'protect': 'DeepSeek-V3.2'}
[JSON解析] 直接解析结果: {'reasoning': "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。", 'protect': 'DeepSeek-V3.2'}
[JSON解析] 最终结果: {'reasoning': "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。", 'protect': 'DeepSeek-V3.2'}
[JSON解析] 解析完成，结果类型: <class 'dict'>, 内容: {'reasoning': "目前游戏进入第3轮，场上仅剩三名玩家：Kimi-Dev-72B、Ring-flash-2.0和我自己（DeepSeek-V3.2）。根据我的私人观察记录，Kimi-Dev-72B在第2轮辩论中直接说出'我狼队'，明确承认自己是狼人，这已经暴露了他的身份。Ring-flash-2.0虽然发言简短，但一直未被狼人针对，且第0轮我成功保护过他，他可能是村民或预言家。作为医生，我必须优先保护关键角色或自己以确保村民阵营获胜。考虑到Kimi-Dev-72B是明确的狼人，狼人本轮很可能针对我或Ring-flash-2.0进行淘汰。由于我自己是医生，如果被淘汰，村民阵营将失去保护能力，因此保护自己是最稳妥的选择，这样可以确保下一轮白天投票淘汰Kimi-Dev-72B后村民获胜。", 'protect': 'DeepSeek-V3.2'}
[LLM结果] 提取键 'protect': DeepSeek-V3.2
[LLM成功] 返回有效结果: DeepSeek-V3.2
⏱️ [医生保护] 医生 DeepSeek-V3.2 行动完成: 22.27秒
DeepSeek-V3.2 protected DeepSeek-V3.2
[WebSocket] 夜间行动通知已发送: night_protect by DeepSeek-V3.2
⏱️ [医生正在选择保护目标。] 医生正在选择保护目标。完成: 22.28秒